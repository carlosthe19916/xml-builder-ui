{"version":3,"sources":["logo-navbar.svg","logo.png","Pages/Layout/Forbidden403/index.tsx","Pages/Layout/Forbidden403/Forbidden403.tsx","Pages/Layout/NotFound404/index.tsx","Pages/Layout/NotFound404/NotFound404.tsx","Pages/Layout/ServiceUnavailable503/index.tsx","Pages/Layout/ServiceUnavailable503/ServiceUnavailable503.tsx","Pages/HomePage/index.tsx","Pages/HomePage/HomePage.tsx","api/apiClient.tsx","store/alert/actions.tsx","store/organizationContext/actions.tsx","api/organizations.tsx","store/organizationContext/reducer.tsx","store/organizationContext/selectors.tsx","SmartComponents/OrganizationContextSelector/OrganizationContextSelector.tsx","SmartComponents/OrganizationContextSelector/index.tsx","PresentationalComponents/KeysPageTabs/KeysPageTabs.tsx","PresentationalComponents/KeysPageTabs/index.tsx","PresentationalComponents/KeyButtonModal/index.tsx","PresentationalComponents/KeyButtonModal/KeyButtonModal.tsx","PresentationalComponents/SkeletonTable/index.tsx","PresentationalComponents/SkeletonTable/SkeletonTable.tsx","PresentationalComponents/ErrorTable/index.tsx","PresentationalComponents/ErrorTable/ErrorTable.tsx","PresentationalComponents/EmptyTable/index.tsx","PresentationalComponents/EmptyTable/EmptyTable.tsx","Pages/KeysPage/ActiveKeysPage/ActiveKeysPage.tsx","store/organizationKeys/actions.tsx","store/organizationKeys/reducer.tsx","store/organizationKeys/selectors.tsx","store/organizationComponents/actions.tsx","store/organizationComponents/reducer.tsx","store/organizationComponents/selectors.tsx","Pages/KeysPage/ActiveKeysPage/index.tsx","Pages/KeysPage/KeyProvidersPage/KeyProvidersPage.tsx","store/serverInfo/actions.tsx","api/serverInfo.tsx","store/serverInfo/reducer.tsx","store/serverInfo/selectors.tsx","store/deleteDialog/actions.ts","store/deleteDialog/reducer.ts","store/deleteDialog/selectors.ts","store/organizationComponent/actions.tsx","store/organizationComponent/reducer.tsx","store/organizationComponent/selectors.tsx","Pages/KeysPage/KeyProvidersPage/index.tsx","Pages/KeysPage/KeyListPage/KeyListPage.tsx","Pages/KeysPage/KeyListPage/index.tsx","PresentationalComponents/PropertySwitch/index.tsx","PresentationalComponents/PropertySwitch/PropertySwitch.tsx","PresentationalComponents/PropertySelect/index.tsx","PresentationalComponents/PropertySelect/PropertySelect.tsx","PresentationalComponents/PropertyFile/index.tsx","PresentationalComponents/PropertyFile/PropertyFile.tsx","PresentationalComponents/ProviderForm/index.tsx","PresentationalComponents/ProviderForm/ProviderForm.tsx","SmartComponents/ManageProviderModal/ManageProviderModal.tsx","SmartComponents/ManageProviderModal/index.tsx","Pages/KeysPage/ManageProviderPage/ManageProviderPage.tsx","Pages/KeysPage/ManageProviderPage/index.tsx","Pages/KeysPage/KeysPage.tsx","Pages/KeysPage/index.tsx","PresentationalComponents/SearchBoxForm/index.tsx","PresentationalComponents/SearchBoxForm/SearchBoxForm.tsx","Pages/OrganizationListPage/OrganizationListPage.tsx","store/organizationList/actions.tsx","store/organizationList/reducer.tsx","store/organizationList/selectors.tsx","store/organization/actions.tsx","store/organization/reducer.tsx","store/organization/selectors.tsx","Pages/OrganizationListPage/index.tsx","SmartComponents/OrganizationForm/OrganizationForm.tsx","SmartComponents/OrganizationForm/index.tsx","SmartComponents/ManageOrganizationModal/ManageOrganizationModal.tsx","SmartComponents/ManageOrganizationModal/index.tsx","Pages/OrganizationPage/index.tsx","Pages/OrganizationPage/OrganizationPage.tsx","Utilities/Utils.tsx","PresentationalComponents/GenericToolbarDocument/index.tsx","PresentationalComponents/GenericToolbarDocument/GenericToolbarDocument.tsx","SmartComponents/GenericDocument/GenericDocument.tsx","store/document/actions.tsx","api/documents.tsx","SmartComponents/GenericDocument/index.tsx","PresentationalComponents/DocumentsPageTabs/DocumentsPageTabs.tsx","Utilities/EnvUtils.tsx","PresentationalComponents/DocumentsPageTabs/index.tsx","PresentationalComponents/TipoComprobanteSelect/TipoComprobanteSelect.tsx","PresentationalComponents/TipoComprobanteSelect/index.tsx","PresentationalComponents/TipoDocumentoIdentidadSelect/TipoDocumentoIdentidadSelect.tsx","PresentationalComponents/TipoDocumentoIdentidadSelect/index.tsx","PresentationalComponents/TipoIgvSelect/TipoIgvSelect.tsx","PresentationalComponents/TipoIgvSelect/index.tsx","PresentationalComponents/SwitchController/index.tsx","PresentationalComponents/SwitchController/SwitchController.tsx","PresentationalComponents/TipoNotaCreditoSelect/TipoNotaCreditoSelect.tsx","PresentationalComponents/TipoNotaCreditoSelect/index.tsx","PresentationalComponents/TipoNotaDebitoSelect/TipoNotaDebitoSelect.tsx","PresentationalComponents/TipoNotaDebitoSelect/index.tsx","PresentationalComponents/StandardDocumentForm/index.tsx","PresentationalComponents/StandardDocumentForm/StandardDocumentForm.tsx","SmartComponents/GenericOrganizationDocument/GenericOrganizationDocument.tsx","store/organizationDocument/actions.tsx","SmartComponents/GenericOrganizationDocument/index.tsx","Pages/DocumentsPage/StandardDocumentPage/StandardDocumentPage.tsx","Pages/DocumentsPage/StandardDocumentPage/index.tsx","PresentationalComponents/BajaDocumentForm/index.tsx","PresentationalComponents/BajaDocumentForm/BajaDocumentForm.tsx","Pages/DocumentsPage/BajaDocumentPage/BajaDocumentPage.tsx","Pages/DocumentsPage/BajaDocumentPage/index.tsx","Pages/DocumentsPage/DocumentsPage.tsx","Pages/DocumentsPage/index.tsx","Routes.tsx","Pages/Layout/BasicLayout/BasicLayout.tsx","Pages/Layout/BasicLayout/index.tsx","SmartComponents/DeleteDialog/DeleteDialog.tsx","SmartComponents/DeleteDialog/index.tsx","PresentationalComponents/XmlBuilderComponent/index.tsx","PresentationalComponents/XmlBuilderComponent/XmlBuilderComponent.tsx","SmartComponents/OrganizationContextLoader/OrganizationContextLoader.tsx","SmartComponents/OrganizationContextLoader/index.tsx","App.tsx","serviceWorker.ts","store/rootReducer.tsx","api/apiInit.tsx","index.tsx","store/index.tsx"],"names":["module","exports","Forbidden403","Fragment","PageSection","Bullseye","EmptyState","variant","EmptyStateVariant","full","EmptyStateIcon","icon","ErrorCircleOIcon","Title","headingLevel","size","NotFound404","ServiceUnavailable503","HomePage","PageSectionVariants","light","TextContent","Text","component","Grid","lg","gutter","GridItem","Card","CardBody","ApplicationsIcon","EmptyStateBody","to","className","FileExportIcon","href","Stack","StackItem","style","minHeight","Button","BackendAPIClient","path","body","method","config","axios","request","Object","assign","url","data","this","addNotification","require","alert","dispatch","alertFetchEndpoint","err","errorDescription","response","error","title","message","description","dismissable","fetchOrganizationsRequest","createAction","fetchOrganizationsSuccess","fetchOrganizationsFailure","selectOrganizationContext","fetchOrganizations","ApiClient","get","then","res","catch","defaultState","selected","organizations","status","organizationsState","state","srcs","selectedOrganization","OrganizationContextSelector","props","onToggle","isOpen","setState","onSelect","event","value","organization","find","p","name","onSearchInputChange","searchValue","onSearchButtonClick","filtered","trim","filter","org","toLowerCase","indexOf","filteredItems","ContextSelector","toggleText","searchInputValue","screenReaderLabel","map","item","index","ContextSelectorItem","key","React","Component","mapStateToProps","organizationContextSelectors","withRouter","connect","KeysPageTabs","match","history","activeKey","children","marginBottom","FormGroup","label","fieldId","push","id","Tabs","isFilled","eventKey","organizationId","params","Tab","KeyButtonModal","buttonLabel","keyValue","useState","isModalOpen","setIsModalOpen","handleModalToggle","onClick","Modal","isSmall","onClose","actions","isFooterLeftAligned","TextVariants","blockquote","SkeletonTable","createColumns","colSize","Array","Skeleton","createRows","rowSize","columns","numberOfCols","length","cells","Table","rows","aria-label","ErrorTable","EmptyStateSecondaryActions","retry","EmptyTable","SearchIcon","onClearAllFilters","ActiveKeysPage","loadKeysAndComponents","fetchOrganizationKeys","fetchOrganizationComponents","activeMap","Map","getOrganizationId","processKeysAndComponents","organizationKeys","organizationComponents","active","i","keys","j","providerId","provider","t","kid","set","filtersInRowsAndCells","forEach","type","publicKey","certificate","parent","fullWidth","ClipboardCopy","handleOnTableCollapse","_event","rowKey","renderTable","organizationKeysError","organizationComponentsError","organizationKeysFetchStatus","organizationComponentsFetchStatus","onCollapse","transforms","cellFormatters","expandable","cellWidth","_prevProps","prevState","currentOrganizationId","fetchOrganizationKeysRequest","fetchOrganizationKeysSuccess","fetchOrganizationKeysFailure","meta","replace","getOrganizationKeys","keysMetadata","byOrganizationId","errors","fetchStatus","organizationKeysState","selectOrganizationKeys","selectOrganizationKeysFetchStatus","selectOrganizationKeysError","fetchOrganizationComponentsRequest","fetchOrganizationComponentsSuccess","fetchOrganizationComponentsFailure","getOrganizationComponents","organizationComponentsState","selectOrganizationComponents","selectOrganizationComponentsFetchStatus","selectOrganizationComponentsError","ownProps","organizationKeysSelectors","organizationComponentsSelectors","mapDispatchToProps","organizationKeysActions","organizationComponentsActions","KeyProvidersPage","loadSystemInfoAndComponents","fetchServerInfo","components","getComponentEditUrl","handleEditar","handleDelete","showDeleteDialog","closeDeleteDialog","requestDeleteComponent","onDelete","onCancel","serverInfoError","serverInfoFetchStatus","rowId","serverInfo","CardHeader","Toolbar","ToolbarGroup","ToolbarItem","componentTypes","keyProviders","sort","a","b","localeCompare","fetchServerInfoRequest","fetchServerInfoSuccess","fetchServerInfoFailure","undefined","serverInfoState","selectServerInfo","selectServerInfoFetchStatus","selectServerInfoError","openModal","closeModal","processing","isProcessing","isError","deleteDialogState","fetchComponentRequest","fetchComponentSuccess","fetchComponentFailure","createComponentRequest","createComponentSuccess","createComponentFailure","updateComponentRequest","updateComponentSuccess","updateComponentFailure","deleteComponentRequest","deleteComponentSuccess","deleteComponentFailure","fetchComponent","componentId","getOrganizationComponent","requestCreateComponent","post","createOrganizationComponent","requestUpdateComponent","put","updateOrganizationComponent","delete","deleteOrganizationComponent","byId","selectComponent","selectComponentFetchStatus","selectComponentError","serverInfoSelectors","serverInfoActions","componentActions","deleteDialogActions","KeyListPage","providerPriority","PropertySwitch","handleChange","isChecked","onChange","defaultValue","property","Switch","labelOff","PropertySelect","handleOnToggle","isExpanded","handleOnSelect","isPlaceholder","clearSelection","toString","Select","SelectVariant","single","selections","ariaLabelledBy","direction","SelectDirection","up","options","option","SelectOption","PropertyFile","file","target","files","reader","FileReader","onloadend","result","fileData","readAsText","Split","SplitItem","TextInput","InputGroup","display","ProviderForm","schema","yup","required","max","min","properties","typeError","validationSchema","shape","defaultValues","priority","enabled","keySize","useForm","mode","register","triggerValidation","setValue","getValues","useEffect","handleOnFormChange","isValid","Form","onSubmit","isHorizontal","helperTextInvalid","aria-describedby","ref","isReadOnly","helperText","propertyError","helpText","renderConfigProperty","ManageProviderModal","getRedirectTo","getPayload","formData","configPayload","create","payload","update","handleModalClose","handleModalSave","saving","componentUUID","Math","random","isLarge","isDisabled","ManageProviderPage","getProviderId","getComponentId","getProvider","componentSelectors","componentFetchStatus","componentError","KeysPage","contextOrganizations","exact","KeyProviderspage","organizationContextActions","SearchBoxForm","handleOnSubmit","filterText","handleSubmit","placeholder","ButtonVariant","tertiary","OrganizationListPage","refreshData","page","pageSize","items","rowIndex","handleEliminar","deleteOrganization","handleSearchSubmit","values","onPageChange","handleOnSetPage","handleOnPageInput","handleOnPerPageSelect","total","totalSize","floor","renderSearchBox","renderPagination","isCompact","Pagination","itemCount","perPage","onPageInput","onSetPage","widgetId","onPerPageSelect","colSpan","createAsyncAction","fetchOrganizationListRequest","fetchOrganizationListSuccess","success","fetchOrganizationListFailure","failure","query","join","searchOrganizations","organizationState","fetchOrganizationRequest","fetchOrganizationSuccess","fetchOrganizationFailure","createOrganizationRequest","createOrganizationSuccess","createOrganizationFailure","updateOrganizationRequest","updateOrganizationSuccess","updateOrganizationFailure","deleteOrganizationRequest","deleteOrganizationSuccess","deleteOrganizationFailure","fetchOrganizationIdByNameRequest","fetchOrganizationIdByNameSuccess","fetchOrganizationIdByNameFailure","fetchOrganization","getOrganizationById","requestCreateOrganization","createOrganization","requestUpdateOrganization","updateOrganization","removeOrganization","fetchOrganizationIdByName","organizationName","GET_ID_BY_NAME_URL","encodeURIComponent","selectOrganization","selectOrganizationFetchStatus","selectOrganizationError","organizationListSelectors","organizationListActions","organizationActions","OrganizationForm","test","nullable","isRequired","aria-invalid","ManageOrganizationModal","organizationFormData","useMasterKeys","organizationUUID","organizationSelectors","OrganizationPage","extractFilenameFromContentDispositionHeaderValue","headers","contentDisposition","filename","matches","exec","GenericToolbarDocument","handleOnDownloadXml","xml","xmlFilename","downloadUrl","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","appendChild","click","remove","handleOnTabClick","tabIndex","activeTab","inputDocument","enrichedData","src","theme","editorProps","$blockScrolling","readOnly","width","GenericDocument","refresh","enrichDocument","createDocument","requestEnrichDocument","documentType","requestCreateDocument","fileName","console","log","span","createEnrichDocumentRequest","createEnrichDocumentSuccess","createEnrichDocumentFailure","createDocumentRequest","createDocumentSuccess","createDocumentFailure","documentActions","DocumentsPageTabs","process","tiposDeComprobantes","TipoComprobanteSelect","handleOnChange","FormSelect","from","FormSelectOption","tiposDeDocumentosIdentidad","TipoDocumentoIdentidadSelect","tiposDeIgv","TipoIgvSelect","SwitchController","labelOn","tiposDeNotasDeCredito","TipoNotaCreditoSelect","tiposDeNotasDeDebito","TipoNotaDebitoSelect","StandardDocumentForm","isOpenRows","setIsOpenRows","tipoComprobante","transform","v","serie","numero","fechaEmision","isNaN","totalDescuentos","totalOtrosCargos","proveedorRuc","proveedorNombreComercial","proveedorCodigoPostal","clienteTipoDocumento","clienteNumeroDocumento","clienteNombre","firmanteRuc","firmanteRazonSocial","detalle","of","cantidad","descripcion","precioUnitario","tipoIgv","unidadMedida","icb","defaultDetalleValues","control","watch","useFieldArray","fields","append","watchTipoComprobante","reduce","detalleErrors","detalleError","marginTop","as","isNotaCredito","isNotaDebito","isNota","md","tipoNota","comprobanteAfectado","comprobanteAfectadoSustento","InputGroupText","htmlFor","newValues","caption","GenericOrganizationDocument","requestCreateOrganizationDocument","requestEnrichOrganizationDocument","createEnrichOrganizationDocumentRequest","createEnrichOrganizationDocumentSuccess","createEnrichOrganizationDocumentFailure","createOrganizationDocumentRequest","createOrganizationDocumentSuccess","createOrganizationDocumentFailure","enrichOrganizationDocument","createOrganizationDocument","organizationDocumentActions","StandardDocumentPage","processFormAndGetInputDocument","form","getTime","proveedor","ruc","razonSocial","codigoPostal","cliente","tipoDocumentoIdentidad","numeroDocumentoIdentidad","nombre","firmante","tipoIGV","serieNumeroInvoiceReference","descripcionSustentoInvoiceReference","documentForm","BajaDocumentForm","tipoDocumentReference","serieNumeroDocumentReference","fechaEmisionDocumentReference","motivoBajaDocumentReference","today","Date","toISOString","substring","BajaDocumentPage","DocumentsPage","XmlBuilderRoute","forSignerMode","rest","AppRoutes","NotFound403","render","BasicLayout","isAboutModalOpen","renderHeader","aboutModal","AboutModal","trademark","brandImageSrc","brandImg","brandImageAlt","productName","TextList","TextListItem","rel","PageToolbar","css","accessibleStyles","screenReader","visibleOnLg","plain","PageHeader","logo","Brand","imgBrandNavBar","alt","toolbar","showNavToggle","renderSidebar","selectedContextOrganization","PageNav","Nav","NavGroup","NavItem","activeClassName","PageSidebar","nav","renderPageSkipToContent","SkipToContent","Page","header","sidebar","isManagedSidebar","skipToContent","DeleteDialogBase","danger","deleteDialogSelectors","XmlBuilderComponent","NoSignerComponent","whenSignerComponent","elseComponent","OrganizationContextLoader","frontendComponentsNotifications","App","NotificationsPortal","Boolean","location","hostname","rootReducer","combineReducers","notifications","action","getType","defaults","baseURL","ReactDOM","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3182623f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-navbar.f314a279.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9b4f3b1c.png\";","import { Forbidden403 } from \"./Forbidden403\";\n\nexport default Forbidden403;\n","import React from \"react\";\nimport {\n  PageSection,\n  Bullseye,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon } from \"@patternfly/react-icons\";\n\nexport const Forbidden403: React.FC = () => {\n  return (\n    <React.Fragment>\n      <PageSection>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={ErrorCircleOIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n              Error 403 Forbidden! The web page (or other resource) that you're\n              trying to open in your web browser is a resource that you're not\n              allowed to access.\n            </Title>\n          </EmptyState>\n        </Bullseye>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n","import { NotFound404 } from \"./NotFound404\";\n\nexport default NotFound404;\n","import React from \"react\";\nimport {\n  PageSection,\n  Bullseye,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon } from \"@patternfly/react-icons\";\n\nexport const NotFound404: React.FC = () => {\n  return (\n    <React.Fragment>\n      <PageSection>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={ErrorCircleOIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n              Error 404 Page not found!\n            </Title>\n          </EmptyState>\n        </Bullseye>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n","import { ServiceUnavailable503 } from \"./ServiceUnavailable503\";\n\nexport default ServiceUnavailable503;\n","import React from \"react\";\nimport {\n  PageSection,\n  Bullseye,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon\n} from \"@patternfly/react-core\";\nimport { ErrorCircleOIcon } from \"@patternfly/react-icons\";\n\nexport const ServiceUnavailable503: React.FC = () => {\n  return (\n    <React.Fragment>\n      <PageSection>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={ErrorCircleOIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n              Error 503 Service Unavailable! Server is temporarily unable to\n              handle the request. This may be due to the server being overloaded\n              or down for maintenance.\n            </Title>\n          </EmptyState>\n        </Bullseye>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from \"react\";\nimport {\n  PageSection,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  Grid,\n  GridItem\n} from \"@patternfly/react-core\";\nimport {\n  AngleRightIcon,\n  MailBulkIcon,\n  BugIcon,\n  ProjectIcon,\n  FileExportIcon,\n  ApplicationsIcon\n} from \"@patternfly/react-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <React.Fragment>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component=\"h1\">¡Bienvenido a XML Builder!</Text>\n        </TextContent>\n      </PageSection>\n      <PageSection>\n        <Grid lg={4} gutter=\"md\">\n          <GridItem>\n            <Card>\n              <CardBody>\n                <EmptyState variant={EmptyStateVariant.full}>\n                  <EmptyStateIcon icon={ApplicationsIcon} />\n                  <Title headingLevel=\"h5\" size=\"lg\">\n                    Consola de administración\n                  </Title>\n                  <EmptyStateBody>Administra el servidor</EmptyStateBody>\n                  <Link\n                    to=\"/organizations/list\"\n                    className=\"pf-c-button pf-m-primary\"\n                  >\n                    Administrar\n                  </Link>\n                </EmptyState>\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem>\n            <Card>\n              <CardBody>\n                <EmptyState variant={EmptyStateVariant.full}>\n                  <EmptyStateIcon icon={FileExportIcon} />\n                  <Title headingLevel=\"h5\" size=\"lg\">\n                    Documentación\n                  </Title>\n                  <EmptyStateBody>Guia de usuario</EmptyStateBody>\n                  <a\n                    href=\"https://project-openubl.gitbook.io/xml-builder/\"\n                    className=\"pf-c-button pf-m-primary\"\n                  >\n                    Documentación\n                  </a>\n                </EmptyState>\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem>\n            <Stack gutter=\"md\">\n              <StackItem>\n                <Card style={{ minHeight: 93 }}>\n                  <CardBody>\n                    <a href=\"https://project-openubl.github.io/\">\n                      <Button variant=\"link\" icon={<ProjectIcon />}>\n                        Project OpenUBL <AngleRightIcon />\n                      </Button>\n                    </a>\n                  </CardBody>\n                </Card>\n              </StackItem>\n              <StackItem>\n                <Card style={{ minHeight: 93 }}>\n                  <CardBody>\n                    <a href=\"mailto:projectopenubl+subscribe@googlegroups.com\">\n                      <Button variant=\"link\" icon={<MailBulkIcon />}>\n                        Mailing List <AngleRightIcon />\n                      </Button>\n                    </a>\n                  </CardBody>\n                </Card>\n              </StackItem>\n              <StackItem>\n                <Card style={{ minHeight: 93 }}>\n                  <CardBody>\n                    <a href=\"https://github.com/project-openubl/xml-builder/issues\">\n                      <Button variant=\"link\" icon={<BugIcon />}>\n                        Reporta un problema <AngleRightIcon />\n                      </Button>\n                    </a>\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </Stack>\n          </GridItem>\n        </Grid>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import axios, { AxiosPromise } from \"axios\";\n\nclass BackendAPIClient {\n  public static request<T>(\n    path: string,\n    body: any = null,\n    method:\n      | \"get\"\n      | \"post\"\n      | \"put\"\n      | \"delete\"\n      | \"options\"\n      | \"patch\"\n      | undefined = \"get\",\n    config = {}\n  ): AxiosPromise<T> {\n    return axios.request<T>(\n      Object.assign(\n        {},\n        {\n          url: path,\n          method,\n          data: body\n        },\n        config\n      )\n    );\n  }\n\n  public static post<T>(path: string, body: any, config = {}): AxiosPromise<T> {\n    return this.request<T>(path, body, \"post\", config);\n  }\n\n  public static put<T>(path: string, body: any, config = {}): AxiosPromise<T> {\n    return this.request<T>(path, body, \"put\", config);\n  }\n\n  public static get<T>(path: string): AxiosPromise<T> {\n    return this.request<T>(path);\n  }\n\n  public static delete(path: string, config = {}) {\n    return this.request(path, null, \"delete\", config);\n  }\n}\n\nexport default BackendAPIClient;\n","import { Dispatch } from \"redux\";\nimport { AlertModel } from \"../../models/alert\";\nimport { AxiosError } from \"axios\";\n\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\nconst addNotification = frontendComponentsNotifications.addNotification;\n\nexport const alert = (alert: AlertModel) => {\n  return (dispatch: Dispatch) => {\n    dispatch(addNotification(alert));\n  };\n};\n\nexport const alertFetchEndpoint = (err: AxiosError) => {\n  let errorDescription = \"\";\n  if (err.response && err.response.data) {\n    if (typeof err.response.data === \"string\") {\n      errorDescription = err.response.data;\n    } else if (err.response.data.error) {\n      errorDescription = err.response.data.error;\n    }\n  }\n  return (dispatch: Dispatch) => {\n    dispatch(\n      addNotification({\n        variant: \"danger\",\n        title: err.message,\n        description: errorDescription,\n        dismissable: true\n      })\n    );\n  };\n};\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { getAllOrganizations } from \"../../api/organizations\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\n\nexport const fetchOrganizationsRequest = createAction(\n  \"organizationContext/organizations/fetch/request\"\n)();\nexport const fetchOrganizationsSuccess = createAction(\n  \"organizationContext/organizations/fetch/success\"\n)<OrganizationRepresentation[]>();\nexport const fetchOrganizationsFailure = createAction(\n  \"organizationContext/organizations/fetch/failure\"\n)<AxiosError>();\n\nexport const selectOrganizationContext = createAction(\n  \"organizationContext/organizations/select\"\n)<OrganizationRepresentation>();\n\nexport const fetchOrganizations = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchOrganizationsRequest());\n\n    return getAllOrganizations()\n      .then((res: AxiosResponse<OrganizationRepresentation[]>) => {\n        dispatch(fetchOrganizationsSuccess(res.data));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationsFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import ApiClient from \"./apiClient\";\nimport { AxiosPromise } from \"axios\";\nimport {\n  OrganizationRepresentation,\n  SearchResultsRepresentation,\n  KeysMetadataRepresentation,\n  ComponentRepresentation,\n  DocumentType\n} from \"../models/xml-builder\";\n\nconst ORGANIZATIONS_URL = \"/organizations\";\nconst ORGANIZATIONS_SEARCH_URL = \"/organizations/search\";\nconst ALL_ORGANIZATIONS_URL = \"/organizations/all\";\nconst GET_ID_BY_NAME_URL = \"/organizations/id-by-name\";\nconst GET_ORGANIZATION_KEYS_URL = \"/organizations/{organizationId}/keys\";\nconst ORGANIZATION_COMPONENTS_URL =\n  \"/organizations/{organizationId}/components\";\nconst GET_ORGANIZATION_COMPONENT_URL =\n  \"/organizations/{organizationId}/components/{componentId}\";\nconst ORGANIZATION_ENRICH_DOCUMENTS_URL =\n  \"/organizations/{organizationId}/documents/{documentType}/enrich\";\nconst ORGANIZATION_CREATE_DOCUMENTS_URL =\n  \"/organizations/{organizationId}/documents/{documentType}/create\";\n\nexport const searchOrganizations = (\n  filterText: string,\n  page: number,\n  pageSize: number\n): AxiosPromise<SearchResultsRepresentation<OrganizationRepresentation>> => {\n  const params: any = {\n    filterText,\n    page: page - 1,\n    pageSize: pageSize\n  };\n  const query: string[] = [];\n\n  Object.keys(params).forEach((key: string) => {\n    const value: any = params[key];\n    if (value !== undefined) {\n      query.push(`${key}=${value}`);\n    }\n  });\n\n  return ApiClient.get<SearchResultsRepresentation<OrganizationRepresentation>>(\n    `${ORGANIZATIONS_SEARCH_URL}?${query.join(\"&\")}`\n  );\n};\n\nexport const getAllOrganizations = (): AxiosPromise<OrganizationRepresentation[]> => {\n  return ApiClient.get<OrganizationRepresentation[]>(ALL_ORGANIZATIONS_URL);\n};\n\nexport const createOrganization = (\n  organization: OrganizationRepresentation\n) => {\n  return ApiClient.post<OrganizationRepresentation>(\n    ORGANIZATIONS_URL,\n    organization\n  );\n};\n\nexport const getOrganizationById = (organizationId: string) => {\n  return ApiClient.get<OrganizationRepresentation>(\n    `${ORGANIZATIONS_URL}/${organizationId}`\n  );\n};\n\nexport const updateOrganization = (\n  organizationId: string,\n  organization: OrganizationRepresentation\n) => {\n  return ApiClient.put<OrganizationRepresentation>(\n    `${ORGANIZATIONS_URL}/${organizationId}`,\n    organization\n  );\n};\n\nexport const removeOrganization = (organizationId: string) => {\n  return ApiClient.delete(`${ORGANIZATIONS_URL}/${organizationId}`);\n};\n\nexport const getOrganizationIdByName = (\n  name: string\n): AxiosPromise<string | null> => {\n  return ApiClient.get(GET_ID_BY_NAME_URL + \"/\" + encodeURIComponent(name));\n};\n\nexport const getOrganizationKeys = (\n  organizationId: string\n): AxiosPromise<KeysMetadataRepresentation> => {\n  return ApiClient.get<KeysMetadataRepresentation>(\n    GET_ORGANIZATION_KEYS_URL.replace(\"{organizationId}\", organizationId)\n  );\n};\n\nexport const getOrganizationComponents = (\n  organizationId: string\n): AxiosPromise<ComponentRepresentation[]> => {\n  return ApiClient.get<ComponentRepresentation[]>(\n    ORGANIZATION_COMPONENTS_URL.replace(\"{organizationId}\", organizationId)\n  );\n};\n\nexport const getOrganizationComponent = (\n  organizationId: string,\n  componentId: string\n): AxiosPromise<ComponentRepresentation> => {\n  return ApiClient.get<ComponentRepresentation>(\n    GET_ORGANIZATION_COMPONENT_URL.replace(\n      \"{organizationId}\",\n      organizationId\n    ).replace(\"{componentId}\", componentId)\n  );\n};\n\nexport const createOrganizationComponent = (\n  organizationId: string,\n  component: ComponentRepresentation\n): AxiosPromise<ComponentRepresentation> => {\n  return ApiClient.post<ComponentRepresentation>(\n    ORGANIZATION_COMPONENTS_URL.replace(\"{organizationId}\", organizationId),\n    component\n  );\n};\n\nexport const updateOrganizationComponent = (\n  organizationId: string,\n  component: ComponentRepresentation\n): AxiosPromise<ComponentRepresentation> => {\n  return ApiClient.put<ComponentRepresentation>(\n    GET_ORGANIZATION_COMPONENT_URL.replace(\n      \"{organizationId}\",\n      organizationId\n    ).replace(\"{componentId}\", component.id),\n    component\n  );\n};\n\nexport const deleteOrganizationComponent = (\n  organizationId: string,\n  componentId: string\n): AxiosPromise => {\n  return ApiClient.delete(\n    GET_ORGANIZATION_COMPONENT_URL.replace(\n      \"{organizationId}\",\n      organizationId\n    ).replace(\"{componentId}\", componentId)\n  );\n};\n\nexport const enrichOrganizationDocument = (\n  organizationId: string,\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    ORGANIZATION_ENRICH_DOCUMENTS_URL.replace(\n      \"{organizationId}\",\n      organizationId\n    ).replace(\"{documentType}\", documentType),\n    document\n  );\n};\n\nexport const createOrganizationDocument = (\n  organizationId: string,\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    ORGANIZATION_CREATE_DOCUMENTS_URL.replace(\n      \"{organizationId}\",\n      organizationId\n    ).replace(\"{documentType}\", documentType),\n    document\n  );\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchOrganizationsRequest,\n  fetchOrganizationsSuccess,\n  fetchOrganizationsFailure,\n  selectOrganizationContext\n} from \"./actions\";\n\nexport const stateKey = \"organizationContext\";\n\nexport type OrganizationContextState = Readonly<{\n  selected: OrganizationRepresentation | null;\n  organizations: OrganizationRepresentation[] | null;\n  error: AxiosError<any> | null;\n  status: FetchStatus;\n}>;\n\nexport const defaultState: OrganizationContextState = {\n  selected: null,\n  organizations: null,\n  error: null,\n  status: \"none\"\n};\n\nexport type OrganizationContextAction = ActionType<\n  | typeof fetchOrganizationsRequest\n  | typeof fetchOrganizationsSuccess\n  | typeof fetchOrganizationsFailure\n  | typeof selectOrganizationContext\n>;\n\nexport function organizationContextReducer(\n  state = defaultState,\n  action: OrganizationContextAction\n): OrganizationContextState {\n  switch (action.type) {\n    case getType(fetchOrganizationsRequest):\n      return {\n        ...state,\n        status: \"inProgress\"\n      };\n    case getType(fetchOrganizationsSuccess):\n      return {\n        ...state,\n        status: \"complete\",\n        error: null,\n        organizations: action.payload\n      };\n    case getType(fetchOrganizationsFailure):\n      return {\n        ...state,\n        status: \"complete\",\n        error: action.payload\n      };\n\n    case getType(selectOrganizationContext):\n      return {\n        ...state,\n        selected: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationsState = (state: RootState) => state[stateKey];\n\nexport const organizations = (state: RootState) => {\n  const srcs = organizationsState(state).organizations;\n  if (srcs) {\n    return srcs;\n  }\n  return [];\n};\n\nexport const status = (state: RootState) => organizationsState(state).status;\nexport const error = (state: RootState) => organizationsState(state).error;\n\n//\n\nexport const selectedOrganization = (state: RootState) =>\n  organizationsState(state).selected;\n","import React from \"react\";\nimport { AxiosError } from \"axios\";\nimport { ContextSelector, ContextSelectorItem } from \"@patternfly/react-core\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../../store/common\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\n\ninterface StateToProps {\n  selectedOrganization: OrganizationRepresentation | null;\n  organizations: OrganizationRepresentation[];\n  error: AxiosError<any> | null;\n  status: FetchStatus | null;\n}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {\n  onSelect: (organization: OrganizationRepresentation) => any;\n}\n\ninterface State {\n  isOpen: boolean;\n  searchValue: string;\n  filteredItems: OrganizationRepresentation[];\n}\n\nclass OrganizationContextSelector extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      searchValue: \"\",\n      filteredItems: props.organizations\n    };\n  }\n\n  onToggle = (isOpen: any) => {\n    this.setState({\n      // Workaround until <ContextSelector> props are fixed\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  onSelect = (event: any, value: any) => {\n    const { organizations, onSelect } = this.props;\n\n    const organization = organizations.find(p => p.name === value);\n    if (organization) {\n      this.setState({ isOpen: !this.state.isOpen }, () => {\n        onSelect(organization);\n      });\n    }\n  };\n\n  onSearchInputChange = (value: string) => {\n    this.setState({ searchValue: value });\n  };\n\n  onSearchButtonClick = (event: any) => {\n    const filtered: OrganizationRepresentation[] =\n      this.state.searchValue.trim() === \"\"\n        ? this.props.organizations\n        : this.props.organizations.filter(\n            (org: OrganizationRepresentation) =>\n              org.name\n                .toLowerCase()\n                .indexOf(this.state.searchValue.toLowerCase()) !== -1\n          );\n\n    this.setState({ filteredItems: filtered || [] });\n  };\n\n  render() {\n    const { selectedOrganization } = this.props;\n    const { isOpen, searchValue, filteredItems } = this.state;\n    return (\n      <ContextSelector\n        toggleText={selectedOrganization ? selectedOrganization.name : \"\"}\n        onSearchInputChange={this.onSearchInputChange}\n        isOpen={isOpen}\n        searchInputValue={searchValue}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        onSearchButtonClick={this.onSearchButtonClick}\n        screenReaderLabel=\"Selected organization:\"\n      >\n        {filteredItems.map(\n          (item: OrganizationRepresentation, index: number) => (\n            <ContextSelectorItem key={index}>{item.name}</ContextSelectorItem>\n          )\n        )}\n      </ContextSelector>\n    );\n  }\n}\n\nexport default OrganizationContextSelector;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationContextSelectors\n} from \"../../store/organizationContext\";\nimport OrganizationContextSelector from \"./OrganizationContextSelector\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  selectedOrganization: organizationContextSelectors.selectedOrganization(state) || null,\n  organizations: organizationContextSelectors.organizations(state) || [],\n  error: organizationContextSelectors.error(state),\n  status: organizationContextSelectors.status(state)\n}));\n\nconst mapDispatchToProps = {\n  \n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(OrganizationContextSelector)\n);\n","import React from \"react\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Tabs,\n  Tab,\n  FormGroup\n} from \"@patternfly/react-core\";\nimport OrganizationContextSelector from \"../../SmartComponents/OrganizationContextSelector\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\n\ninterface Props {\n  match: any;\n  history: any;\n  location: any;\n  activeKey: number;\n}\nconst KeysPageTabs: React.FC<Props> = ({\n  match,\n  history,\n  activeKey,\n  children\n}) => {\n  const handleTabClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string\n  ) => {\n    const organizationId = match.params.organizationId;\n    const url = `/organizations/manage/${organizationId}`;\n    if (eventKey === 0) {\n      history.push(url + \"/keys\");\n    } else if (eventKey === 1) {\n      history.push(url + \"/keys/list\");\n    } else if (eventKey === 2) {\n      history.push(url + \"/keys/providers\");\n    }\n  };\n\n  const onOrganizationContextSelect = (\n    organization: OrganizationRepresentation\n  ) => {\n    history.push(`/organizations/manage/${organization.id}/keys`);\n  };\n\n  return (\n    <React.Fragment>\n      <PageSection variant={PageSectionVariants.light}>\n        <div style={{ marginBottom: 20 }}>\n          <div className=\"pf-c-form pf-m-horizontal\">\n            <FormGroup label=\"Organización\" fieldId=\"organizacion\">\n              <OrganizationContextSelector\n                onSelect={onOrganizationContextSelect}\n              />\n            </FormGroup>\n          </div>\n        </div>\n\n        <TextContent>\n          <Text component=\"h1\">Certificados digitales</Text>\n          <Text component=\"small\">\n            Acá podrás configurar los certificados de seguridad que el software\n            usará para firmar los comprobantes de pago electrónicos.\n          </Text>\n        </TextContent>\n        <br />\n        <Tabs isFilled activeKey={activeKey} onSelect={handleTabClick}>\n          <Tab eventKey={0} title=\"Certificados activos\"></Tab>\n          <Tab eventKey={1} title=\"Todos los certificados\"></Tab>\n          <Tab eventKey={2} title=\"Proveeedores de certificados\"></Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection>{children}</PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default KeysPageTabs;\n","import KeysPageTabs from \"./KeysPageTabs\";\nimport { withRouter } from \"react-router-dom\";\n\nexport default withRouter(KeysPageTabs);\n","import KeyButtonModal from \"./KeyButtonModal\";\n\nexport default KeyButtonModal;\n","import React, { useState } from \"react\";\nimport { Text, Button, TextVariants, Modal } from \"@patternfly/react-core\";\nimport { ApplicationsIcon } from \"@patternfly/react-icons\";\n\ninterface Props {\n  title: string;\n  buttonLabel: string;\n  keyValue: string;\n}\n\nconst KeyButtonModal: React.FC<Props> = ({ title, buttonLabel, keyValue }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"link\"\n        icon={<ApplicationsIcon />}\n        onClick={handleModalToggle}\n      >\n        {buttonLabel}\n      </Button>\n      <Modal\n        isSmall\n        title={title}\n        isOpen={isModalOpen}\n        onClose={handleModalToggle}\n        actions={[\n          <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n            Close\n          </Button>\n        ]}\n        isFooterLeftAligned\n      >\n        <Text component={TextVariants.blockquote}>{keyValue}</Text>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default KeyButtonModal;\n","import SkeletonTable from \"./SkeletonTable\";\n\nexport default SkeletonTable;\n","import React from \"react\";\nimport { Table, TableHeader, TableBody, ICell } from \"@patternfly/react-table\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nexport interface Props {\n  colSize?: number;\n  rowSize: number;\n  columns?: ICell[];\n}\n\nexport interface State {}\n\nclass SkeletonTable extends React.Component<Props, State> {\n  createColumns = () => {\n    const { colSize } = this.props;\n    return [...Array(colSize)].map(() => ({\n      title: <Skeleton />\n    }));\n  };\n\n  createRows = () => {\n    const { colSize, rowSize, columns } = this.props;\n    const numberOfCols = columns ? columns.length : colSize;\n    return [...Array(rowSize)].map(() => ({\n      cells: [...Array(numberOfCols)].map(() => ({\n        title: <Skeleton />\n      }))\n    }));\n  };\n\n  render() {\n    return (\n      <Table\n        cells={this.props.columns || this.createColumns()}\n        rows={this.createRows()}\n        aria-label=\"Loading\"\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    );\n  }\n}\n\nexport default SkeletonTable;\n","import ErrorTable from \"./ErrorTable\";\n\nexport default ErrorTable;\n","import React from \"react\";\nimport { Table, TableHeader, TableBody } from \"@patternfly/react-table\";\nimport { ErrorCircleOIcon } from \"@patternfly/react-icons\";\nimport {\n  Card,\n  CardBody,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  Title,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Button\n} from \"@patternfly/react-core\";\n\nexport interface Props {\n  columns: any[];\n  retry: any;\n}\n\nexport interface State {}\n\nclass ErrorTable extends React.Component<Props, State> {\n  render() {\n    return (\n      <React.Fragment>\n        <Table cells={this.props.columns} rows={[]} aria-label=\"Error table\">\n          <TableHeader />\n          <TableBody />\n        </Table>\n        <Card>\n          <CardBody>\n            <Bullseye>\n              <EmptyState>\n                <EmptyStateIcon icon={ErrorCircleOIcon} />\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  An error occured while fetching data!\n                </Title>\n                <EmptyStateBody>Try again or reload the page.</EmptyStateBody>\n                <EmptyStateSecondaryActions>\n                  <Button variant=\"link\" onClick={this.props.retry}>\n                    Try again\n                  </Button>\n                </EmptyStateSecondaryActions>\n              </EmptyState>\n            </Bullseye>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ErrorTable;\n","import EmptyTable from \"./EmptyTable\";\n\nexport default EmptyTable;\n","import React from \"react\";\nimport { Table, TableHeader, TableBody } from \"@patternfly/react-table\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport {\n  Card,\n  CardBody,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  Title,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Button\n} from \"@patternfly/react-core\";\n\nexport interface Props {\n  columns: any[];\n  onClearAllFilters?: any;\n}\n\nexport interface State {}\n\nclass EmptyTable extends React.Component<Props, State> {\n  render() {\n    return (\n      <React.Fragment>\n        <Table cells={this.props.columns} rows={[]} aria-label=\"Empty table\">\n          <TableHeader />\n          <TableBody />\n        </Table>\n        <Card>\n          <CardBody>\n            <Bullseye>\n              <EmptyState>\n                <EmptyStateIcon icon={SearchIcon} />\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No results found\n                </Title>\n                <EmptyStateBody>\n                  No results match this filter criteria. Remove all filters or\n                  clear all filters to show results.\n                </EmptyStateBody>\n                <EmptyStateSecondaryActions>\n                  {this.props.onClearAllFilters && (\n                    <Button\n                      variant=\"link\"\n                      onClick={this.props.onClearAllFilters}\n                    >\n                      Clear all filters\n                    </Button>\n                  )}\n                </EmptyStateSecondaryActions>\n              </EmptyState>\n            </Bullseye>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EmptyTable;\n","import React from \"react\";\nimport { AxiosError } from \"axios\";\nimport {\n  IRow,\n  ICell,\n  cellWidth,\n  Table,\n  TableHeader,\n  TableBody,\n  expandable\n} from \"@patternfly/react-table\";\nimport { ClipboardCopy } from \"@patternfly/react-core\";\nimport KeysPageTabs from \"../../../PresentationalComponents/KeysPageTabs\";\nimport { FetchStatus } from \"../../../store/common\";\nimport {\n  ComponentRepresentation,\n  KeysMetadataRepresentation,\n  KeyMetadataRepresentation\n} from \"../../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport KeyButtonModal from \"../../../PresentationalComponents/KeyButtonModal\";\nimport SkeletonTable from \"../../../PresentationalComponents/SkeletonTable\";\nimport ErrorTable from \"../../../PresentationalComponents/ErrorTable\";\nimport EmptyTable from \"../../../PresentationalComponents/EmptyTable\";\n\ninterface StateToProps {\n  organizationKeys: KeysMetadataRepresentation | undefined;\n  organizationKeysFetchStatus: FetchStatus | undefined;\n  organizationKeysError: AxiosError<any> | undefined;\n  organizationComponents: ComponentRepresentation[];\n  organizationComponentsFetchStatus: FetchStatus | undefined;\n  organizationComponentsError: AxiosError<any> | undefined;\n}\n\ninterface DispatchToProps {\n  fetchOrganizationKeys: (organizationId: string) => any;\n  fetchOrganizationComponents: (organizationId: string) => any;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  activeMap: Map<string, KeyMetadataRepresentation>;\n  rows: IRow[];\n  columns: ICell[];\n}\n\nclass ActiveKeysPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeMap: new Map(),\n      rows: [],\n      columns: [\n        { title: \"Tipo\", transforms: [], cellFormatters: [expandable] },\n        { title: \"Llave\", transforms: [] },\n        { title: \"Proveedor\", transforms: [] },\n        { title: \"Llave pública\", transforms: [cellWidth(\"10\")] },\n        { title: \"Certificado\", transforms: [cellWidth(\"10\")] }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.loadKeysAndComponents();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    const { activeMap } = this.state;\n    const { organizationKeys, organizationComponents } = this.props;\n\n    if (\n      organizationKeys &&\n      organizationComponents &&\n      organizationComponents.length > 0 &&\n      activeMap.size === 0\n    ) {\n      this.processKeysAndComponents();\n    }\n\n    // Refresh keys and components when route changed\n    const currentOrganizationId = this.getOrganizationId();\n    const prevOrganizationId = this.getOrganizationId(_prevProps.match);\n    if (prevOrganizationId !== currentOrganizationId) {\n      this.loadKeysAndComponents();\n    }\n  }\n\n  loadKeysAndComponents = () => {\n    const { fetchOrganizationKeys, fetchOrganizationComponents } = this.props;\n\n    this.setState({ activeMap: new Map() }, () => {\n      fetchOrganizationKeys(this.getOrganizationId());\n      fetchOrganizationComponents(this.getOrganizationId());\n    });\n  };\n\n  getOrganizationId = (match: any = this.props.match) => {\n    return match.params.organizationId;\n  };\n\n  processKeysAndComponents = () => {\n    const { organizationKeys, organizationComponents } = this.props;\n    if (organizationKeys && organizationComponents) {\n      const active: any = {};\n\n      for (let i = 0; i < organizationKeys.keys.length; i++) {\n        for (let j = 0; j < organizationComponents.length; j++) {\n          const key: KeyMetadataRepresentation = organizationKeys.keys[i];\n          const component: ComponentRepresentation = organizationComponents[j];\n          if (key.providerId === component.id) {\n            key.provider = organizationComponents[j];\n          }\n        }\n      }\n\n      for (const t in organizationKeys.active) {\n        if (organizationKeys.active[t]) {\n          for (let i = 0; i < organizationKeys.keys.length; i++) {\n            if (organizationKeys.active[t] === organizationKeys.keys[i].kid) {\n              active[t] = organizationKeys.keys[i];\n            }\n          }\n        }\n      }\n\n      const activeMap: Map<string, KeyMetadataRepresentation> = new Map();\n      for (const key in active) {\n        if (active[key]) {\n          activeMap.set(key, active[key]);\n        }\n      }\n\n      this.setState({ activeMap: activeMap }, () => {\n        this.filtersInRowsAndCells();\n      });\n    }\n  };\n\n  filtersInRowsAndCells = (\n    map: Map<string, KeyMetadataRepresentation> = this.state.activeMap\n  ) => {\n    const rows: (IRow | string[])[] = [];\n\n    let index: number = -1;\n    map.forEach((key: KeyMetadataRepresentation) => {\n      index++;\n\n      rows.push(\n        {\n          isOpen: false,\n          cells: [\n            {\n              title: key.type\n            },\n            {\n              title: key.kid\n            },\n            {\n              title: key.provider ? (\n                <span>{key.provider.name}</span>\n              ) : (\n                <small>No provider identified</small>\n              )\n            },\n            {\n              title: (\n                <KeyButtonModal\n                  buttonLabel=\"Ver\"\n                  title=\"Llave pública\"\n                  keyValue={key.publicKey}\n                />\n              )\n            },\n            {\n              title: (\n                <KeyButtonModal\n                  buttonLabel=\"Ver\"\n                  title=\"Certificado\"\n                  keyValue={key.certificate}\n                />\n              )\n            }\n          ]\n        },\n        {\n          parent: index * 2,\n          fullWidth: false,\n          cells: [\n            {\n              title: (\n                <React.Fragment>\n                  <div className=\"pf-c-content\">\n                    <dl>\n                      <dt>Llave pública</dt>\n                      <dd>\n                        <ClipboardCopy>{key.publicKey}</ClipboardCopy>\n                      </dd>\n                      <dt>Certificado</dt>\n                      <dd>\n                        <ClipboardCopy>{key.certificate}</ClipboardCopy>\n                      </dd>\n                    </dl>\n                  </div>\n                </React.Fragment>\n              )\n            }\n          ]\n        }\n      );\n    });\n\n    this.setState({\n      rows\n    });\n  };\n\n  // handle\n\n  handleOnTableCollapse = (_event: any, rowKey: number, isOpen: boolean) => {\n    const { rows } = this.state;\n\n    rows[rowKey].isOpen = isOpen;\n    this.setState({ rows });\n  };\n\n  // render\n\n  renderTable = () => {\n    const { columns, rows } = this.state;\n    const {\n      organizationKeysError,\n      organizationComponentsError,\n      organizationKeysFetchStatus,\n      organizationComponentsFetchStatus\n    } = this.props;\n\n    if (\n      organizationKeysFetchStatus !== \"complete\" ||\n      organizationComponentsFetchStatus !== \"complete\"\n    ) {\n      return <SkeletonTable columns={columns} rowSize={5} />;\n    }\n\n    if (organizationKeysError || organizationComponentsError) {\n      const retry = () => {\n        this.loadKeysAndComponents();\n      };\n      return <ErrorTable columns={columns} retry={retry} />;\n    }\n\n    if (rows.length === 0) {\n      return <EmptyTable columns={columns} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Table\n          aria-label=\"Keys List Table\"\n          cells={columns}\n          rows={rows}\n          onCollapse={this.handleOnTableCollapse}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <KeysPageTabs activeKey={0}>{this.renderTable()}</KeysPageTabs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ActiveKeysPage;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { KeysMetadataRepresentation } from \"../../models/xml-builder\";\nimport { getOrganizationKeys } from \"../../api/organizations\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\n\ninterface OrganizationKeysActionMeta {\n  organizationId: string;\n}\n\nexport const fetchOrganizationKeysRequest = createAction(\n  \"organizationKeys/fetch/request\"\n)<OrganizationKeysActionMeta>();\nexport const fetchOrganizationKeysSuccess = createAction(\n  \"organizationKeys/fetch/success\"\n)<KeysMetadataRepresentation, OrganizationKeysActionMeta>();\nexport const fetchOrganizationKeysFailure = createAction(\n  \"organizationKeys/fetch/failure\"\n)<AxiosError, OrganizationKeysActionMeta>();\n\nexport const fetchOrganizationKeys = (organizationId: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationKeysActionMeta = {\n      organizationId: organizationId\n    };\n\n    dispatch(fetchOrganizationKeysRequest(meta));\n\n    return getOrganizationKeys(organizationId)\n      .then((res: AxiosResponse<KeysMetadataRepresentation>) => {\n        const keysMetadata: KeysMetadataRepresentation = res.data;\n        dispatch(fetchOrganizationKeysSuccess(keysMetadata, meta));\n        return keysMetadata;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationKeysFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { KeysMetadataRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchOrganizationKeysRequest,\n  fetchOrganizationKeysSuccess,\n  fetchOrganizationKeysFailure\n} from \"./actions\";\n\nexport const stateKey = \"organizationKeys\";\n\nexport type OrganizationKeyState = Readonly<{\n  byOrganizationId: Map<string, KeysMetadataRepresentation>;\n  errors: Map<string, AxiosError | undefined>;\n  fetchStatus: Map<string, FetchStatus>;\n}>;\n\nexport const defaultState: OrganizationKeyState = {\n  byOrganizationId: new Map(),\n  errors: new Map(),\n  fetchStatus: new Map()\n};\n\nexport type OrganizationKeysAction = ActionType<\n  | typeof fetchOrganizationKeysRequest\n  | typeof fetchOrganizationKeysSuccess\n  | typeof fetchOrganizationKeysFailure\n>;\n\nexport function organizationKeysReducer(\n  state = defaultState,\n  action: OrganizationKeysAction\n): OrganizationKeyState {\n  switch (action.type) {\n    case getType(fetchOrganizationKeysRequest):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.payload.organizationId,\n          \"inProgress\"\n        )\n      };\n    case getType(fetchOrganizationKeysSuccess):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        byOrganizationId: new Map(state.byOrganizationId).set(\n          action.meta.organizationId,\n          {\n            ...action.payload\n          }\n        ),\n        errors: new Map(state.errors).set(action.meta.organizationId, undefined)\n      };\n    case getType(fetchOrganizationKeysFailure):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        errors: new Map(state.errors).set(\n          action.meta.organizationId,\n          action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationKeysState = (state: RootState) => state[stateKey];\n\n// Fetch migration project\n\nexport const selectOrganizationKeys = (\n  state: RootState,\n  organizationId: string\n) => organizationKeysState(state).byOrganizationId.get(organizationId);\nexport const selectOrganizationKeysFetchStatus = (\n  state: RootState,\n  organizationId: string\n) => organizationKeysState(state).fetchStatus.get(organizationId);\nexport const selectOrganizationKeysError = (\n  state: RootState,\n  organizationId: string\n) => organizationKeysState(state).errors.get(organizationId);\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { ComponentRepresentation } from \"../../models/xml-builder\";\nimport { getOrganizationComponents } from \"../../api/organizations\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\n\ninterface OrganizationComponentsActionMeta {\n  organizationId: string;\n}\n\nexport const fetchOrganizationComponentsRequest = createAction(\n  \"organizationComponents/fetch/request\"\n)<OrganizationComponentsActionMeta>();\nexport const fetchOrganizationComponentsSuccess = createAction(\n  \"organizationComponents/fetch/success\"\n)<ComponentRepresentation[], OrganizationComponentsActionMeta>();\nexport const fetchOrganizationComponentsFailure = createAction(\n  \"organizationComponents/fetch/failure\"\n)<AxiosError, OrganizationComponentsActionMeta>();\n\nexport const fetchOrganizationComponents = (organizationId: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationComponentsActionMeta = {\n      organizationId: organizationId\n    };\n\n    dispatch(fetchOrganizationComponentsRequest(meta));\n\n    return getOrganizationComponents(organizationId)\n      .then((res: AxiosResponse<ComponentRepresentation[]>) => {\n        dispatch(fetchOrganizationComponentsSuccess(res.data, meta));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationComponentsFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { ComponentRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchOrganizationComponentsRequest,\n  fetchOrganizationComponentsSuccess,\n  fetchOrganizationComponentsFailure\n} from \"./actions\";\n\nexport const stateKey = \"organizationComponents\";\n\nexport type OrganizationComponentsState = Readonly<{\n  byOrganizationId: Map<string, ComponentRepresentation[]>;\n  errors: Map<string, AxiosError | undefined>;\n  fetchStatus: Map<string, FetchStatus>;\n}>;\n\nexport const defaultState: OrganizationComponentsState = {\n  byOrganizationId: new Map(),\n  errors: new Map(),\n  fetchStatus: new Map()\n};\n\nexport type OrganizationComponentsAction = ActionType<\n  | typeof fetchOrganizationComponentsRequest\n  | typeof fetchOrganizationComponentsSuccess\n  | typeof fetchOrganizationComponentsFailure\n>;\n\nexport function organizationComponentsReducer(\n  state = defaultState,\n  action: OrganizationComponentsAction\n): OrganizationComponentsState {\n  switch (action.type) {\n    case getType(fetchOrganizationComponentsRequest):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.payload.organizationId,\n          \"inProgress\"\n        )\n      };\n    case getType(fetchOrganizationComponentsSuccess):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        byOrganizationId: new Map(state.byOrganizationId).set(\n          action.meta.organizationId,\n          [\n            ...action.payload\n          ]\n        ),\n        errors: new Map(state.errors).set(action.meta.organizationId, undefined)\n      };\n    case getType(fetchOrganizationComponentsFailure):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        errors: new Map(state.errors).set(\n          action.meta.organizationId,\n          action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationComponentsState = (state: RootState) =>\n  state[stateKey];\n\n// Fetch migration project\n\nexport const selectOrganizationComponents = (\n  state: RootState,\n  organizationId: string\n) => organizationComponentsState(state).byOrganizationId.get(organizationId) || [];\nexport const selectOrganizationComponentsFetchStatus = (\n  state: RootState,\n  organizationId: string\n) => organizationComponentsState(state).fetchStatus.get(organizationId);\nexport const selectOrganizationComponentsError = (\n  state: RootState,\n  organizationId: string\n) => organizationComponentsState(state).errors.get(organizationId);\n","import { connect } from \"react-redux\";\nimport ActiveKeysPage from \"./ActiveKeysPage\";\n\nimport { createMapStateToProps } from \"../../../store/common\";\nimport {\n  organizationKeysActions,\n  organizationKeysSelectors\n} from \"../../../store/organizationKeys\";\nimport {\n  organizationComponentsActions,\n  organizationComponentsSelectors\n} from \"../../../store/organizationComponents\";\n\nconst mapStateToProps = createMapStateToProps((state, ownProps: any) => {\n  const organizationId = ownProps.match.params.organizationId;\n\n  return {\n    organizationKeys: organizationKeysSelectors.selectOrganizationKeys(\n      state,\n      organizationId\n    ),\n    organizationKeysFetchStatus: organizationKeysSelectors.selectOrganizationKeysFetchStatus(\n      state,\n      organizationId\n    ),\n    organizationKeysError: organizationKeysSelectors.selectOrganizationKeysError(\n      state,\n      organizationId\n    ),\n\n    organizationComponents: organizationComponentsSelectors.selectOrganizationComponents(\n      state,\n      organizationId\n    ),\n    organizationComponentsFetchStatus: organizationComponentsSelectors.selectOrganizationComponentsFetchStatus(\n      state,\n      organizationId\n    ),\n    organizationComponentsError: organizationComponentsSelectors.selectOrganizationComponentsError(\n      state,\n      organizationId\n    )\n  };\n});\n\nconst mapDispatchToProps = {\n  fetchOrganizationKeys: organizationKeysActions.fetchOrganizationKeys,\n  fetchOrganizationComponents: organizationComponentsActions.fetchOrganizationComponents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveKeysPage);\n","import React from \"react\";\nimport { AxiosError } from \"axios\";\nimport {\n  IRow,\n  ICell,\n  Table,\n  TableHeader,\n  TableBody,\n  IAction\n} from \"@patternfly/react-table\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from \"@patternfly/react-core\";\nimport { PlusCircleIcon } from \"@patternfly/react-icons\";\nimport KeysPageTabs from \"../../../PresentationalComponents/KeysPageTabs\";\nimport { FetchStatus } from \"../../../store/common\";\nimport {\n  ComponentRepresentation,\n  ServerInfoRepresentation,\n  ComponentTypeRepresentation\n} from \"../../../models/xml-builder\";\nimport { Link } from \"react-router-dom\";\nimport SkeletonTable from \"../../../PresentationalComponents/SkeletonTable\";\nimport ErrorTable from \"../../../PresentationalComponents/ErrorTable\";\nimport EmptyTable from \"../../../PresentationalComponents/EmptyTable\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport { deleteDialogActions } from \"../../../store/deleteDialog\";\n\ninterface StateToProps {\n  serverInfo: ServerInfoRepresentation | undefined;\n  serverInfoFetchStatus: FetchStatus | undefined;\n  serverInfoError: AxiosError<any> | undefined;\n  organizationComponents: ComponentRepresentation[];\n  organizationComponentsFetchStatus: FetchStatus | undefined;\n  organizationComponentsError: AxiosError<any> | undefined;\n}\n\ninterface DispatchToProps {\n  fetchServerInfo: () => any;\n  fetchOrganizationComponents: (organizationId: string) => any;\n  requestDeleteComponent: (organizationId: string, componentId: string) => any;\n  showDeleteDialog: typeof deleteDialogActions.openModal;\n  closeDeleteDialog: typeof deleteDialogActions.closeModal;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  rows: IRow[];\n  columns: ICell[];\n  actions: IAction[];\n}\n\nclass KeyProvidersPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      rows: [],\n      columns: [\n        { title: \"Nombre\" },\n        { title: \"Kid\" },\n        { title: \"Proveedor\" },\n        { title: \"Prioridad\" }\n      ],\n      actions: [\n        {\n          title: \"Editar\",\n          onClick: (event, rowId) => {\n            const component = this.props.organizationComponents[rowId];\n            this.handleEditar(component);\n          }\n        },\n        {\n          title: \"Eliminar\",\n          onClick: (event, rowId) => {\n            const component = this.props.organizationComponents[rowId];\n            this.handleDelete(component);\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.loadSystemInfoAndComponents();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      _prevProps.organizationComponents !== this.props.organizationComponents\n    ) {\n      this.filtersInRowsAndCells();\n    }\n  }\n\n  loadSystemInfoAndComponents = () => {\n    const { fetchServerInfo, fetchOrganizationComponents } = this.props;\n    fetchServerInfo();\n    fetchOrganizationComponents(this.getOrganizationId());\n  };\n\n  getOrganizationId = () => {\n    return this.props.match.params.organizationId;\n  };\n\n  filtersInRowsAndCells = (\n    components: ComponentRepresentation[] = this.props.organizationComponents\n  ) => {\n    const rows: (IRow | string[])[] = components.map(\n      (component: ComponentRepresentation) => ({\n        cells: [\n          {\n            title: component.name\n          },\n          {\n            title: (\n              <Link key={component.id} to={this.getComponentEditUrl(component)}>\n                {component.id}\n              </Link>\n            )\n          },\n          {\n            title: component.providerId\n          },\n          {\n            title: component.config[\"priority\"][0]\n          }\n        ]\n      })\n    );\n\n    this.setState({\n      rows\n    });\n  };\n\n  // handle\n\n  getComponentEditUrl = (component: ComponentRepresentation) => {\n    const { match } = this.props;\n    return `${match.url}/${component.providerId}/${component.id}`;\n  };\n\n  handleEditar = (component: ComponentRepresentation) => {\n    const { history } = this.props;\n    history.push(this.getComponentEditUrl(component));\n  };\n\n  handleDelete = (component: ComponentRepresentation) => {\n    const {\n      showDeleteDialog,\n      closeDeleteDialog,\n      requestDeleteComponent\n    } = this.props;\n\n    showDeleteDialog({\n      name: component.name,\n      type: \"component\",\n      onDelete: () => {\n        requestDeleteComponent(this.getOrganizationId(), component.id).then(\n          () => {\n            closeDeleteDialog();\n            this.loadSystemInfoAndComponents();\n          }\n        );\n      },\n      onCancel: () => {\n        closeDeleteDialog();\n      }\n    });\n  };\n\n  // render\n\n  renderTable = () => {\n    const { columns, rows, actions } = this.state;\n    const {\n      serverInfoError,\n      organizationComponentsError,\n      serverInfoFetchStatus,\n      organizationComponentsFetchStatus\n    } = this.props;\n\n    if (\n      serverInfoFetchStatus !== \"complete\" ||\n      organizationComponentsFetchStatus !== \"complete\"\n    ) {\n      return <SkeletonTable columns={columns} rowSize={5} />;\n    }\n\n    if (serverInfoError || organizationComponentsError) {\n      const retry = () => {\n        this.loadSystemInfoAndComponents();\n      };\n      return <ErrorTable columns={columns} retry={retry} />;\n    }\n\n    if (rows.length === 0) {\n      return <EmptyTable columns={columns} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Table\n          aria-label=\"Keys List Table\"\n          cells={columns}\n          rows={rows}\n          actions={actions}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { serverInfo, match } = this.props;\n\n    return (\n      <React.Fragment>\n        <KeysPageTabs activeKey={2}>\n          <Card>\n            <CardHeader>\n              <Toolbar className=\"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\">\n                <ToolbarGroup>\n                  <ToolbarItem className=\"pf-u-mr-xl\"></ToolbarItem>\n                </ToolbarGroup>\n                <ToolbarGroup>\n                  {serverInfo && (\n                    <React.Fragment>\n                      {serverInfo.componentTypes.keyProviders\n                        .sort((a, b) => a.id.localeCompare(b.id))\n                        .map((provider: ComponentTypeRepresentation) => (\n                          <ToolbarItem key={provider.id} className=\"pf-u-mx-md\">\n                            <Link to={`${match.url}/${provider.id}`}>\n                              <Button variant=\"link\" icon={<PlusCircleIcon />}>\n                                {provider.id}\n                              </Button>\n                            </Link>\n                          </ToolbarItem>\n                        ))}\n                    </React.Fragment>\n                  )}\n                </ToolbarGroup>\n              </Toolbar>\n            </CardHeader>\n          </Card>\n          {this.renderTable()}\n        </KeysPageTabs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default KeyProvidersPage;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { ServerInfoRepresentation } from \"../../models/xml-builder\";\nimport { get } from \"../../api/serverInfo\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\n\nexport const fetchServerInfoRequest = createAction(\"serverInfoFetch/request\")();\nexport const fetchServerInfoSuccess = createAction(\"serverInfoFetch/success\")<\n  ServerInfoRepresentation\n>();\nexport const fetchServerInfoFailure = createAction(\"serverInfoFetch/failure\")<\n  AxiosError\n>();\n\nexport const fetchServerInfo = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchServerInfoRequest());\n\n    return get()\n      .then((res: AxiosResponse<ServerInfoRepresentation>) => {\n        dispatch(fetchServerInfoSuccess(res.data));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchServerInfoFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import ApiClient from \"./apiClient\";\nimport { AxiosPromise } from \"axios\";\nimport {\n  ServerInfoRepresentation\n} from \"../models/xml-builder\";\n\nconst SERVER_INFO_URL = \"/server-info\";\n\nexport const get = (): AxiosPromise<ServerInfoRepresentation> => {\n  return ApiClient.get<ServerInfoRepresentation>(SERVER_INFO_URL);\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { ServerInfoRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchServerInfoRequest,\n  fetchServerInfoSuccess,\n  fetchServerInfoFailure\n} from \"./actions\";\n\nexport const stateKey = \"serverInfo\";\n\nexport type ServerInfoState = Readonly<{\n  serverInfo: ServerInfoRepresentation | undefined;\n  error: AxiosError<any> | undefined;\n  status: FetchStatus;\n}>;\n\nexport const defaultState: ServerInfoState = {\n  serverInfo: undefined,\n  error: undefined,\n  status: \"none\"\n};\n\nexport type OrganizationKeysAction = ActionType<\n  | typeof fetchServerInfoRequest\n  | typeof fetchServerInfoSuccess\n  | typeof fetchServerInfoFailure\n>;\n\nexport function serverInfoReducer(\n  state = defaultState,\n  action: OrganizationKeysAction\n): ServerInfoState {\n  switch (action.type) {\n    case getType(fetchServerInfoRequest):\n      return {\n        ...state,\n        status: \"inProgress\"\n      };\n    case getType(fetchServerInfoSuccess):\n      return {\n        ...state,\n        status: \"complete\",\n        error: undefined,\n        serverInfo: action.payload\n      };\n    case getType(fetchServerInfoFailure):\n      return {\n        ...state,\n        status: \"complete\",\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const serverInfoState = (state: RootState) => state[stateKey];\n\nexport const selectServerInfo = (state: RootState) =>\n  serverInfoState(state).serverInfo;\nexport const selectServerInfoFetchStatus = (state: RootState) =>\n  serverInfoState(state).status;\nexport const selectServerInfoError = (state: RootState) =>\n  serverInfoState(state).error;\n","import { AxiosError } from 'axios';\nimport { createAction } from 'typesafe-actions';\n\ninterface Item {\n  name: string;\n  type: string;\n  onDelete: () => void;\n  onCancel: () => void;\n}\n\nexport const openModal = createAction('dialog/delete/open')<Item>();\nexport const closeModal = createAction('dialog/delete/close')<void>();\nexport const processing = createAction('dialog/delete/processing')<void>();\nexport const error = createAction('dialog/delete/error')<AxiosError>();\n","import { ActionType, getType } from 'typesafe-actions';\nimport { closeModal, error, openModal, processing } from './actions';\n\nexport const stateKey = 'deleteDialog';\n\nexport type DeleteDialogState = Readonly<{\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n  onDelete: () => void;\n}>;\n\nexport const defaultState: DeleteDialogState = {\n  isOpen: false,\n  isProcessing: false,\n  isError: false,\n  name: '',\n  type: '',\n  onDelete: () => { },\n};\n\nexport type DeleteDialogAction = ActionType<\n  typeof openModal | typeof closeModal | typeof processing | typeof error\n>;\n\nexport const reducer = (\n  state: DeleteDialogState = defaultState,\n  action: DeleteDialogAction\n): DeleteDialogState => {\n  switch (action.type) {\n    case getType(openModal):\n      return {\n        ...state,\n        ...action.payload,\n        isOpen: true,\n      };\n    case getType(processing):\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case getType(closeModal):\n      return defaultState;\n    case getType(error):\n      return {\n        ...state,\n        isError: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { RootState } from '../rootReducer';\nimport { stateKey } from './reducer';\n\nexport const deleteDialogState = (state: RootState) => state[stateKey];\n\nexport const isProcessing = (state: RootState) => deleteDialogState(state).isProcessing;\n\nexport const isOpen = (state: RootState) => deleteDialogState(state).isOpen;\n\nexport const isError = (state: RootState) => deleteDialogState(state).isError;\n\nexport const name = (state: RootState) => deleteDialogState(state).name;\n\nexport const type = (state: RootState) => deleteDialogState(state).type;\n\nexport const onDelete = (state: RootState) => deleteDialogState(state).onDelete;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { ComponentRepresentation } from \"../../models/xml-builder\";\nimport {\n  getOrganizationComponent,\n  createOrganizationComponent,\n  updateOrganizationComponent,\n  deleteOrganizationComponent\n} from \"../../api/organizations\";\nimport { alert, alertFetchEndpoint } from \"../alert/actions\";\n\ninterface OrganizationComponentActionMeta {\n  organizationId: string;\n}\n\ninterface ComponentItemActionMeta extends OrganizationComponentActionMeta {\n  componentId: string;\n}\n\nexport const fetchComponentRequest = createAction(\"component/fetch/request\")<\n  ComponentItemActionMeta\n>();\nexport const fetchComponentSuccess = createAction(\"component/fetch/success\")<\n  ComponentRepresentation,\n  ComponentItemActionMeta\n>();\nexport const fetchComponentFailure = createAction(\"component/fetch/failure\")<\n  AxiosError,\n  ComponentItemActionMeta\n>();\n\nexport const createComponentRequest = createAction(\"component/create/request\")<\n  OrganizationComponentActionMeta\n>();\nexport const createComponentSuccess = createAction(\"component/create/success\")<\n  ComponentRepresentation,\n  OrganizationComponentActionMeta\n>();\nexport const createComponentFailure = createAction(\"component/create/failure\")<\n  AxiosError,\n  OrganizationComponentActionMeta\n>();\n\nexport const updateComponentRequest = createAction(\"component/update/request\")<\n  ComponentItemActionMeta\n>();\nexport const updateComponentSuccess = createAction(\"component/update/success\")<\n  ComponentRepresentation,\n  ComponentItemActionMeta\n>();\nexport const updateComponentFailure = createAction(\"component/update/failure\")<\n  AxiosError,\n  ComponentItemActionMeta\n>();\n\nexport const deleteComponentRequest = createAction(\"component/delete/request\")<\n  ComponentItemActionMeta\n>();\nexport const deleteComponentSuccess = createAction(\"component/delete/success\")<\n  string,\n  ComponentItemActionMeta\n>();\nexport const deleteComponentFailure = createAction(\"component/delete/failure\")<\n  AxiosError,\n  ComponentItemActionMeta\n>();\n\nexport const fetchComponent = (organizationId: string, componentId: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: ComponentItemActionMeta = {\n      organizationId: organizationId,\n      componentId: componentId\n    };\n\n    dispatch(fetchComponentRequest(meta));\n\n    return getOrganizationComponent(organizationId, componentId)\n      .then((res: AxiosResponse<ComponentRepresentation>) => {\n        dispatch(fetchComponentSuccess(res.data, meta));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchComponentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestCreateComponent = (\n  organizationId: string,\n  component: ComponentRepresentation\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationComponentActionMeta = {\n      organizationId: organizationId\n    };\n\n    dispatch(createComponentRequest(meta));\n    return createOrganizationComponent(organizationId, component)\n      .then((res: AxiosResponse<ComponentRepresentation>) => {\n        dispatch(createComponentSuccess(res.data, meta));\n        alert({\n          title: `Creado satisfactoriamente`,\n          variant: \"success\",\n          description: `Componente ${component.name} creado`\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createComponentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestUpdateComponent = (\n  organizationId: string,\n  component: ComponentRepresentation\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: ComponentItemActionMeta = {\n      organizationId: organizationId,\n      componentId: component.id\n    };\n\n    dispatch(updateComponentRequest(meta));\n    return updateOrganizationComponent(organizationId, component)\n      .then((res: AxiosResponse<ComponentRepresentation>) => {\n        dispatch(updateComponentSuccess(res.data, meta));\n        alert({\n          title: `Actualizado satisfactoriamante`,\n          description: `Componente ${component.id} actualizado`,\n          variant: \"success\"\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(updateComponentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestDeleteComponent = (\n  organizationId: string,\n  componentId: string\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: ComponentItemActionMeta = {\n      organizationId: organizationId,\n      componentId: componentId\n    };\n\n    dispatch(deleteComponentRequest(meta));\n    return deleteOrganizationComponent(organizationId, componentId)\n      .then((res: AxiosResponse) => {\n        dispatch(deleteComponentSuccess(res.data, meta));\n        alert({\n          title: `Eliminado satisfactoriamente`,\n          description: `Componente ${componentId} eliminado`,\n          variant: \"success\"\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(updateComponentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { ComponentRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchComponentRequest,\n  fetchComponentSuccess,\n  fetchComponentFailure\n} from \"./actions\";\n\nexport const stateKey = \"component\";\n\nexport type ComponentState = Readonly<{\n  byId: Map<string, ComponentRepresentation>;\n  errors: Map<string, AxiosError | undefined>;\n  fetchStatus: Map<string, FetchStatus>;\n}>;\n\nexport const defaultState: ComponentState = {\n  byId: new Map(),\n  errors: new Map(),\n  fetchStatus: new Map()\n};\n\nexport type ComponentAction = ActionType<\n  | typeof fetchComponentRequest\n  | typeof fetchComponentSuccess\n  | typeof fetchComponentFailure\n>;\n\nexport function componentReducer(\n  state = defaultState,\n  action: ComponentAction\n): ComponentState {\n  switch (action.type) {\n    case getType(fetchComponentRequest):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.payload.componentId,\n          \"inProgress\"\n        )\n      };\n    case getType(fetchComponentSuccess):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.componentId,\n          \"complete\"\n        ),\n        byId: new Map(state.byId).set(action.meta.componentId, {\n          ...action.payload\n        }),\n        errors: new Map(state.errors).set(action.meta.componentId, undefined)\n      };\n    case getType(fetchComponentFailure):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.componentId,\n          \"complete\"\n        ),\n        errors: new Map(state.errors).set(\n          action.meta.componentId,\n          action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationComponentsState = (state: RootState) =>\n  state[stateKey];\n\n//\n\nexport const selectComponent = (state: RootState, componentId: string) =>\n  organizationComponentsState(state).byId.get(componentId);\nexport const selectComponentFetchStatus = (\n  state: RootState,\n  componentId: string\n) => organizationComponentsState(state).fetchStatus.get(componentId);\nexport const selectComponentError = (state: RootState, componentId: string) =>\n  organizationComponentsState(state).errors.get(componentId);\n","import { connect } from \"react-redux\";\nimport KeyProvidersPage from \"./KeyProvidersPage\";\n\nimport { createMapStateToProps } from \"../../../store/common\";\nimport {\n  organizationComponentsActions,\n  organizationComponentsSelectors\n} from \"../../../store/organizationComponents\";\nimport {\n  serverInfoSelectors,\n  serverInfoActions\n} from \"../../../store/serverInfo\";\nimport { deleteDialogActions } from \"../../../store/deleteDialog\";\nimport { componentActions } from \"../../../store/organizationComponent\";\n\nconst mapStateToProps = createMapStateToProps((state, ownProps: any) => {\n  const organizationId = ownProps.match.params.organizationId;\n  return {\n    serverInfo: serverInfoSelectors.selectServerInfo(state),\n    serverInfoFetchStatus: serverInfoSelectors.selectServerInfoFetchStatus(\n      state\n    ),\n    serverInfoError: serverInfoSelectors.selectServerInfoError(state),\n\n    organizationComponents: organizationComponentsSelectors.selectOrganizationComponents(\n      state,\n      organizationId\n    ),\n    organizationComponentsFetchStatus: organizationComponentsSelectors.selectOrganizationComponentsFetchStatus(\n      state,\n      organizationId\n    ),\n    organizationComponentsError: organizationComponentsSelectors.selectOrganizationComponentsError(\n      state,\n      organizationId\n    )\n  };\n});\n\nconst mapDispatchToProps = {\n  fetchServerInfo: serverInfoActions.fetchServerInfo,\n  fetchOrganizationComponents:\n    organizationComponentsActions.fetchOrganizationComponents,\n  requestDeleteComponent: componentActions.requestDeleteComponent,\n  showDeleteDialog: deleteDialogActions.openModal,\n  closeDeleteDialog: deleteDialogActions.closeModal\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyProvidersPage);\n","import React from \"react\";\nimport { AxiosError } from \"axios\";\nimport {\n  IRow,\n  ICell,\n  cellWidth,\n  Table,\n  TableHeader,\n  TableBody,\n  expandable\n} from \"@patternfly/react-table\";\nimport { ClipboardCopy } from \"@patternfly/react-core\";\nimport KeysPageTabs from \"../../../PresentationalComponents/KeysPageTabs\";\nimport { FetchStatus } from \"../../../store/common\";\nimport {\n  ComponentRepresentation,\n  KeysMetadataRepresentation,\n  KeyMetadataRepresentation\n} from \"../../../models/xml-builder\";\nimport KeyButtonModal from \"../../../PresentationalComponents/KeyButtonModal\";\nimport SkeletonTable from \"../../../PresentationalComponents/SkeletonTable\";\nimport ErrorTable from \"../../../PresentationalComponents/ErrorTable\";\nimport EmptyTable from \"../../../PresentationalComponents/EmptyTable\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\n\ninterface StateToProps {\n  organizationKeys: KeysMetadataRepresentation | undefined;\n  organizationKeysFetchStatus: FetchStatus | undefined;\n  organizationKeysError: AxiosError<any> | undefined;\n  organizationComponents: ComponentRepresentation[];\n  organizationComponentsFetchStatus: FetchStatus | undefined;\n  organizationComponentsError: AxiosError<any> | undefined;\n}\n\ninterface DispatchToProps {\n  fetchOrganizationKeys: (organizationId: string) => any;\n  fetchOrganizationComponents: (organizationId: string) => any;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  activeMap: Map<string, KeyMetadataRepresentation>;\n  rows: IRow[];\n  columns: ICell[];\n}\n\nclass KeyListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeMap: new Map(),\n      rows: [],\n      columns: [\n        { title: \"Estatus\", transforms: [], cellFormatters: [expandable] },\n        { title: \"Tipo\", transforms: [] },\n        { title: \"Llave\", transforms: [] },\n        { title: \"Prioridad\", transforms: [] },\n        { title: \"Proveedor\", transforms: [] },\n        { title: \"Llave pública\", transforms: [cellWidth(\"10\")] },\n        { title: \"Certificado\", transforms: [cellWidth(\"10\")] }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.loadKeysAndComponents();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    const { activeMap } = this.state;\n    const { organizationKeys, organizationComponents } = this.props;\n\n    if (\n      organizationKeys &&\n      organizationComponents &&\n      organizationComponents.length > 0 &&\n      activeMap.size === 0\n    ) {\n      this.processKeysAndComponents();\n    }\n  }\n\n  loadKeysAndComponents = () => {\n    const { fetchOrganizationKeys, fetchOrganizationComponents } = this.props;\n\n    this.setState({ activeMap: new Map() }, () => {\n      fetchOrganizationKeys(this.getOrganizationId());\n      fetchOrganizationComponents(this.getOrganizationId());\n    });\n  };\n\n  getOrganizationId = () => {\n    return this.props.match.params.organizationId;\n  };\n\n  processKeysAndComponents = () => {\n    const { organizationKeys, organizationComponents } = this.props;\n    if (organizationKeys && organizationComponents) {\n      const active: any = {};\n\n      for (let i = 0; i < organizationKeys.keys.length; i++) {\n        for (let j = 0; j < organizationComponents.length; j++) {\n          const key: KeyMetadataRepresentation = organizationKeys.keys[i];\n          const component: ComponentRepresentation = organizationComponents[j];\n          if (key.providerId === component.id) {\n            key.provider = organizationComponents[j];\n          }\n        }\n      }\n\n      for (const t in organizationKeys.active) {\n        if (organizationKeys.active[t]) {\n          for (let i = 0; i < organizationKeys.keys.length; i++) {\n            if (organizationKeys.active[t] === organizationKeys.keys[i].kid) {\n              active[t] = organizationKeys.keys[i];\n            }\n          }\n        }\n      }\n\n      const activeMap: Map<string, KeyMetadataRepresentation> = new Map();\n      for (const key in active) {\n        if (active[key]) {\n          activeMap.set(key, active[key]);\n        }\n      }\n\n      this.setState({ activeMap: activeMap }, () => {\n        this.filtersInRowsAndCells();\n      });\n    }\n  };\n\n  filtersInRowsAndCells = (\n    map: Map<string, KeyMetadataRepresentation> = this.state.activeMap\n  ) => {\n    const rows: (IRow | string[])[] = [];\n\n    let index: number = -1;\n    map.forEach((key: KeyMetadataRepresentation) => {\n      index++;\n\n      rows.push(\n        {\n          isOpen: false,\n          cells: [\n            {\n              title: key.status\n            },\n            {\n              title: key.type\n            },\n            {\n              title: key.kid\n            },\n            {\n              title: key.providerPriority\n            },\n            {\n              title: key.provider ? (\n                <span>{key.provider.name}</span>\n              ) : (\n                <small>No provider identified</small>\n              )\n            },\n            {\n              title: (\n                <KeyButtonModal\n                  buttonLabel=\"Ver\"\n                  title=\"Llave pública\"\n                  keyValue={key.publicKey}\n                />\n              )\n            },\n            {\n              title: (\n                <KeyButtonModal\n                  buttonLabel=\"Ver\"\n                  title=\"Certificado\"\n                  keyValue={key.certificate}\n                />\n              )\n            }\n          ]\n        },\n        {\n          parent: index * 2,\n          fullWidth: false,\n          cells: [\n            {\n              title: (\n                <React.Fragment>\n                  <div className=\"pf-c-content\">\n                    <dl>\n                      <dt>Llave pública</dt>\n                      <dd>\n                        <ClipboardCopy>{key.publicKey}</ClipboardCopy>\n                      </dd>\n                      <dt>Certificado</dt>\n                      <dd>\n                        <ClipboardCopy>{key.certificate}</ClipboardCopy>\n                      </dd>\n                    </dl>\n                  </div>\n                </React.Fragment>\n              )\n            }\n          ]\n        }\n      );\n    });\n\n    this.setState({\n      rows\n    });\n  };\n\n  // handle\n\n  handleOnTableCollapse = (_event: any, rowKey: number, isOpen: boolean) => {\n    const { rows } = this.state;\n\n    rows[rowKey].isOpen = isOpen;\n    this.setState({ rows });\n  };\n\n  // render\n\n  renderTable = () => {\n    const { columns, rows } = this.state;\n    const {\n      organizationKeysError,\n      organizationComponentsError,\n      organizationKeysFetchStatus,\n      organizationComponentsFetchStatus\n    } = this.props;\n\n    if (\n      organizationKeysFetchStatus !== \"complete\" ||\n      organizationComponentsFetchStatus !== \"complete\"\n    ) {\n      return <SkeletonTable columns={columns} rowSize={5} />;\n    }\n\n    if (organizationKeysError || organizationComponentsError) {\n      const retry = () => {\n        this.loadKeysAndComponents();\n      };\n      return <ErrorTable columns={columns} retry={retry} />;\n    }\n\n    if (rows.length === 0) {\n      return <EmptyTable columns={columns} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Table\n          aria-label=\"Keys List Table\"\n          cells={columns}\n          rows={rows}\n          onCollapse={this.handleOnTableCollapse}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <KeysPageTabs activeKey={1}>{this.renderTable()}</KeysPageTabs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default KeyListPage;\n","import { connect } from \"react-redux\";\nimport KeyListPage from \"./KeyListPage\";\n\nimport { createMapStateToProps } from \"../../../store/common\";\nimport {\n  organizationKeysActions,\n  organizationKeysSelectors\n} from \"../../../store/organizationKeys\";\nimport {\n  organizationComponentsActions,\n  organizationComponentsSelectors\n} from \"../../../store/organizationComponents\";\n\nconst mapStateToProps = createMapStateToProps((state, ownProps: any) => {\n  const organizationId = ownProps.match.params.organizationId;\n  return {\n    organizationKeys: organizationKeysSelectors.selectOrganizationKeys(\n      state,\n      organizationId\n    ),\n    organizationKeysFetchStatus: organizationKeysSelectors.selectOrganizationKeysFetchStatus(\n      state,\n      organizationId\n    ),\n    organizationKeysError: organizationKeysSelectors.selectOrganizationKeysError(\n      state,\n      organizationId\n    ),\n\n    organizationComponents: organizationComponentsSelectors.selectOrganizationComponents(\n      state,\n      organizationId\n    ),\n    organizationComponentsFetchStatus: organizationComponentsSelectors.selectOrganizationComponentsFetchStatus(\n      state,\n      organizationId\n    ),\n    organizationComponentsError: organizationComponentsSelectors.selectOrganizationComponentsError(\n      state,\n      organizationId\n    )\n  };\n});\n\nconst mapDispatchToProps = {\n  fetchOrganizationKeys: organizationKeysActions.fetchOrganizationKeys,\n  fetchOrganizationComponents:\n    organizationComponentsActions.fetchOrganizationComponents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyListPage);\n","import PropertySwitch from \"./PropertySwitch\";\n\nexport default PropertySwitch;\n","import React from \"react\";\nimport { Switch } from \"@patternfly/react-core\";\nimport { ConfigPropertyRepresentation } from \"../../models/xml-builder\";\n\nexport interface Props {\n  defaultValue: boolean | string;\n  property: ConfigPropertyRepresentation;\n  onChange: (isChecked: boolean) => any;\n}\n\nexport interface State {\n  isChecked: boolean;\n}\n\nclass PropertySwitch extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isChecked:\n        typeof props.defaultValue === \"string\"\n          ? props.defaultValue === \"true\"\n          : props.defaultValue\n    };\n  }\n\n  handleChange = (isChecked: boolean) => {\n    this.setState({ isChecked });\n    this.props.onChange(isChecked);\n  };\n\n  render() {\n    const { property } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <React.Fragment>\n        <Switch\n          id={`${property.type}-${property.name}`}\n          label=\"Activado\"\n          labelOff=\"Desactivado\"\n          isChecked={isChecked}\n          onChange={this.handleChange}\n          aria-label=\"Switch property\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PropertySwitch;\n","import PropertySelect from \"./PropertySelect\";\n\nexport default PropertySelect;\n","import React from \"react\";\nimport {\n  Select,\n  SelectVariant,\n  SelectOption,\n  SelectOptionObject,\n  SelectDirection\n} from \"@patternfly/react-core\";\nimport { ConfigPropertyRepresentation } from \"../../models/xml-builder\";\n\nexport interface Props {\n  defaultValue: string;\n  property: ConfigPropertyRepresentation;\n  onChange: (selected: string) => any;\n}\n\nexport interface State {\n  selected: string;\n  isExpanded: boolean;\n}\n\nclass PropertySelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.defaultValue,\n      isExpanded: false\n    };\n  }\n\n  handleOnToggle = (isExpanded: boolean) => {\n    this.setState({ isExpanded });\n  };\n\n  handleOnSelect = (\n    event: React.MouseEvent | React.ChangeEvent,\n    value: string | SelectOptionObject,\n    isPlaceholder?: boolean\n  ) => {\n    if (isPlaceholder) {\n      this.clearSelection();\n    } else {\n      const selected = typeof value === \"string\" ? value : value.toString();\n      this.setState({\n        selected: selected,\n        isExpanded: false\n      });\n      this.props.onChange(selected);\n    }\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selected: \"\",\n      isExpanded: false\n    });\n  };\n\n  render() {\n    const { property } = this.props;\n    const { selected, isExpanded } = this.state;\n\n    return (\n      <React.Fragment>\n        <Select\n          variant={SelectVariant.single}\n          aria-label={property.label}\n          onToggle={this.handleOnToggle}\n          onSelect={this.handleOnSelect}\n          selections={selected}\n          isExpanded={isExpanded}\n          ariaLabelledBy={property.label}\n          direction={SelectDirection.up}\n        >\n          {property.options.map((option: string, index) => (\n            <SelectOption key={index} value={option} />\n          ))}\n        </Select>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PropertySelect;\n","import PropertyFile from \"./PropertyFile\";\n\nexport default PropertyFile;\n","import React from \"react\";\nimport {\n  InputGroup,\n  TextInput,\n  Split,\n  SplitItem\n} from \"@patternfly/react-core\";\nimport { ImportIcon } from \"@patternfly/react-icons\";\nimport { ConfigPropertyRepresentation } from \"../../models/xml-builder\";\n\nexport interface Props {\n  defaultValue: string;\n  property: ConfigPropertyRepresentation;\n  onChange: (fileData: string) => any;\n}\n\nexport interface State {\n  fileData: string;\n}\n\nclass PropertyFile extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      fileData: props.defaultValue\n    };\n  }\n\n  handleChange = (event: any) => {\n    const inputValue = event.target;\n    const file: File = inputValue.files[0];\n\n    const reader: FileReader = new FileReader();\n    reader.onloadend = () => {\n      const data: any = reader.result;\n      this.setState({ fileData: data });\n      this.props.onChange(data);\n    };\n    reader.readAsText(file);\n  };\n\n  render() {\n    const { property } = this.props;\n    const { fileData } = this.state;\n\n    return (\n      <React.Fragment>\n        <Split gutter=\"md\">\n          <SplitItem isFilled>\n            <TextInput\n              id={`${property.type}-${property.name}`}\n              name={property.name}\n              type=\"text\"\n              aria-label=\"key input\"\n              value={fileData}\n            />\n          </SplitItem>\n          <SplitItem>\n            <InputGroup>\n              <label>\n                <span className=\"pf-c-button pf-m-secondary\">\n                  Seleccionar archivo <ImportIcon />\n                  <input\n                    type=\"file\"\n                    onChange={this.handleChange}\n                    style={{ display: \"none\" }}\n                  />\n                </span>\n              </label>\n            </InputGroup>\n          </SplitItem>\n        </Split>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PropertyFile;\n","import ProviderForm from \"./ProviderForm\";\n\nexport default ProviderForm;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Form, FormGroup, TextInput } from \"@patternfly/react-core\";\nimport {\n  ComponentRepresentation,\n  ComponentTypeRepresentation,\n  ConfigPropertyRepresentation\n} from \"../../models/xml-builder\";\nimport PropertySwitch from \"../PropertySwitch\";\nimport PropertySelect from \"../PropertySelect\";\nimport PropertyFile from \"../PropertyFile\";\n\n// export type FormData = {\n//   id: string;\n//   name: string;\n//   config: { [key: string]: string[] };\n// };\n\nexport type FormData = { [key: string]: string | boolean };\n\ninterface Props {\n  provider: ComponentTypeRepresentation | undefined;\n  component: ComponentRepresentation | undefined;\n  onChange: (isValid: boolean, value: FormData) => void;\n}\n\nconst ProviderForm: React.FC<Props> = ({ provider, component, onChange }) => {\n  const schema: any = {\n    id: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .max(250, \"Este campo debe de contener menos de 250 caracteres.\"),\n    name: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(3, \"Este campo debe de contener al menos 3 caracteres.\")\n      .max(250, \"Este campo debe de contener menos de 250 caracteres.\")\n  };\n  if (provider) {\n    provider.properties.forEach((property: ConfigPropertyRepresentation) => {\n      switch (property.type) {\n        case \"boolean\":\n          schema[property.name] = yup\n            .boolean()\n            .typeError(\"Este dato debe de ser true/false\")\n            .required(\"Este dato es requerido.\");\n          break;\n        default:\n          schema[property.name] = yup\n            .string()\n            .trim()\n            .required(\"Este dato es requerido.\");\n          break;\n      }\n    });\n  }\n  const validationSchema = yup.object().shape(schema);\n\n  const defaultValues: any = {\n    priority: 0,\n    active: true,\n    enabled: true,\n    keySize: 2048\n  };\n\n  if (component) {\n    defaultValues.id = component.id;\n    defaultValues.name = component.name;\n    Object.keys(component.config).forEach(key => {\n      defaultValues[key] = component.config[key][0];\n    });\n  }\n\n  const { register, errors, triggerValidation, setValue, getValues } = useForm<\n    FormData\n  >({\n    mode: \"onSubmit\",\n    defaultValues,\n    validationSchema\n  });\n\n  // Lyfe cycle\n\n  React.useEffect(() => {\n    if (provider) {\n      provider.properties.forEach((property: ConfigPropertyRepresentation) => {\n        register({ name: property.name });\n      });\n    }\n  }, [register, provider]);\n\n  // Handlers\n\n  const handleOnFormChange = () => {\n    triggerValidation().then((isValid: boolean) => {\n      onChange(isValid, getValues());\n    });\n  };\n\n  // Render\n\n  const renderConfigProperty = (property: ConfigPropertyRepresentation) => {\n    switch (property.type) {\n      case \"String\":\n        return (\n          <TextInput\n            type=\"text\"\n            key={property.name}\n            id={property.name}\n            name={property.name}\n            aria-describedby={property.helpText}\n            ref={register}\n            isValid={!errors[property.name]}\n          />\n        );\n      case \"Password\":\n        return (\n          <TextInput\n            type=\"password\"\n            key={property.name}\n            id={property.name}\n            name={property.name}\n            aria-describedby={property.helpText}\n            ref={register}\n            isValid={!errors[property.name]}\n          />\n        );\n      case \"boolean\":\n        const handleSwitchChange = (isChecked: boolean): void => {\n          setValue(property.name, isChecked);\n        };\n        return (\n          <PropertySwitch\n            property={property}\n            onChange={handleSwitchChange}\n            defaultValue={defaultValues[property.name]}\n          />\n        );\n      case \"List\":\n        const handleSelectChange = (selected: string): void => {\n          setValue(property.name, selected);\n          handleOnFormChange();\n        };\n        return (\n          <PropertySelect\n            property={property}\n            onChange={handleSelectChange}\n            defaultValue={defaultValues[property.name]}\n          />\n        );\n      case \"File\":\n        const handleFileChange = (fileData: string): void => {\n          setValue(property.name, fileData);\n          handleOnFormChange();\n        };\n        return (\n          <PropertyFile\n            property={property}\n            onChange={handleFileChange}\n            defaultValue={defaultValues[property.name]}\n          />\n        );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={() => {}} onChange={handleOnFormChange} isHorizontal>\n        {component && (\n          <FormGroup\n            label=\"Id\"\n            fieldId=\"id\"\n            isValid={!errors.id}\n            helperTextInvalid={errors.id && errors.id.message}\n          >\n            <TextInput\n              type=\"text\"\n              id=\"id\"\n              name=\"id\"\n              aria-describedby=\"id\"\n              ref={register}\n              isValid={!errors.id}\n              isReadOnly\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label=\"Name\"\n          fieldId=\"name\"\n          helperText=\"Nombre\"\n          isValid={!errors.name}\n          helperTextInvalid={errors.name && errors.name.message}\n        >\n          <TextInput\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            aria-describedby=\"name\"\n            ref={register}\n            isValid={!errors.name}\n          />\n        </FormGroup>\n        {provider &&\n          provider.properties.map((property: ConfigPropertyRepresentation) => {\n            const propertyError = errors[property.name];\n            return (\n              <FormGroup\n                key={property.name}\n                label={property.label}\n                fieldId={property.name}\n                helperText={property.helpText}\n                isValid={!propertyError}\n                helperTextInvalid={propertyError && propertyError.message}\n              >\n                {renderConfigProperty(property)}\n              </FormGroup>\n            );\n          })}\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ProviderForm;\n","import React from \"react\";\nimport { Button, Modal } from \"@patternfly/react-core\";\nimport {\n  ComponentRepresentation,\n  ComponentTypeRepresentation\n} from \"../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport ProviderForm from \"../../PresentationalComponents/ProviderForm\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {\n  requestCreateComponent: (\n    organizationId: string,\n    component: ComponentRepresentation\n  ) => any;\n  requestUpdateComponent: (\n    organizationId: string,\n    component: ComponentRepresentation\n  ) => any;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {\n  component: ComponentRepresentation | undefined;\n  provider: ComponentTypeRepresentation | undefined;\n}\n\ninterface State {\n  saving: boolean;\n  formData: any | null;\n  componentUUID: string;\n}\n\nclass ManageProviderModal extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      saving: false,\n      formData: null,\n      componentUUID: \"component-uuid-key\"\n    };\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (_prevProps.component !== this.props.component && this.props.component) {\n      this.setState({\n        componentUUID: this.props.component.id + Math.random()\n      });\n    }\n  }\n\n  getRedirectTo = (): string => {\n    return `/organizations/manage/${this.getOrganizationId()}/keys/providers`;\n  };\n\n  getOrganizationId = (): string => {\n    const { match } = this.props;\n    return match.params.organizationId;\n  };\n\n  getPayload = () => {\n    const { component } = this.props;\n    const { formData } = this.state;\n\n    const { id, name, ...config } = formData;\n    const configPayload: any = {};\n    Object.keys(config).forEach((key: string) => {\n      configPayload[key] = [config[key].toString()];\n    });\n\n    return {\n      ...component,\n      name: name,\n      config: configPayload\n    };\n  };\n\n  create = () => {\n    const { requestCreateComponent, provider, history } = this.props;\n    const payload: any = {\n      ...this.getPayload(),\n      providerId: provider ? provider.id : undefined\n    };\n    requestCreateComponent(this.getOrganizationId(), payload).then(() => {\n      history.push(this.getRedirectTo());\n    });\n  };\n\n  update = () => {\n    const { requestUpdateComponent, history } = this.props;\n    const payload: any = {\n      ...this.getPayload()\n    };\n    requestUpdateComponent(this.getOrganizationId(), payload).then(() => {\n      history.push(this.getRedirectTo());\n    });\n  };\n\n  // Handlers\n\n  handleModalClose = () => {\n    const { history } = this.props;\n    history.push(this.getRedirectTo());\n  };\n\n  handleModalSave = () => {\n    const { component } = this.props;\n    this.setState({ saving: true }, () => {\n      if (component) {\n        this.update();\n      } else {\n        this.create();\n      }\n    });\n  };\n\n  handleOnFormChange = (isValid: boolean, value: any): void => {\n    if (isValid) {\n      this.setState({ formData: value });\n    } else {\n      this.setState({ formData: null });\n    }\n  };\n\n  render() {\n    const { component, provider } = this.props;\n    const { saving, formData, componentUUID } = this.state;\n\n    return (\n      <React.Fragment>\n        <Modal\n          title={(component ? \"Editar\" : \"Crear\") + \" componente\"}\n          isOpen={true}\n          isLarge={true}\n          onClose={this.handleModalClose}\n          actions={[\n            <Button\n              key=\"confirm\"\n              variant=\"primary\"\n              onClick={this.handleModalSave}\n              isDisabled={!formData || saving}\n            >\n              {saving ? \"Guardando\" : \"Guardar\"}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={this.handleModalClose}>\n              Cancelar\n            </Button>\n          ]}\n        >\n          <ProviderForm\n            key={componentUUID}\n            component={component}\n            provider={provider}\n            onChange={this.handleOnFormChange}\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageProviderModal;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ManageProviderModal from \"./ManageProviderModal\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport { componentActions } from \"../../store/organizationComponent\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {\n  requestCreateComponent: componentActions.requestCreateComponent,\n  requestUpdateComponent: componentActions.requestUpdateComponent\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ManageProviderModal)\n);\n","import React from \"react\";\nimport { AxiosError } from \"axios\";\nimport {\n  ComponentRepresentation,\n  ServerInfoRepresentation,\n  ComponentTypeRepresentation\n} from \"../../../models/xml-builder\";\nimport { FetchStatus } from \"../../../store/common\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport ManageProviderModal from \"../../../SmartComponents/ManageProviderModal\";\n\ninterface StateToProps {\n  serverInfo: ServerInfoRepresentation | undefined;\n  serverInfoError: AxiosError<any> | undefined;\n  serverInfoFetchStatus: FetchStatus | undefined;\n  component: ComponentRepresentation | undefined;\n  componentError: AxiosError<any> | undefined;\n  componentFetchStatus: FetchStatus | undefined;\n}\n\ninterface DispatchToProps {\n  fetchServerInfo: () => any;\n  fetchComponent: (organizationId: string, componentId: string) => any;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {}\n\nclass ManageProviderPage extends React.Component<Props, State> {\n  componentDidMount() {\n    const { fetchComponent, fetchServerInfo } = this.props;\n\n    // fetch server info\n    fetchServerInfo();\n\n    // fetch component\n    const organizationId = this.getOrganizationId();\n    const componentId = this.getComponentId();\n    if (organizationId && componentId) {\n      fetchComponent(organizationId, componentId);\n    }\n  }\n\n  getOrganizationId = (): string => {\n    const { match } = this.props;\n    return match.params.organizationId;\n  };\n\n  getProviderId = (): string => {\n    const { match } = this.props;\n    return match.params.providerId;\n  };\n\n  getComponentId = (): string => {\n    const { match } = this.props;\n    return match.params.componentId;\n  };\n\n  getProvider = (): ComponentTypeRepresentation | undefined => {\n    const { serverInfo } = this.props;\n    if (serverInfo) {\n      const providerId = this.getProviderId();\n\n      const keyProviders = serverInfo.componentTypes.keyProviders;\n      for (let i = 0; i < keyProviders.length; i++) {\n        const provider = keyProviders[i];\n        if (provider.id === providerId) {\n          return provider;\n        }\n      }\n    }\n  };\n\n  render() {\n    const { component } = this.props;\n    const provider = this.getProvider();\n\n    return (\n      <React.Fragment>\n        <ManageProviderModal component={component} provider={provider} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageProviderPage;\n","import { connect } from \"react-redux\";\nimport ManageProviderPage from \"./ManageProviderPage\";\n\nimport { createMapStateToProps } from \"../../../store/common\";\nimport { componentActions, componentSelectors } from \"../../../store/organizationComponent\";\nimport {\n  serverInfoSelectors,\n  serverInfoActions\n} from \"../../../store/serverInfo\";\n\nconst mapStateToProps = createMapStateToProps((state, ownProps: any) => {\n  const componentId = ownProps.match.params.componentId;\n  \n  return {\n    component: componentSelectors.selectComponent(state, componentId),\n    componentFetchStatus: componentSelectors.selectComponentFetchStatus(state, componentId),\n    componentError: componentSelectors.selectComponentError(state, componentId),\n\n    serverInfo: serverInfoSelectors.selectServerInfo(state),\n    serverInfoFetchStatus: serverInfoSelectors.selectServerInfoFetchStatus(state),\n    serverInfoError: serverInfoSelectors.selectServerInfoError(state)\n  };\n});\n\nconst mapDispatchToProps = {\n  fetchComponent: componentActions.fetchComponent,\n  fetchServerInfo: serverInfoActions.fetchServerInfo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageProviderPage);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ActiveKeysPage from \"./ActiveKeysPage\";\nimport KeyProviderspage from \"./KeyProvidersPage\";\nimport KeyListPage from \"./KeyListPage\";\nimport { organizationContextActions } from \"../../store/organizationContext\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport ManageProviderPage from \"./ManageProviderPage\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\n\ninterface StateToProps {\n  contextOrganizations: OrganizationRepresentation[];\n}\n\ninterface DispatchToProps {\n  selectOrganizationContext: typeof organizationContextActions.selectOrganizationContext;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\nconst KeysPage: React.FC<Props> = ({\n  match,\n  contextOrganizations,\n  selectOrganizationContext\n}) => {\n  // Select organization context\n  const organizationId = match.params.organizationId;\n  if (match.params.organizationId) {\n    const organization = contextOrganizations.find(p => p.id === organizationId);\n    if (organization) {\n      selectOrganizationContext(organization);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path={match.path} component={ActiveKeysPage} exact={true} />\n        <Route\n          path={`${match.path}/list`}\n          component={KeyListPage}\n          exact={false}\n        />\n        <Route\n          path={`${match.path}/providers`}\n          component={KeyProviderspage}\n          exact={true}\n        />\n        <Route\n          path={`${match.path}/providers/:providerId`}\n          component={ManageProviderPage}\n          exact={true}\n        />\n        <Route\n          path={`${match.path}/providers/:providerId/:componentId`}\n          component={ManageProviderPage}\n          exact={true}\n        />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default KeysPage;\n","import KeysPage from \"./KeysPage\";\n\nimport { connect } from \"react-redux\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationContextActions,\n  organizationContextSelectors\n} from \"../../store/organizationContext\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  contextOrganizations: organizationContextSelectors.organizations(state)\n}));\n\nconst mapDispatchToProps = {\n  selectOrganizationContext: organizationContextActions.selectOrganizationContext\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeysPage);\n","import SearchBoxForm from \"./SearchBoxForm\";\n\nexport default SearchBoxForm;\n","import React from \"react\";\nimport {\n  Form,\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\n\nexport type FormData = {\n  filterText: string;\n};\n\ninterface Props {\n  handleOnSubmit: (data: FormData) => void;\n}\n\nconst SearchBoxForm: React.FC<Props> = ({ handleOnSubmit }) => {\n  const validationSchema = yup.object().shape({\n    filterText: yup\n      .string()\n      .trim()\n      .max(250, \"Este campo debe de contener menos de 250 caracteres.\")\n  });\n\n  const { register, errors, handleSubmit } = useForm<FormData>({\n    validationSchema\n  });\n\n  // Handlers\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSubmit(handleOnSubmit)}>\n        <InputGroup>\n          <TextInput\n            type=\"search\"\n            placeholder=\"Filtrar por nombre...\"\n            id=\"filterText\"\n            name=\"filterText\"\n            aria-describedby=\"Filter text\"\n            ref={register}\n            isValid={!errors.filterText}\n          />\n          <Button\n            type=\"submit\"\n            variant={ButtonVariant.tertiary}\n            aria-label=\"search button for search input\"\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default SearchBoxForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AxiosError } from \"axios\";\nimport {\n  PageSection,\n  Button,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Card,\n  CardHeader,\n  Pagination\n} from \"@patternfly/react-core\";\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  ICell,\n  IRow,\n  cellWidth,\n  IAction\n} from \"@patternfly/react-table\";\nimport {\n  OrganizationRepresentation,\n  SearchResultsRepresentation\n} from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../../store/common\";\nimport SearchBoxForm from \"../../PresentationalComponents/SearchBoxForm\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport SkeletonTable from \"../../PresentationalComponents/SkeletonTable\";\nimport ErrorTable from \"../../PresentationalComponents/ErrorTable\";\nimport EmptyTable from \"../../PresentationalComponents/EmptyTable\";\nimport { deleteDialogActions } from \"../../store/deleteDialog\";\n\ninterface StateToProps {\n  organizations: SearchResultsRepresentation<OrganizationRepresentation>;\n  error: AxiosError<any> | null;\n  fetchStatus: FetchStatus;\n}\n\ninterface DispatchToProps {\n  fetchOrganizations: (\n    filterText: string,\n    page: number,\n    pageSize: number\n  ) => Promise<void>;\n  deleteOrganization: (organizationId: string) => Promise<void>;\n  showDeleteDialog: typeof deleteDialogActions.openModal;\n  closeDeleteDialog: typeof deleteDialogActions.closeModal;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  filterText: string;\n  page: number;\n  pageSize: number;\n  rows: IRow[];\n  columns: ICell[];\n  actions: IAction[];\n}\n\nclass OrganizationListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filterText: \"\",\n      page: 1,\n      pageSize: 10,\n      rows: [],\n      columns: [\n        { title: \"Nombre\", transforms: [cellWidth(\"30\")] },\n        { title: \"Descripcion\", transforms: [] },\n        { title: \"Tipo\", transforms: [cellWidth(\"10\")] }\n      ],\n      actions: [\n        {\n          title: \"Editar\",\n          onClick: this.handleEditar\n        },\n        {\n          title: \"Eliminar\",\n          onClick: this.handleEliminar\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.refreshData();\n  }\n\n  refreshData = async (\n    page: number = this.state.page,\n    pageSize: number = this.state.pageSize,\n    filterText: string = this.state.filterText\n  ) => {\n    const { fetchOrganizations } = this.props;\n\n    await fetchOrganizations(filterText, page, pageSize);\n    this.filtersInRowsAndCells();\n  };\n\n  filtersInRowsAndCells = (\n    data: SearchResultsRepresentation<OrganizationRepresentation> = this.props\n      .organizations\n  ) => {\n    const rows: (IRow | string[])[] = data.items.map(\n      (item: OrganizationRepresentation) => {\n        return {\n          cells: [\n            {\n              title: (\n                <Link to={`/organizations/manage/${item.id}/keys`}>\n                  {item.name}\n                </Link>\n              )\n            },\n            {\n              title: item.description ? (\n                <span>{item.description}</span>\n              ) : (\n                <small>No description</small>\n              )\n            },\n            {\n              title: item.type\n            }\n          ]\n        };\n      }\n    );\n\n    this.setState({ rows });\n  };\n\n  // handlers\n\n  handleEditar = (event: React.MouseEvent, rowIndex: number): void => {\n    const { history, organizations } = this.props;\n    history.push(\"/organizations/edit/\" + organizations.items[rowIndex].id);\n  };\n\n  handleEliminar = (event: React.MouseEvent, rowIndex: number) => {\n    const {\n      showDeleteDialog,\n      closeDeleteDialog,\n      deleteOrganization\n    } = this.props;\n\n    const { organizations } = this.props;\n    const organization = organizations.items[rowIndex];\n\n    showDeleteDialog({\n      name: organization.name,\n      type: \"organización\",\n      onDelete: () => {\n        deleteOrganization(organization.id).then(() => {\n          closeDeleteDialog();\n        });\n      },\n      onCancel: () => {\n        closeDeleteDialog();\n      }\n    });\n  };\n\n  handleSearchSubmit = (values: any) => {\n    const page = 1;\n    const { pageSize } = this.state;\n    const filterText: string = values.filterText.trim();\n\n    this.setState({ filterText }, () => {\n      this.refreshData(page, pageSize, filterText);\n    });\n  };\n\n  onPageChange = (event: any, page: number) => {\n    this.setState({ page }, () => {\n      this.refreshData(page);\n    });\n  };\n\n  handleOnSetPage = (event: any, page: number) => {\n    return this.onPageChange(event, page);\n  };\n\n  handleOnPageInput = (event: any, page: number) => {\n    return this.onPageChange(event, page);\n  };\n\n  handleOnPerPageSelect = (_event: any, pageSize: number) => {\n    let page = this.state.page;\n    const total = this.props.organizations.totalSize;\n\n    // If current page and perPage would request data beyond total, show last available page\n    if (page * pageSize > total) {\n      page = Math.floor(total / pageSize) + 1;\n    }\n\n    this.setState({ page, pageSize }, () => {\n      this.refreshData(page, pageSize);\n    });\n  };\n\n  // render\n\n  renderSearchBox = () => {\n    return <SearchBoxForm handleOnSubmit={this.handleSearchSubmit} />;\n  };\n\n  renderPagination = (isCompact: boolean) => {\n    const { page, pageSize } = this.state;\n    const { organizations } = this.props;\n    return (\n      <Pagination\n        itemCount={organizations.totalSize}\n        page={page}\n        perPage={pageSize}\n        onPageInput={this.handleOnPageInput}\n        onSetPage={this.handleOnSetPage}\n        widgetId=\"pagination-options-menu-top\"\n        onPerPageSelect={this.handleOnPerPageSelect}\n        isCompact={isCompact}\n      />\n    );\n  };\n\n  renderTable = () => {\n    const { error, fetchStatus } = this.props;\n    const { columns, rows, actions, pageSize } = this.state;\n\n    if (fetchStatus !== \"complete\") {\n      return <SkeletonTable columns={columns} rowSize={pageSize} />;\n    }\n\n    if (error) {\n      const retry = () => {\n        this.refreshData();\n      };\n      return <ErrorTable columns={columns} retry={retry} />;\n    }\n\n    if (rows.length === 0) {\n      return <EmptyTable columns={columns} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Table\n          aria-label=\"Organization List Table\"\n          cells={columns}\n          rows={rows}\n          actions={actions}\n        >\n          <TableHeader />\n          <TableBody />\n          {rows.length > 0 && (\n            <tfoot>\n              <tr>\n                <td colSpan={10}>{this.renderPagination(false)}</td>\n              </tr>\n            </tfoot>\n          )}\n        </Table>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Organizaciones</Text>\n            <Text component=\"small\">\n              Acá podrás administrar las organizaciones del sistema.\n            </Text>\n          </TextContent>\n        </PageSection>\n        <PageSection>\n          <Card>\n            <CardHeader>\n              <Toolbar className=\"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\">\n                <ToolbarGroup>\n                  <ToolbarItem className=\"pf-u-mr-xl\">\n                    {this.renderSearchBox()}\n                  </ToolbarItem>\n                  <ToolbarItem>\n                    <Link to=\"/organizations/create\">\n                      <Button aria-label=\"Crear organización\">\n                        Crear organización\n                      </Button>\n                    </Link>\n                  </ToolbarItem>\n                </ToolbarGroup>\n                <ToolbarGroup>\n                  <ToolbarItem>{this.renderPagination(true)}</ToolbarItem>\n                </ToolbarGroup>\n              </Toolbar>\n            </CardHeader>\n          </Card>\n          {this.renderTable()}\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OrganizationListPage;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAsyncAction } from \"typesafe-actions\";\nimport {\n  OrganizationRepresentation,\n  SearchResultsRepresentation\n} from \"../../models/xml-builder\";\nimport { searchOrganizations } from \"../../api/organizations\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\n\nexport const {\n  request: fetchOrganizationListRequest,\n  success: fetchOrganizationListSuccess,\n  failure: fetchOrganizationListFailure\n} = createAsyncAction(\n  \"organizationList/fetch/request\",\n  \"organizationList/fetch/success\",\n  \"organizationList/fetch/failure\"\n)<void, SearchResultsRepresentation<OrganizationRepresentation>, AxiosError>();\n\nexport const fetchOrganizations = (\n  filterText: string,\n  page: number,\n  pageSize: number\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchOrganizationListRequest());\n\n    return searchOrganizations(filterText, page, pageSize)\n      .then((res: AxiosResponse) => {\n        dispatch(fetchOrganizationListSuccess(res.data));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationListFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport {\n  OrganizationRepresentation,\n  SearchResultsRepresentation\n} from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchOrganizationListRequest,\n  fetchOrganizationListSuccess,\n  fetchOrganizationListFailure\n} from \"./actions\";\n\nexport const stateKey = \"organizationList\";\n\nexport type OrganizationListState = Readonly<{\n  organizations: SearchResultsRepresentation<OrganizationRepresentation>;\n  error: AxiosError<any> | null;\n  status: FetchStatus;\n}>;\n\nexport const defaultState: OrganizationListState = {\n  organizations: { items: [], totalSize: 0 },\n  error: null,\n  status: \"none\"\n};\n\nexport type OrganizationListAction = ActionType<\n  | typeof fetchOrganizationListRequest\n  | typeof fetchOrganizationListSuccess\n  | typeof fetchOrganizationListFailure\n>;\n\nexport function organizationListReducer(\n  state = defaultState,\n  action: OrganizationListAction\n): OrganizationListState {\n  switch (action.type) {\n    case getType(fetchOrganizationListRequest):\n      return {\n        ...state,\n        status: \"inProgress\"\n      };\n    case getType(fetchOrganizationListSuccess):\n      return {\n        ...state,\n        status: \"complete\",\n        error: null,\n        organizations: action.payload\n      };\n    case getType(fetchOrganizationListFailure):\n      return {\n        ...state,\n        status: \"complete\",\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationState = (state: RootState) => state[stateKey];\n\nexport const organizations = (state: RootState) => {\n  return organizationState(state).organizations;\n};\n\nexport const status = (state: RootState) => organizationState(state).status;\nexport const error = (state: RootState) => organizationState(state).error;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport {\n  getOrganizationById,\n  createOrganization,\n  updateOrganization,\n  getOrganizationIdByName,\n  removeOrganization\n} from \"../../api/organizations\";\nimport { fetchOrganizations } from \"../organizationContext/actions\";\nimport { alert, alertFetchEndpoint } from \"../alert/actions\";\n\ninterface OrganizationActionMeta {\n  organizationId: string;\n}\n\ninterface OrganizationNameActionMeta {\n  organizationName: string;\n}\n\nexport const fetchOrganizationRequest = createAction(\n  \"organization/fetch/request\"\n)<OrganizationActionMeta>();\nexport const fetchOrganizationSuccess = createAction(\n  \"organization/fetch/success\"\n)<OrganizationRepresentation, OrganizationActionMeta>();\nexport const fetchOrganizationFailure = createAction(\n  \"organization/fetch/failure\"\n)<AxiosError, OrganizationActionMeta>();\n\nexport const createOrganizationRequest = createAction(\n  \"organization/create/request\"\n)();\nexport const createOrganizationSuccess = createAction(\n  \"organization/create/success\"\n)<OrganizationRepresentation>();\nexport const createOrganizationFailure = createAction(\n  \"organization/create/failure\"\n)<AxiosError>();\n\nexport const updateOrganizationRequest = createAction(\n  \"organization/update/request\"\n)<OrganizationActionMeta>();\nexport const updateOrganizationSuccess = createAction(\n  \"organization/update/success\"\n)<OrganizationRepresentation, OrganizationActionMeta>();\nexport const updateOrganizationFailure = createAction(\n  \"organization/update/failure\"\n)<AxiosError, OrganizationActionMeta>();\n\nexport const deleteOrganizationRequest = createAction(\n  \"organization/delete/request\"\n)<OrganizationActionMeta>();\nexport const deleteOrganizationSuccess = createAction(\n  \"organization/delete/success\"\n)<OrganizationRepresentation, OrganizationActionMeta>();\nexport const deleteOrganizationFailure = createAction(\n  \"organization/delete/failure\"\n)<AxiosError, OrganizationActionMeta>();\n\nexport const fetchOrganizationIdByNameRequest = createAction(\n  \"organization/fetchIdByName/request\"\n)<OrganizationNameActionMeta>();\nexport const fetchOrganizationIdByNameSuccess = createAction(\n  \"organization/fetchIdByName/success\"\n)<string | null, OrganizationNameActionMeta>();\nexport const fetchOrganizationIdByNameFailure = createAction(\n  \"organization/fetchIdByName/failure\"\n)<AxiosError, OrganizationNameActionMeta>();\n\nexport const fetchOrganization = (organizationId: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationActionMeta = {\n      organizationId\n    };\n\n    dispatch(fetchOrganizationRequest(meta));\n\n    return getOrganizationById(organizationId)\n      .then((res: AxiosResponse<OrganizationRepresentation>) => {\n        dispatch(fetchOrganizationSuccess(res.data, meta));\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestCreateOrganization = (\n  organization: OrganizationRepresentation\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(createOrganizationRequest());\n    return createOrganization(organization)\n      .then((res: AxiosResponse<OrganizationRepresentation>) => {\n        dispatch(createOrganizationSuccess(res.data));\n        fetchOrganizations()(dispatch);\n        alert({\n          title: `Creado satisfactoriamente`,\n          description: `Organización ${organization.name} creada`,\n          variant: \"success\"\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createOrganizationFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestUpdateOrganization = (\n  organizationId: string,\n  organization: OrganizationRepresentation\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationActionMeta = {\n      organizationId\n    };\n\n    dispatch(updateOrganizationRequest(meta));\n\n    return updateOrganization(organizationId, organization)\n      .then((res: AxiosResponse<OrganizationRepresentation>) => {\n        dispatch(updateOrganizationSuccess(res.data, meta));\n        fetchOrganizations()(dispatch);\n        alert({\n          title: `Actualizado satisfactoriamente`,\n          description: `Organización ${organization.name} actualizada`,\n          variant: \"success\"\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(updateOrganizationFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const deleteOrganization = (organizationId: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationActionMeta = {\n      organizationId\n    };\n\n    dispatch(deleteOrganizationRequest(meta));\n\n    return removeOrganization(organizationId)\n      .then((res: AxiosResponse) => {\n        dispatch(deleteOrganizationSuccess(res.data, meta));\n        fetchOrganizations()(dispatch);\n        alert({\n          title: `Eliminado satisfactoriamente`,\n          description: `Organización ${organizationId} eliminada`,\n          variant: \"success\"\n        })(dispatch);\n      })\n      .catch((err: AxiosError) => {\n        dispatch(deleteOrganizationFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\n//\n\nexport const fetchOrganizationIdByName = (organizationName: string) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationNameActionMeta = {\n      organizationName: organizationName\n    };\n\n    dispatch(fetchOrganizationIdByNameRequest(meta));\n\n    return getOrganizationIdByName(organizationName)\n      .then((res: AxiosResponse<string | null>) => {\n        const data = res.data;\n        dispatch(fetchOrganizationIdByNameSuccess(data, meta));\n        return data;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(fetchOrganizationIdByNameFailure(err, meta));\n      });\n  };\n};\n","import { AxiosError } from \"axios\";\nimport { ActionType, getType } from \"typesafe-actions\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../common\";\nimport {\n  fetchOrganizationRequest,\n  fetchOrganizationSuccess,\n  fetchOrganizationFailure\n} from \"./actions\";\n\nexport const stateKey = \"organization\";\n\nexport type OrganizationState = Readonly<{\n  byId: Map<string, OrganizationRepresentation>;\n  errors: Map<string, AxiosError | undefined>;\n  fetchStatus: Map<string, FetchStatus>;\n}>;\n\nexport const defaultState: OrganizationState = {\n  byId: new Map(),\n  errors: new Map(),\n  fetchStatus: new Map()\n};\n\nexport type OrganizationAction = ActionType<\n  | typeof fetchOrganizationRequest\n  | typeof fetchOrganizationSuccess\n  | typeof fetchOrganizationFailure\n>;\n\nexport function organizationReducer(\n  state = defaultState,\n  action: OrganizationAction\n): OrganizationState {\n  switch (action.type) {\n    case getType(fetchOrganizationRequest):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.payload.organizationId,\n          \"inProgress\"\n        )\n      };\n    case getType(fetchOrganizationSuccess):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        byId: new Map(state.byId).set(action.meta.organizationId, {\n          ...action.payload\n        }),\n        errors: new Map(state.errors).set(action.meta.organizationId, undefined)\n      };\n    case getType(fetchOrganizationFailure):\n      return {\n        ...state,\n        fetchStatus: new Map(state.fetchStatus).set(\n          action.meta.organizationId,\n          \"complete\"\n        ),\n        errors: new Map(state.errors).set(\n          action.meta.organizationId,\n          action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { RootState } from \"../rootReducer\";\nimport { stateKey } from \"./reducer\";\n\nexport const organizationState = (state: RootState) => state[stateKey];\n\n// Fetch migration project\n\nexport const selectOrganization = (state: RootState, organizationId: string) =>\n  organizationState(state).byId.get(organizationId);\n\nexport const selectOrganizationFetchStatus = (\n  state: RootState,\n  organizationId: string\n) => organizationState(state).fetchStatus.get(organizationId);\n\nexport const selectOrganizationError = (\n  state: RootState,\n  organizationId: string\n) => organizationState(state).errors.get(organizationId);\n","import { connect } from \"react-redux\";\nimport OrganizationListPage from \"./OrganizationListPage\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationListSelectors,\n  organizationListActions\n} from \"../../store/organizationList\";\nimport { deleteDialogActions } from \"../../store/deleteDialog\";\nimport { organizationActions } from \"../../store/organization\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  organizations: organizationListSelectors.organizations(state),\n  error: organizationListSelectors.error(state),\n  fetchStatus: organizationListSelectors.status(state)\n}));\n\nconst mapDispatchToProps = {\n  fetchOrganizations: organizationListActions.fetchOrganizations,\n  deleteOrganization: organizationActions.deleteOrganization,\n  showDeleteDialog: deleteDialogActions.openModal,\n  closeDeleteDialog: deleteDialogActions.closeModal\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrganizationListPage);\n","import React from \"react\";\nimport { Form, FormGroup, TextInput } from \"@patternfly/react-core\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\n\nexport type FormData = {\n  name: string;\n  description: string;\n};\n\ninterface Props {\n  organization: OrganizationRepresentation | undefined;\n  onChange: (isValid: boolean, value: FormData) => void;\n  fetchOrganizationIdByName: (organizationName: string) => any;\n}\n\nconst OrganizationForm: React.FC<Props> = ({\n  organization,\n  onChange,\n  fetchOrganizationIdByName\n}) => {\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .trim()\n      .required(\"Este dato es obligatorio.\")\n      .min(\n        3,\n        \"El nombre de la organización debe de contener al menos 3 caracteres.\"\n      )\n      .max(\n        250,\n        \"El nombre de la organización debe de contener menos de 250 caracteres.\"\n      )\n      .test(\n        \"availableOrganizationName\",\n        \"El nombre de la organización ingresada ya está en uso.\",\n        async value => {\n          return await fetchOrganizationIdByName(value).then(\n            (value: string) => {\n              return !value || (organization && value === organization.id);\n            }\n          );\n        }\n      ),\n    description: yup\n      .string()\n      .nullable()\n      .trim()\n      .max(\n        250,\n        \"La descripción de la organización debe de contener menos de 250 caracteres.\"\n      )\n  });\n\n  const { register, errors, getValues, triggerValidation } = useForm<FormData>({\n    mode: \"onSubmit\",\n    defaultValues: organization\n      ? { name: organization.name, description: organization.description }\n      : undefined,\n    validationSchema\n  });\n\n  // Handlers\n\n  const handleOnFormChange = () => {\n    triggerValidation().then((isValid: boolean) => {\n      onChange(isValid, getValues());\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={() => {}} onChange={handleOnFormChange}>\n        <FormGroup\n          label=\"Nombre\"\n          isRequired\n          fieldId=\"name\"\n          helperText=\"Nombre de la organización\"\n          isValid={!errors.name}\n          helperTextInvalid={errors.name && errors.name.message}\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            aria-describedby=\"name\"\n            ref={register}\n            isValid={!errors.name}\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Descripción\"\n          fieldId=\"description\"\n          isValid={!errors.description}\n          helperTextInvalid={errors.description && errors.description.message}\n        >\n          <textarea\n            className=\"pf-c-form-control\"\n            aria-invalid=\"false\"\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Breve descripción de la organización.\"\n            ref={register}\n          ></textarea>\n        </FormGroup>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default OrganizationForm;\n","import OrganizationForm from \"./OrganizationForm\";\n\nimport { connect } from \"react-redux\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport { organizationActions } from \"../../store/organization\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {\n  fetchOrganizationIdByName: organizationActions.fetchOrganizationIdByName\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationForm);\n","import React from \"react\";\nimport { Button, Modal } from \"@patternfly/react-core\";\nimport OrganizationForm from \"../OrganizationForm\";\nimport { FormData } from \"../OrganizationForm/OrganizationForm\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { AxiosError } from \"axios\";\nimport { FetchStatus } from \"../../store/common\";\n\ninterface Props {\n  match: any;\n  history: any;\n  location: any;\n\n  organizationId: string | null;\n\n  organization: OrganizationRepresentation | undefined;\n  error: AxiosError<any> | undefined;\n  status: FetchStatus | undefined;\n\n  fetchOrganization: (organizationId: string) => any;\n  createOrganization: (organization: OrganizationRepresentation) => any;\n  updateOrganization: (\n    organizationId: string,\n    organization: OrganizationRepresentation\n  ) => any;\n}\n\ninterface State {\n  saving: boolean;\n  organizationFormData: FormData | null;\n  organizationUUID: string;\n}\n\nclass ManageOrganizationModal extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      saving: false,\n      organizationFormData: null,\n      organizationUUID: \"organization-key-uuid\"\n    };\n  }\n\n  componentDidMount() {\n    const { organizationId, fetchOrganization } = this.props;\n    if (organizationId) {\n      fetchOrganization(organizationId);\n    }\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      _prevProps.organization !== this.props.organization &&\n      this.props.organization\n    ) {\n      this.setState({\n        organizationUUID: this.props.organization.id + Math.random()\n      });\n    }\n  }\n\n  handleModalSave = () => {\n    const { organizationFormData } = this.state;\n    const { organizationId } = this.props;\n\n    if (!organizationFormData) {\n      return;\n    }\n\n    this.setState({ saving: true }, () => {\n      if (organizationId) {\n        const { updateOrganization, history } = this.props;\n\n        const payload: any = {\n          name: organizationFormData.name,\n          description: organizationFormData.description,\n          type: \"\",\n          useMasterKeys: false\n        };\n\n        updateOrganization(organizationId, payload).then(() => {\n          history.push(\"/organizations/list\");\n        });\n      } else {\n        const { createOrganization, history } = this.props;\n\n        const payload: any = {\n          name: organizationFormData.name,\n          description: organizationFormData.description,\n          type: \"\",\n          useMasterKeys: false\n        };\n\n        createOrganization(payload).then(() => {\n          history.push(\"/organizations/list\");\n        });\n      }\n    });\n  };\n\n  handleModalClose = () => {\n    const { history } = this.props;\n    history.push(\"/organizations/list\");\n  };\n\n  handleOnFormChange = (isValid: boolean, value: FormData): void => {\n    if (isValid) {\n      this.setState({\n        organizationFormData: value\n      });\n    } else {\n      this.setState({\n        organizationFormData: null\n      });\n    }\n  };\n\n  render() {\n    const { saving, organizationFormData, organizationUUID } = this.state;\n    const { organizationId, organization } = this.props;\n\n    return (\n      <React.Fragment>\n        <Modal\n          title={(organizationId ? \"Editar\" : \"Crear\") + \" organización\"}\n          isOpen={true}\n          isSmall={true}\n          onClose={this.handleModalClose}\n          actions={[\n            <Button\n              key=\"confirm\"\n              variant=\"primary\"\n              onClick={this.handleModalSave}\n              isDisabled={!organizationFormData || saving}\n            >\n              {saving ? \"Guardando\" : \"Guardar\"}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={this.handleModalClose}>\n              Cancelar\n            </Button>\n          ]}\n        >\n          <OrganizationForm\n            key={organizationUUID}\n            organization={organization}\n            onChange={this.handleOnFormChange}\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageOrganizationModal;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ManageOrganizationModal from \"./ManageOrganizationModal\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationActions,\n  organizationSelectors\n} from \"../../store/organization\";\n\nconst mapStateToProps = createMapStateToProps((state, ownProps: any) => {\n  return {\n    organization: organizationSelectors.selectOrganization(\n      state,\n      ownProps.organizationId\n    ),\n    error: organizationSelectors.selectOrganizationError(\n      state,\n      ownProps.organizationId\n    ),\n    status: organizationSelectors.selectOrganizationFetchStatus(\n      state,\n      ownProps.organizationId\n    )\n  };\n});\n\nconst mapDispatchToProps = {\n  fetchOrganization: organizationActions.fetchOrganization,\n  createOrganization: organizationActions.requestCreateOrganization,\n  updateOrganization: organizationActions.requestUpdateOrganization\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ManageOrganizationModal)\n);\n","import OrganizationPage from \"./OrganizationPage\";\n\nexport default OrganizationPage;\n","import React from \"react\";\nimport ManageOrganizationModal from \"../../SmartComponents/ManageOrganizationModal\";\n\ninterface Props {\n  match: any;\n  history: any;\n  location: any;\n}\n\ninterface State {}\n\nclass OrganizationPage extends React.Component<Props, State> {\n  render() {\n    const { match } = this.props;\n\n    return (\n      <React.Fragment>\n        <ManageOrganizationModal organizationId={match.params.organizationId} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OrganizationPage;\n","export const extractFilenameFromContentDispositionHeaderValue = (headers: any) => {\n  const contentDisposition = headers[\"content-disposition\"];\n\n  let filename = \"\";\n  if (contentDisposition && contentDisposition.indexOf(\"attachment\") !== -1) {\n    const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n    const matches = filenameRegex.exec(contentDisposition);\n    if (matches != null && matches[1]) {\n      filename = matches[1].replace(/['\"]/g, \"\");\n    }\n  }\n\n  return filename;\n};\n","import GenericToolbarDocument from \"./GenericToolbarDocument\";\n\nexport default GenericToolbarDocument;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  Button,\n  Tabs,\n  Tab\n} from \"@patternfly/react-core\";\nimport { FileIcon } from \"@patternfly/react-icons\";\nimport ReactJson from \"react-json-view\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-xml\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\n\ninterface Props {\n  inputDocument: any;\n  xml: any;\n  xmlFilename: string;\n  enrichedData: any;\n}\n\ninterface State {\n  activeTab: number | string;\n}\n\nclass GenericToolbarDocument extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTab: 0\n    };\n  }\n\n  handleOnDownloadXml = () => {\n    const { xml, xmlFilename } = this.props;\n    const downloadUrl = window.URL.createObjectURL(new Blob([xml]));\n    const link = document.createElement(\"a\");\n    link.href = downloadUrl;\n    link.setAttribute(\"download\", xmlFilename);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n\n  handleOnTabClick = (event: any, tabIndex: number | string) => {\n    this.setState({\n      activeTab: tabIndex\n    });\n  };\n\n  render() {\n    const { inputDocument, enrichedData, xml } = this.props;\n    const { activeTab } = this.state;\n    return (\n      <Card>\n        <CardBody>\n          <Stack gutter=\"sm\">\n            {inputDocument && (\n              <StackItem>\n                <Toolbar>\n                  <ToolbarGroup>\n                    <ToolbarItem>\n                      <Button\n                        variant=\"plain\"\n                        onClick={this.handleOnDownloadXml}\n                      >\n                        <FileIcon /> Descargar XML\n                      </Button>\n                    </ToolbarItem>\n                  </ToolbarGroup>\n                </Toolbar>\n              </StackItem>\n            )}\n            <StackItem>\n              <Tabs\n                isFilled\n                activeKey={activeTab}\n                onSelect={this.handleOnTabClick}\n              >\n                <Tab eventKey={0} title=\"JSON Request\">\n                  <ReactJson src={inputDocument || {}} name={false} />\n                </Tab>\n                <Tab eventKey={1} title=\"JSON Response\">\n                  <ReactJson src={enrichedData} name={false} />\n                </Tab>\n                <Tab eventKey={2} title=\"XML Response\">\n                  <AceEditor\n                    mode=\"xml\"\n                    theme=\"xcode\"\n                    onChange={() => {}}\n                    name=\"xml\"\n                    editorProps={{ $blockScrolling: false }}\n                    readOnly={true}\n                    value={xml || \"\"}\n                    width=\"100\" // This value does not really affect but avoid horizontal overflow\n                  />\n                </Tab>\n              </Tabs>\n            </StackItem>\n          </Stack>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default GenericToolbarDocument;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  SplitItem,\n  CardHeader\n} from \"@patternfly/react-core\";\nimport { DocumentType } from \"../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport { extractFilenameFromContentDispositionHeaderValue } from \"../../Utilities/Utils\";\nimport GenericToolbarDocument from \"../../PresentationalComponents/GenericToolbarDocument\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {\n  requestEnrichDocument: (\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n  requestCreateDocument: (\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {\n  documentType: DocumentType;\n  inputDocument: any;\n}\n\ninterface State {\n  xml: any;\n  xmlFilename: string;\n  enrichedData: any;\n}\n\nclass GenericDocument extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      xml: null,\n      xmlFilename: \"\",\n      enrichedData: {}\n    };\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      this.props.inputDocument &&\n      this.props.inputDocument !== _prevProps.inputDocument\n    ) {\n      this.refresh();\n    }\n  }\n\n  refresh = () => {\n    this.enrichDocument();\n    this.createDocument();\n  };\n\n  enrichDocument = () => {\n    const { requestEnrichDocument, inputDocument, documentType } = this.props;\n\n    requestEnrichDocument(documentType, inputDocument).then((response: any) => {\n      this.setState({ enrichedData: response });\n    });\n  };\n\n  createDocument = () => {\n    const { requestCreateDocument, inputDocument, documentType } = this.props;\n\n    requestCreateDocument(documentType, inputDocument).then((response: any) => {\n      if (response) {\n        const fileName = extractFilenameFromContentDispositionHeaderValue(\n          response.headers\n        );\n        this.setState({\n          xml: response.data,\n          xmlFilename: fileName\n        });\n      }\n    });\n  };\n\n\n\n  render() {\n    const a = () => {\n      this.refresh();\n    };\n\n    console.log(\"renderrrrrrrrr\");\n\n    const { children, inputDocument } = this.props;\n    const { xml, xmlFilename, enrichedData } = this.state;\n    return (\n      <React.Fragment>\n        <button type=\"button\" onClick={a}>\n          carlos3333\n        </button>\n        <Grid lg={2} gutter=\"sm\">\n          <GridItem span={8}>\n            <SplitItem>\n              <Card>\n                <CardHeader>Datos del comprobante de pago</CardHeader>\n                <CardBody>{children}</CardBody>\n              </Card>\n            </SplitItem>\n          </GridItem>\n          <GridItem span={4}>\n            <SplitItem>\n              <GenericToolbarDocument\n                inputDocument={inputDocument}\n                xml={xml}\n                xmlFilename={xmlFilename}\n                enrichedData={enrichedData}\n              />\n            </SplitItem>\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GenericDocument;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { enrichDocument, createDocument } from \"../../api/documents\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\nimport { DocumentType } from \"../../models/xml-builder\";\n\nexport const createEnrichDocumentRequest = createAction(\n  \"document/enrich/request\"\n)();\nexport const createEnrichDocumentSuccess = createAction(\n  \"document/enrich/success\"\n)<any>();\nexport const createEnrichDocumentFailure = createAction(\n  \"document/enrich/failure\"\n)<AxiosError>();\n\nexport const createDocumentRequest = createAction(\"document/create/request\")();\nexport const createDocumentSuccess = createAction(\"document/create/success\")<\n  any\n>();\nexport const createDocumentFailure = createAction(\"document/create/failure\")<\n  AxiosError\n>();\n\nexport const requestEnrichDocument = (\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(createEnrichDocumentRequest());\n    return enrichDocument(documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createEnrichDocumentSuccess(res.data));\n        return res.data;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createEnrichDocumentFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestCreateDocument = (\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(createDocumentRequest());\n    return createDocument(documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createDocumentSuccess(res.data));\n        return res;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createDocumentFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosPromise } from \"axios\";\nimport ApiClient from \"./apiClient\";\nimport { DocumentType } from \"../models/xml-builder\";\n\nconst ENRICH_DOCUMENTS_URL = \"/documents/{documentType}/enrich\";\nconst CREATE_DOCUMENTS_URL = \"/documents/{documentType}/create\";\n\nexport const enrichDocument = (\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    ENRICH_DOCUMENTS_URL.replace(\"{documentType}\", documentType),\n    document\n  );\n};\n\nexport const createDocument = (\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    CREATE_DOCUMENTS_URL.replace(\"{documentType}\", documentType),\n    document\n  );\n};\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport GenericDocument from \"./GenericDocument\";\nimport { documentActions } from \"../../store/document\";\nimport { createMapStateToProps } from \"../../store/common\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {\n  requestEnrichDocument: documentActions.requestEnrichDocument,\n  requestCreateDocument: documentActions.requestCreateDocument\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GenericDocument)\n);\n","import React from \"react\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Tabs,\n  Tab,\n  FormGroup\n} from \"@patternfly/react-core\";\nimport OrganizationContextSelector from \"../../SmartComponents/OrganizationContextSelector\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { isAppInSignerMode } from \"../../Utilities/EnvUtils\";\n\ninterface Props extends XmlBuilderRouterProps {\n  activeKey: number;\n}\n\nconst DocumentsPageTabs: React.FC<Props> = ({\n  match,\n  history,\n  activeKey,\n  children\n}) => {\n  const handleTabClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string\n  ) => {\n    const organizationId = match.params.organizationId;\n    const url = `/organizations/documents/${organizationId}/create`;\n    if (eventKey === 0) {\n      history.push(url + \"/\");\n    } else if (eventKey === 1) {\n      history.push(url + \"/baja\");\n    }\n  };\n\n  const onOrganizationContextSelect = (\n    organization: OrganizationRepresentation\n  ) => {\n    history.push(`/organizations/documents/${organization.id}/create`);\n  };\n\n  const isSignerMode = isAppInSignerMode();\n\n  return (\n    <React.Fragment>\n      <PageSection variant={PageSectionVariants.light}>\n        {isSignerMode && (\n          <div style={{ marginBottom: 20 }}>\n            <div className=\"pf-c-form pf-m-horizontal\">\n              <FormGroup label=\"Organización\" fieldId=\"organizacion\">\n                <OrganizationContextSelector\n                  onSelect={onOrganizationContextSelect}\n                />\n              </FormGroup>\n            </div>\n          </div>\n        )}\n\n        <TextContent>\n          <Text component=\"h1\">Comprobantes electrónicos</Text>\n          <Text component=\"small\">\n            Acá podras simular la creación de comprobantes electrónicos.\n          </Text>\n        </TextContent>\n        <br />\n        <Tabs isFilled activeKey={activeKey} onSelect={handleTabClick}>\n          <Tab\n            eventKey={0}\n            title=\"Documentos básicos (boleta, factura, nota crédito/débito)\"\n          ></Tab>\n          <Tab eventKey={1} title=\"Baja\"></Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection>{children}</PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default DocumentsPageTabs;\n","export const isAppInSignerMode = () => {\n  return process.env.REACT_APP_SIGNER_MODE === \"true\";\n};\n","import DocumentsPageTabs from \"./DocumentsPageTabs\";\nimport { withRouter } from \"react-router-dom\";\n\nexport default withRouter(DocumentsPageTabs);\n","import React from \"react\";\nimport { FormSelect, FormSelectOption } from \"@patternfly/react-core\";\n\ntype TipoComprobantePago =\n  | \"\"\n  | \"FACTURA\"\n  | \"BOLETA\"\n  | \"NOTA_CREDITO\"\n  | \"NOTA_DEBITO\";\nconst tiposDeComprobantes: Map<TipoComprobantePago, string> = new Map([\n  [\"\", \"Seleccione\"],\n  [\"FACTURA\", \"FACTURA\"],\n  [\"BOLETA\", \"BOLETA\"],\n  [\"NOTA_CREDITO\", \"NOTA DE CRÉDITO\"],\n  [\"NOTA_DEBITO\", \"NOTA DE DÉBITO\"]\n]);\n\nexport interface ControlProps {\n  value?: string;\n  onChange?: (selected: string) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n}\n\nexport interface State {\n  selected: string;\n}\n\nclass TipoComprobanteSelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.value ? props.value : \"\"\n    };\n  }\n\n  handleOnChange = (value: string) => {\n    this.setState({\n      selected: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { error } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormSelect\n          value={selected}\n          onChange={this.handleOnChange}\n          isValid={!error}\n          aria-label=\"Tipo comprobante Select\"\n        >\n          {Array.from(tiposDeComprobantes.keys()).map((key, index) => {\n            const label = tiposDeComprobantes.get(key) || \"Invalid key\";\n            return <FormSelectOption key={index} value={key} label={label} />;\n          })}\n        </FormSelect>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TipoComprobanteSelect;\n","import TipoComprobanteSelect from \"./TipoComprobanteSelect\";\n\nexport default TipoComprobanteSelect;\n","import React from \"react\";\nimport { FormSelect, FormSelectOption } from \"@patternfly/react-core\";\n\ntype TipoDocumentoIdentidad =\n  | \"\"\n  | \"DOC_TRIB_NO_DOM_SIN_RUC\"\n  | \"DNI\"\n  | \"EXTRANJERIA\"\n  | \"RUC\"\n  | \"PASAPORTE\"\n  | \"DEC_DIPLOMATICA\";\n\nconst tiposDeDocumentosIdentidad: Map<TipoDocumentoIdentidad, string> = new Map(\n  [\n    [\"\", \"Seleccione\"],\n    [\"DOC_TRIB_NO_DOM_SIN_RUC\", \"DOC. TRIB. NO DOM. SIN RUC\"],\n    [\"DNI\", \"DNI\"],\n    [\"EXTRANJERIA\", \"EXTRANJERIA\"],\n    [\"RUC\", \"RUC\"],\n    [\"PASAPORTE\", \"PASAPORTE\"],\n    [\"DEC_DIPLOMATICA\", \"DEC_DIPLOMATICA\"]\n  ]\n);\n\nexport interface ControlProps {\n  value?: string;\n  onChange?: (selected: string) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n}\n\nexport interface State {\n  selected: string;\n}\n\nclass TipoDocumentoIdentidadSelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.value ? props.value : \"\"\n    };\n  }\n\n  handleOnChange = (value: string) => {\n    this.setState({\n      selected: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { error } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormSelect\n          value={selected}\n          onChange={this.handleOnChange}\n          isValid={!error}\n          aria-label=\"Tipo comprobante Select\"\n        >\n          {Array.from(tiposDeDocumentosIdentidad.keys()).map((key, index) => {\n            const label = tiposDeDocumentosIdentidad.get(key) || \"Invalid key\";\n            return <FormSelectOption key={index} value={key} label={label} />;\n          })}\n        </FormSelect>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TipoDocumentoIdentidadSelect;\n","import TipoDocumentoIdentidadSelect from \"./TipoDocumentoIdentidadSelect\";\n\nexport default TipoDocumentoIdentidadSelect;\n","import React from \"react\";\nimport { FormSelect, FormSelectOption } from \"@patternfly/react-core\";\n\ntype TipoIgv =\n  | \"\"\n  | \"GRAVADO_OPERACION_ONEROSA\"\n  | \"GRAVADO_RETIRO_POR_PREMIO\"\n  | \"GRAVADO_RETIRO_POR_DONACION\"\n  | \"GRAVADO_RETIRO\"\n  | \"GRAVADO_RETIRO_POR_PUBLICIDAD\"\n  | \"GRAVADO_BONIFICACIONES\"\n  | \"GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES\"\n  | \"GRAVADO_IVAP\"\n  | \"EXONERADO_OPERACION_ONEROSA\"\n  | \"EXONERADO_TRANSFERENCIA_GRATUITA\"\n  | \"INAFECTO_OPERACION_ONEROSA\"\n  | \"INAFECTO_RETIRO_POR_BONIFICACION\"\n  | \"INAFECTO_RETIRO\"\n  | \"INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS\"\n  | \"INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO\"\n  | \"INAFECTO_RETIRO_POR_PREMIO\"\n  | \"INAFECTO_RETIRO_POR_PUBLICIDAD\"\n  | \"EXPORTACION\";\n\nconst tiposDeIgv: Map<TipoIgv, string> = new Map([\n  [\"\", \"Seleccione\"],\n  [\"GRAVADO_OPERACION_ONEROSA\", \"GRA. OPERACION ONEROSA\"],\n  [\"GRAVADO_RETIRO_POR_PREMIO\", \"GRA. RETIRO POR PREMIO\"],\n  [\"GRAVADO_RETIRO_POR_DONACION\", \"GRA. RETIRO POR DONACIÓN\"],\n  [\"GRAVADO_RETIRO\", \"GRA. RETIRO\"],\n  [\"GRAVADO_RETIRO_POR_PUBLICIDAD\", \"GRA. RETIRO POR PUBLICIDAD\"],\n  [\"GRAVADO_BONIFICACIONES\", \"GRA. BONIFICACIONES\"],\n  [\n    \"GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES\",\n    \"GRA. RETIRO POR ENTREGA A TRAB.\"\n  ],\n  [\"GRAVADO_IVAP\", \"GRA. IVAP\"],\n  [\"EXONERADO_OPERACION_ONEROSA\", \"EXO. OPERACIÓN ONEROSA\"],\n  [\"EXONERADO_TRANSFERENCIA_GRATUITA\", \"EXO. TRANSFERENCIA GRATUITA\"],\n  [\"INAFECTO_OPERACION_ONEROSA\", \"INA. OPERACIÓN ONEROSA\"],\n  [\"INAFECTO_RETIRO_POR_BONIFICACION\", \"INA. RETIRO POR BONIFICACIÓN\"],\n  [\"INAFECTO_RETIRO\", \"INA. RETIRO\"],\n  [\"INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS\", \"INA. RETIRO POR MUESTRAS MÉDICAS\"],\n  [\n    \"INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO\",\n    \"INA. RETIRO POR CONVENIO COLECTIVO\"\n  ],\n  [\"INAFECTO_RETIRO_POR_PREMIO\", \"INA. RETIRO POR PREMIO\"],\n  [\"INAFECTO_RETIRO_POR_PUBLICIDAD\", \"INA. RETIRO POR PUBLICIDAD\"],\n  [\"EXPORTACION\", \"EXPORTACION\"]\n]);\n\nexport interface ControlProps {\n  value?: string;\n  onChange?: (selected: string) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n}\n\nexport interface State {\n  selected: string;\n}\n\nclass TipoIgvSelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.value ? props.value : \"\"\n    };\n  }\n\n  handleOnChange = (value: string) => {\n    this.setState({\n      selected: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { error } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormSelect\n          value={selected}\n          onChange={this.handleOnChange}\n          isValid={!error}\n          aria-label=\"Tipo IGV Select\"\n        >\n          {Array.from(tiposDeIgv.keys()).map((key, index) => {\n            const label = tiposDeIgv.get(key) || \"Invalid key\";\n            return <FormSelectOption key={index} value={key} label={label} />;\n          })}\n        </FormSelect>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TipoIgvSelect;\n","import TipoIgvSelect from \"./TipoIgvSelect\";\n\nexport default TipoIgvSelect;\n","import SwitchController from \"./SwitchController\";\n\nexport default SwitchController;\n","import React from \"react\";\nimport { Switch } from \"@patternfly/react-core\";\n\nexport interface ControlProps {\n  value?: boolean;\n  onChange?: (isChecked: boolean) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n  labelOn: string;\n  labelOff: string;\n}\n\nexport interface State {\n  isChecked: boolean;\n}\n\nclass SwitchController extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isChecked: props.value ? props.value : false\n    };\n  }\n\n  handleOnChange = (value: boolean) => {\n    console.log(value);\n    this.setState({\n      isChecked: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { labelOn, labelOff } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <React.Fragment>\n        <Switch\n          id=\"switchController\"\n          label={labelOn}\n          labelOff={labelOff}\n          isChecked={isChecked}\n          onChange={this.handleOnChange}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SwitchController;\n","import React from \"react\";\nimport { FormSelect, FormSelectOption } from \"@patternfly/react-core\";\n\ntype TipoNotaCredito =\n  | \"\"\n  | \"ANULACION_DE_LA_OPERACION\"\n  | \"ANULACION_POR_ERROR_EN_EL_RUC\"\n  | \"CORRECCION_POR_ERROR_EN_LA_DESCRIPCION\"\n  | \"DESCUENTO_GLOBAL\"\n  | \"DESCUENTO_POR_ITEM\"\n  | \"DEVOLUCION_TOTAL\"\n  | \"DEVOLUCION_POR_ITEM\"\n  | \"BONIFICACION\"\n  | \"DISMINUCION_EN_EL_VALOR\"\n  | \"OTROS_CONCEPTOS\";\n\nconst tiposDeNotasDeCredito: Map<TipoNotaCredito, string> = new Map(\n  [\n    [\"\", \"Seleccione\"],\n    [\"ANULACION_DE_LA_OPERACION\", \"ANULACIÓN DE LA OPERACIÓN\"],\n    [\"ANULACION_POR_ERROR_EN_EL_RUC\", \"ANULACIÓN POR ERROR EN RUC\"],\n    [\n      \"CORRECCION_POR_ERROR_EN_LA_DESCRIPCION\",\n      \"CORRECCION POR ERROR EN DESCRIPCION\"\n    ],\n    [\"DESCUENTO_GLOBAL\", \"DESCUENTO GLOBAL\"],\n    [\"DESCUENTO_POR_ITEM\", \"DESCUENTO POR ITEM\"],\n    [\"DEVOLUCION_TOTAL\", \"DEVOLUCIÓN TOTAL\"],\n    [\"DEVOLUCION_POR_ITEM\", \"DEVOLUCION POR ITEM\"],\n    [\"BONIFICACION\", \"BONIFICACIÓN\"],\n    [\"DISMINUCION_EN_EL_VALOR\", \"DISMINUCIÓN EN EL VALOR\"],\n    [\"OTROS_CONCEPTOS\", \"OTROS CONCEPTOS\"]\n  ]\n);\n\nexport interface ControlProps {\n  value?: string;\n  onChange?: (selected: string) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n}\n\nexport interface State {\n  selected: string;\n}\n\nclass TipoNotaCreditoSelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.value ? props.value : \"\"\n    };\n  }\n\n  handleOnChange = (value: string) => {\n    this.setState({\n      selected: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { error } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormSelect\n          value={selected}\n          onChange={this.handleOnChange}\n          isValid={!error}\n          aria-label=\"Tipo comprobante Select\"\n        >\n          {Array.from(tiposDeNotasDeCredito.keys()).map((key, index) => {\n            const label = tiposDeNotasDeCredito.get(key) || \"Invalid key\";\n            return <FormSelectOption key={index} value={key} label={label} />;\n          })}\n        </FormSelect>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TipoNotaCreditoSelect;\n","import TipoNotaCreditoSelect from \"./TipoNotaCreditoSelect\";\n\nexport default TipoNotaCreditoSelect;\n","import React from \"react\";\nimport { FormSelect, FormSelectOption } from \"@patternfly/react-core\";\n\ntype TipoNotaDebito =\n  | \"\"\n  | \"INTERES_POR_MORA\"\n  | \"AUMENTO_EN_EL_VALOR\"\n  | \"PENALIDAD_OTROS_CONCEPTOR\";\n\nconst tiposDeNotasDeDebito: Map<TipoNotaDebito, string> = new Map([\n  [\"\", \"Seleccione\"],\n  [\"INTERES_POR_MORA\", \"INTERES POR MORA\"],\n  [\"AUMENTO_EN_EL_VALOR\", \"AUMENTO EN EL VALOR\"],\n  [\"PENALIDAD_OTROS_CONCEPTOR\", \"PENALIDAD OTROS CONCEPTOR\"]\n]);\n\nexport interface ControlProps {\n  value?: string;\n  onChange?: (selected: string) => any;\n}\n\nexport interface Props extends ControlProps {\n  error: any;\n}\n\nexport interface State {\n  selected: string;\n}\n\nclass TipoNotaDebitoSelect extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selected: props.value ? props.value : \"\"\n    };\n  }\n\n  handleOnChange = (value: string) => {\n    this.setState({\n      selected: value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  render() {\n    const { error } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormSelect\n          value={selected}\n          onChange={this.handleOnChange}\n          isValid={!error}\n          aria-label=\"Tipo comprobante Select\"\n        >\n          {Array.from(tiposDeNotasDeDebito.keys()).map((key, index) => {\n            const label = tiposDeNotasDeDebito.get(key) || \"Invalid key\";\n            return <FormSelectOption key={index} value={key} label={label} />;\n          })}\n        </FormSelect>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TipoNotaDebitoSelect;\n","import TipoNotaDebitoSelect from \"./TipoNotaDebitoSelect\";\n\nexport default TipoNotaDebitoSelect;\n","import StandardDocumentForm from \"./StandardDocumentForm\";\n\nexport default StandardDocumentForm;\n","import React, { useState } from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  GridItem,\n  Button,\n  TextInput,\n  InputGroup,\n  InputGroupText,\n  Card,\n  CardBody,\n  Stack,\n  StackItem\n} from \"@patternfly/react-core\";\nimport TipoComprobanteSelect from \"../TipoComprobanteSelect\";\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  cellWidth,\n  ICell\n} from \"@patternfly/react-table\";\nimport {\n  TimesIcon,\n  CalendarAltIcon,\n  AddCircleOIcon\n} from \"@patternfly/react-icons\";\nimport TipoDocumentoIdentidadSelect from \"../TipoDocumentoIdentidadSelect\";\nimport TipoIgvSelect from \"../TipoIgvSelect\";\nimport SwitchController from \"../SwitchController\";\nimport TipoNotaCreditoSelect from \"../TipoNotaCreditoSelect\";\nimport TipoNotaDebitoSelect from \"../TipoNotaDebitoSelect\";\n\nexport type DetalleFormData = {\n  cantidad: number;\n  descripcion: string;\n  precioUnitario: number;\n  tipoIgv: string;\n  unidadMedida: string;\n  icb: boolean;\n};\n\nexport type StandardDocumentFormData = {\n  tipoComprobante: string;\n  serie: string;\n  numero: number;\n  fechaEmision: Date;\n  totalDescuentos: number;\n  totalOtrosCargos: number;\n  proveedorRuc: string;\n  proveedorNombreComercial: string;\n  proveedorCodigoPostal: string;\n  clienteTipoDocumento: string;\n  clienteNumeroDocumento: string;\n  clienteNombre: string;\n  firmanteRuc: string;\n  firmanteRazonSocial: string;\n  detalle: Array<DetalleFormData>;\n\n  tipoNota: string;\n  comprobanteAfectado: string;\n  comprobanteAfectadoSustento: string;\n};\n\ninterface Props {\n  onSubmit: (value: StandardDocumentFormData) => void;\n}\n\nconst StandardDocumentForm: React.FC<Props> = ({ onSubmit }) => {\n  const [isOpenRows, setIsOpenRows] = useState([false]);\n\n  const validationSchema = yup.object().shape({\n    tipoComprobante: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .transform((v: string) => {\n        if (v === \"FACTURA\" || v === \"BOLETA\") return \"invoice\";\n        else if (v === \"NOTA_CREDITO\") return \"credit-note\";\n        else if (v === \"NOTA_DEBITO\") return \"debit-note\";\n        else return v;\n      }),\n    serie: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    numero: yup\n      .number()\n      .typeError(\"Número inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 2 caracteres.\"),\n    fechaEmision: yup\n      .date()\n      .nullable()\n      .transform((v: any) => (isNaN(v) ? undefined : v)),\n    totalDescuentos: yup\n      .number()\n      .nullable()\n      .min(0, \"El valor minimo es 0.\")\n      .transform((v: number) => (isNaN(v) ? undefined : v)),\n    totalOtrosCargos: yup\n      .number()\n      .nullable()\n      .min(0, \"El valor minimo es 0.\")\n      .transform((v: number) => (isNaN(v) ? undefined : v)),\n    proveedorRuc: yup\n      .string()\n      .trim(\"Dato inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    proveedorNombreComercial: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    proveedorCodigoPostal: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    clienteTipoDocumento: yup\n      .string()\n      .trim(\"Dato inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    clienteNumeroDocumento: yup\n      .string()\n      .trim(\"Dato inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    clienteNombre: yup\n      .string()\n      .trim(\"Dato inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    firmanteRuc: yup\n      .string()\n      .nullable()\n      .trim(),\n    firmanteRazonSocial: yup\n      .string()\n      .nullable()\n      .trim(),\n    detalle: yup\n      .array()\n      .of(\n        yup.object().shape({\n          cantidad: yup\n            .number()\n            .required(\"Este dato es requerido.\")\n            .min(0, \"Este campo debe de ser mayor a 0.\"),\n          descripcion: yup\n            .string()\n            .trim()\n            .required(\"Este dato es requerido.\")\n            .min(1, \"Este campo debe de tener al menos 1 caracter.\"),\n          precioUnitario: yup\n            .number()\n            .required(\"Este dato es requerido.\")\n            .min(0, \"Este campo debe de ser mayor a 0.\"),\n          tipoIgv: yup.string().nullable(),\n          unidadMedida: yup\n            .string()\n            .trim()\n            .nullable(),\n          icb: yup.boolean().nullable()\n        })\n      )\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 elemento.\")\n  });\n\n  const defaultDetalleValues = {\n    cantidad: 1,\n    descripcion: \"Nombre de producto o servicio\",\n    precioUnitario: 1,\n    tipoIgv: undefined,\n    unidadMedida: undefined,\n    icb: undefined\n  };\n  const defaultValues = {\n    tipoComprobante: \"FACTURA\",\n    serie: \"F001\",\n    numero: 1,\n    fechaEmision: undefined,\n    proveedorRuc: \"12345678912\",\n    proveedorNombreComercial: \"Project OpenUBL\",\n    proveedorCodigoPostal: \"050101\",\n    clienteTipoDocumento: \"RUC\",\n    clienteNumeroDocumento: \"12312312312\",\n    clienteNombre: \"Nombre de mi cliente\",\n    detalle: [{ ...defaultDetalleValues }]\n  };\n\n  const { register, errors, control, handleSubmit, watch } = useForm<StandardDocumentFormData>({\n    mode: \"onSubmit\",\n    validationSchema,\n    defaultValues\n  });\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"detalle\"\n  });\n  const watchTipoComprobante = watch(\"tipoComprobante\");\n\n  const columns: ICell[] = [\n    { title: \"Cantidad\", transforms: [cellWidth(\"10\")] },\n    { title: \"Descripcion\", transforms: [cellWidth(\"50\")] },\n    { title: \"Precio Unitario\", transforms: [cellWidth(\"10\")] },\n    { title: \"\", transforms: [cellWidth(\"10\")] }\n  ];\n\n  const rows = fields.reduce((a: any[], item: any, index: number) => {\n    const onRemoveClick = () => {\n      remove(index);\n    };\n\n    const detalleErrors: any[] = errors.detalle ? (errors.detalle as any) : [];\n    const detalleError = detalleErrors[index] ? detalleErrors[index] : {};\n\n    a.push(\n      {\n        isOpen:\n          isOpenRows[index * 2] !== undefined ? isOpenRows[index * 2] : false,\n        cells: [\n          {\n            title: (\n              <TextInput\n                name={`detalle[${index}].cantidad`}\n                defaultValue={item.cantidad}\n                type=\"number\"\n                aria-label=\"Cantidad\"\n                ref={register}\n                isValid={!detalleError.cantidad}\n              />\n            )\n          },\n          {\n            title: (\n              <TextInput\n                name={`detalle[${index}].descripcion`}\n                defaultValue={item.descripcion}\n                type=\"text\"\n                aria-label=\"Descripcion\"\n                ref={register}\n                isValid={!detalleError.descripcion}\n              />\n            )\n          },\n          {\n            title: (\n              <TextInput\n                name={`detalle[${index}].precioUnitario`}\n                defaultValue={item.precioUnitario}\n                type=\"number\"\n                aria-label=\"Precio unitario\"\n                placeholder=\"Descripción del producto o servicio\"\n                ref={register}\n                isValid={!detalleError.precioUnitario}\n              />\n            )\n          },\n          {\n            title: (\n              <Button\n                variant=\"plain\"\n                aria-label=\"Action\"\n                onClick={onRemoveClick}\n              >\n                <TimesIcon />\n              </Button>\n            )\n          }\n        ]\n      },\n      {\n        parent: index * 2,\n        fullWidth: false,\n        cells: [\n          {\n            title: (\n              <div\n                className=\"pf-c-form pf-m-horizontal\"\n                style={{ marginTop: 10, marginBottom: 10 }}\n              >\n                <FormGroup\n                  isRequired={false}\n                  label=\"Tipo IGV\"\n                  fieldId=\"tipoIgv\"\n                  isValid={!detalleError.tipoIgv}\n                  helperTextInvalid={\n                    detalleError.tipoIgv && detalleError.tipoIgv.message\n                  }\n                >\n                  <Controller\n                    as={<TipoIgvSelect error={detalleError.tipoIgv} />}\n                    name={`detalle[${index}].tipoIgv`}\n                    control={control}\n                  />\n                </FormGroup>\n                <FormGroup\n                  isRequired={false}\n                  label=\"Unidad medida\"\n                  fieldId=\"unidadMedida\"\n                  isValid={!detalleError.unidadMedida}\n                  helperTextInvalid={\n                    detalleError.unidadMedida &&\n                    detalleError.unidadMedida.message\n                  }\n                >\n                  <TextInput\n                    name={`detalle[${index}].unidadMedida`}\n                    defaultValue={item.unidadMedida}\n                    type=\"text\"\n                    aria-label=\"unidadMedida\"\n                    ref={register}\n                    isValid={!detalleError.unidadMedida}\n                  />\n                </FormGroup>\n                <FormGroup\n                  isRequired={false}\n                  label=\"ICB\"\n                  fieldId=\"icb\"\n                  isValid={!detalleError.icb}\n                  helperTextInvalid={\n                    detalleError.icb && detalleError.icb.message\n                  }\n                >\n                  <Controller\n                    as={\n                      <SwitchController\n                        error={detalleError.icb}\n                        labelOn=\"Activado\"\n                        labelOff=\"desactivado\"\n                      />\n                    }\n                    name={`detalle[${index}].icb`}\n                    control={control}\n                  />\n                </FormGroup>\n              </div>\n            )\n          }\n        ]\n      }\n    );\n    return a;\n  }, []);\n\n  const handleAgregarDetalle = () => {\n    append({ ...defaultDetalleValues });\n  };\n\n  const onDetalleRowCollapse = (\n    event: React.MouseEvent,\n    rowIndex: number,\n    isOpen: boolean\n  ) => {\n    const newValues = [...isOpenRows];\n    newValues[rowIndex] = isOpen;\n    setIsOpenRows(newValues);\n  };\n\n  const onFormSubmit = (data: StandardDocumentFormData) => {\n    onSubmit(data);\n  };\n\n  const isNotaCredito = watchTipoComprobante === \"NOTA_CREDITO\";\n  const isNotaDebito = watchTipoComprobante === \"NOTA_DEBITO\";\n  const isNota = isNotaCredito || isNotaDebito;\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSubmit(onFormSubmit)}>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Tipo comprobante\"\n              fieldId=\"tipoComprobante\"\n              isValid={!errors.tipoComprobante}\n              helperTextInvalid={\n                errors.tipoComprobante && errors.tipoComprobante.message\n              }\n            >\n              <Controller\n                as={<TipoComprobanteSelect error={errors.tipoComprobante} />}\n                name=\"tipoComprobante\"\n                control={control}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            {isNota && (\n              <FormGroup\n                isRequired={false}\n                label=\"Tipo nota\"\n                fieldId=\"tipoNota\"\n                isValid={!errors.tipoNota}\n                helperTextInvalid={errors.tipoNota && errors.tipoNota.message}\n              >\n                {isNotaCredito && (\n                  <Controller\n                    as={<TipoNotaCreditoSelect error={errors.tipoNota} />}\n                    name=\"tipoNota\"\n                    control={control}\n                  />\n                )}\n                {isNotaDebito && (\n                  <Controller\n                    as={<TipoNotaDebitoSelect error={errors.tipoNota} />}\n                    name=\"tipoNota\"\n                    control={control}\n                  />\n                )}\n              </FormGroup>\n            )}\n          </GridItem>\n\n          <GridItem>\n            {isNota && (\n              <FormGroup\n                isRequired={true}\n                label=\"Comprobante afectado\"\n                fieldId=\"comprobanteAfectado\"\n                isValid={!errors.comprobanteAfectado}\n                helperTextInvalid={\n                  errors.comprobanteAfectado &&\n                  errors.comprobanteAfectado.message\n                }\n              >\n                <TextInput\n                  isRequired\n                  type=\"text\"\n                  id=\"comprobanteAfectado\"\n                  name=\"comprobanteAfectado\"\n                  aria-describedby=\"comprobanteAfectado\"\n                  ref={register}\n                  isValid={!errors.comprobanteAfectado}\n                  defaultValue=\"F001-100\"\n                />\n              </FormGroup>\n            )}\n          </GridItem>\n          <GridItem>\n            {isNota && (\n              <FormGroup\n                isRequired={true}\n                label=\"Comprobante afectado sustento\"\n                fieldId=\"comprobanteAfectado\"\n                isValid={!errors.comprobanteAfectadoSustento}\n                helperTextInvalid={\n                  errors.comprobanteAfectadoSustento &&\n                  errors.comprobanteAfectadoSustento.message\n                }\n              >\n                <TextInput\n                  isRequired\n                  type=\"text\"\n                  id=\"comprobanteAfectadoSustento\"\n                  name=\"comprobanteAfectadoSustento\"\n                  aria-describedby=\"comprobanteAfectadoSustento\"\n                  ref={register}\n                  isValid={!errors.comprobanteAfectadoSustento}\n                  defaultValue=\"Sustento de la nota\"\n                />\n              </FormGroup>\n            )}\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Serie\"\n              fieldId=\"serie\"\n              isValid={!errors.serie}\n              helperTextInvalid={errors.serie && errors.serie.message}\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"serie\"\n                name=\"serie\"\n                aria-describedby=\"serie\"\n                ref={register}\n                isValid={!errors.serie}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Número\"\n              fieldId=\"numero\"\n              isValid={!errors.numero}\n              helperTextInvalid={errors.numero && errors.numero.message}\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"numero\"\n                name=\"numero\"\n                aria-describedby=\"numero\"\n                ref={register}\n                isValid={!errors.numero}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={false}\n              label=\"Fecha Emisión\"\n              fieldId=\"fechaEmision\"\n              isValid={!errors.fechaEmision}\n              helperTextInvalid={\n                errors.fechaEmision && errors.fechaEmision.message\n              }\n            >\n              <InputGroup>\n                <InputGroupText component=\"label\" htmlFor=\"fechaEmision\">\n                  <CalendarAltIcon />\n                </InputGroupText>\n                <TextInput\n                  isRequired={false}\n                  type=\"date\"\n                  id=\"fechaEmision\"\n                  name=\"fechaEmision\"\n                  aria-describedby=\"fechaEmision\"\n                  ref={register}\n                  isValid={!errors.fechaEmision}\n                />\n              </InputGroup>\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Proveedor RUC\"\n              fieldId=\"proveedorRuc\"\n              isValid={!errors.proveedorRuc}\n              helperTextInvalid={\n                errors.proveedorRuc && errors.proveedorRuc.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorRuc\"\n                name=\"proveedorRuc\"\n                aria-describedby=\"proveedorRuc\"\n                ref={register}\n                isValid={!errors.proveedorRuc}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Nombre comercial\"\n              fieldId=\"proveedorNombreComercial\"\n              isValid={!errors.proveedorNombreComercial}\n              helperTextInvalid={\n                errors.proveedorNombreComercial &&\n                errors.proveedorNombreComercial.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorNombreComercial\"\n                name=\"proveedorNombreComercial\"\n                aria-describedby=\"proveedorNombreComercial\"\n                ref={register}\n                isValid={!errors.proveedorNombreComercial}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Código postal\"\n              fieldId=\"proveedorCodigoPostal\"\n              isValid={!errors.proveedorCodigoPostal}\n              helperTextInvalid={\n                errors.proveedorCodigoPostal &&\n                errors.proveedorCodigoPostal.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorCodigoPostal\"\n                name=\"proveedorCodigoPostal\"\n                aria-describedby=\"proveedorCodigoPostal\"\n                ref={register}\n                isValid={!errors.proveedorCodigoPostal}\n              />\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Cliente tipo documento\"\n              fieldId=\"clienteTipoDocumento\"\n              isValid={!errors.clienteTipoDocumento}\n              helperTextInvalid={\n                errors.clienteTipoDocumento &&\n                errors.clienteTipoDocumento.message\n              }\n            >\n              <Controller\n                as={\n                  <TipoDocumentoIdentidadSelect\n                    error={errors.clienteTipoDocumento}\n                  />\n                }\n                name=\"clienteTipoDocumento\"\n                control={control}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Número documento\"\n              fieldId=\"clienteNumeroDocumento\"\n              isValid={!errors.clienteNumeroDocumento}\n              helperTextInvalid={\n                errors.clienteNumeroDocumento &&\n                errors.clienteNumeroDocumento.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"clienteNumeroDocumento\"\n                name=\"clienteNumeroDocumento\"\n                aria-describedby=\"clienteNumeroDocumento\"\n                ref={register}\n                isValid={!errors.clienteNumeroDocumento}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Nombre/razón social\"\n              fieldId=\"clienteNombre\"\n              isValid={!errors.clienteNombre}\n              helperTextInvalid={\n                errors.clienteNombre && errors.clienteNombre.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"clienteNombre\"\n                name=\"clienteNombre\"\n                aria-describedby=\"clienteNombre\"\n                ref={register}\n                isValid={!errors.clienteNombre}\n              />\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={false}\n              label=\"Firmante RUC\"\n              fieldId=\"firmanteRuc\"\n              isValid={!errors.firmanteRuc}\n              helperTextInvalid={\n                errors.firmanteRuc && errors.firmanteRuc.message\n              }\n            >\n              <TextInput\n                isRequired={false}\n                type=\"text\"\n                id=\"firmanteRuc\"\n                name=\"firmanteRuc\"\n                aria-describedby=\"firmanteRuc\"\n                ref={register}\n                isValid={!errors.firmanteRuc}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem span={6}>\n            <FormGroup\n              isRequired={false}\n              label=\"Firmante Razón Social\"\n              fieldId=\"firmanteRazonSocial\"\n              isValid={!errors.firmanteRazonSocial}\n              helperTextInvalid={\n                errors.firmanteRazonSocial && errors.firmanteRazonSocial.message\n              }\n            >\n              <TextInput\n                isRequired={false}\n                type=\"text\"\n                id=\"firmanteRazonSocial\"\n                name=\"firmanteRazonSocial\"\n                aria-describedby=\"firmanteRazonSocial\"\n                ref={register}\n                isValid={!errors.firmanteRazonSocial}\n              />\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem span={9}>\n            <Card>\n              <CardBody>\n                <Table\n                  aria-label=\"Document Line Table\"\n                  cells={columns}\n                  rows={rows}\n                  onCollapse={onDetalleRowCollapse}\n                  caption=\"Productos o servicios vendidos\"\n                >\n                  <TableHeader />\n                  <TableBody />\n                  <tfoot>\n                    <tr>\n                      <td colSpan={5}>\n                        <Button\n                          variant=\"tertiary\"\n                          onClick={handleAgregarDetalle}\n                        >\n                          <AddCircleOIcon /> Agregar item\n                        </Button>\n                      </td>\n                    </tr>\n                  </tfoot>\n                </Table>\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem>\n            <Card>\n              <CardBody>\n                <Stack gutter=\"sm\">\n                  <StackItem>\n                    <FormGroup\n                      isRequired={false}\n                      label=\"Total Descuentos\"\n                      fieldId=\"totalDescuentos\"\n                      isValid={!errors.totalDescuentos}\n                      helperTextInvalid={\n                        errors.totalDescuentos && errors.totalDescuentos.message\n                      }\n                    >\n                      <TextInput\n                        isRequired\n                        type=\"number\"\n                        id=\"totalDescuentos\"\n                        name=\"totalDescuentos\"\n                        aria-describedby=\"totalDescuentos\"\n                        ref={register}\n                        isValid={!errors.totalDescuentos}\n                      />\n                    </FormGroup>\n                  </StackItem>\n                  <StackItem>\n                    <FormGroup\n                      isRequired={false}\n                      label=\"Total Otros cargos\"\n                      fieldId=\"totalOtrosCargos\"\n                      isValid={!errors.totalOtrosCargos}\n                      helperTextInvalid={\n                        errors.totalOtrosCargos &&\n                        errors.totalOtrosCargos.message\n                      }\n                    >\n                      <TextInput\n                        isRequired\n                        type=\"number\"\n                        id=\"totalOtrosCargos\"\n                        name=\"totalOtrosCargos\"\n                        aria-describedby=\"totalOtrosCargos\"\n                        ref={register}\n                        isValid={!errors.totalOtrosCargos}\n                      />\n                    </FormGroup>\n                  </StackItem>\n                </Stack>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n        <Button type=\"submit\">Guardar</Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default StandardDocumentForm;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  SplitItem,\n  CardHeader\n} from \"@patternfly/react-core\";\nimport { DocumentType } from \"../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport { extractFilenameFromContentDispositionHeaderValue } from \"../../Utilities/Utils\";\nimport \"ace-builds/src-noconflict/mode-xml\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport GenericToolbarDocument from \"../../PresentationalComponents/GenericToolbarDocument\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {\n  requestEnrichOrganizationDocument: (\n    organizationId: string,\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n  requestCreateOrganizationDocument: (\n    organizationId: string,\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {\n  documentType: DocumentType;\n  inputDocument: any;\n}\n\ninterface State {\n  xml: any;\n  xmlFilename: string;\n  enrichedData: any;\n  activeTab: number | string;\n}\n\nclass GenericOrganizationDocument extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      xml: null,\n      xmlFilename: \"\",\n      enrichedData: {},\n      activeTab: 0\n    };\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      this.props.inputDocument &&\n      this.props.inputDocument !== _prevProps.inputDocument\n    ) {\n      this.refresh();\n    }\n  }\n\n  refresh = () => {\n    this.enrichDocument();\n    this.createDocument();\n  };\n\n  getOrganizationId = () => {\n    const { match } = this.props;\n    return match.params.organizationId;\n  };\n\n  createDocument = () => {\n    const { requestCreateOrganizationDocument, inputDocument, documentType } = this.props;\n    const organizationId = this.getOrganizationId();\n\n    requestCreateOrganizationDocument(organizationId, documentType, inputDocument).then(\n      (response: any) => {\n        if (response) {\n          const fileName = extractFilenameFromContentDispositionHeaderValue(\n            response.headers\n          );\n          this.setState({\n            xml: response.data,\n            xmlFilename: fileName\n          });\n        }\n      }\n    );\n  };\n\n  enrichDocument = () => {\n    const { requestEnrichOrganizationDocument, inputDocument, documentType } = this.props;\n    const organizationId = this.getOrganizationId();\n\n    requestEnrichOrganizationDocument(organizationId, documentType, inputDocument).then(\n      (response: any) => {\n        this.setState({ enrichedData: response });\n      }\n    );\n  };\n\n  render() {\n    const { children, inputDocument } = this.props;\n    const { xml, xmlFilename, enrichedData } = this.state;\n    return (\n      <Grid lg={2} gutter=\"sm\">\n        <GridItem span={8}>\n          <SplitItem>\n            <Card>\n              <CardHeader>Datos del comprobante de pago</CardHeader>\n              <CardBody>{children}</CardBody>\n            </Card>\n          </SplitItem>\n        </GridItem>\n        <GridItem span={4}>\n          <SplitItem>\n            <GenericToolbarDocument\n              inputDocument={inputDocument}\n              xml={xml}\n              xmlFilename={xmlFilename}\n              enrichedData={enrichedData}\n            />\n          </SplitItem>\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default GenericOrganizationDocument;\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { enrichOrganizationDocument, createOrganizationDocument } from \"../../api/organizations\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\nimport { DocumentType } from \"../../models/xml-builder\";\n\ninterface OrganizationDocumentActionMeta {\n  organizationId: string;\n}\n\nexport const createEnrichOrganizationDocumentRequest = createAction(\n  \"organization/document/enrich/request\"\n)<OrganizationDocumentActionMeta>();\nexport const createEnrichOrganizationDocumentSuccess = createAction(\n  \"organization/document/enrich/success\"\n)<any, OrganizationDocumentActionMeta>();\nexport const createEnrichOrganizationDocumentFailure = createAction(\n  \"organization/document/enrich/failure\"\n)<AxiosError, OrganizationDocumentActionMeta>();\n\nexport const createOrganizationDocumentRequest = createAction(\n  \"organization/document/create/request\"\n)<OrganizationDocumentActionMeta>();\nexport const createOrganizationDocumentSuccess = createAction(\n  \"organization/document/create/success\"\n)<any, OrganizationDocumentActionMeta>();\nexport const createOrganizationDocumentFailure = createAction(\n  \"organization/document/create/failure\"\n)<AxiosError, OrganizationDocumentActionMeta>();\n\nexport const requestEnrichOrganizationDocument = (\n  organizationId: string,\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationDocumentActionMeta = {\n      organizationId: organizationId\n    };\n\n    dispatch(createEnrichOrganizationDocumentRequest(meta));\n    return enrichOrganizationDocument(organizationId, documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createEnrichOrganizationDocumentSuccess(res.data, meta));\n        return res.data;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createEnrichOrganizationDocumentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestCreateOrganizationDocument = (\n  organizationId: string,\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    const meta: OrganizationDocumentActionMeta = {\n      organizationId: organizationId\n    };\n\n    dispatch(createOrganizationDocumentRequest(meta));\n    return createOrganizationDocument(organizationId, documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createOrganizationDocumentSuccess(res.data, meta));\n        return res;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createOrganizationDocumentFailure(err, meta));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport GenericOrganizationDocument from \"./GenericOrganizationDocument\";\nimport { organizationDocumentActions } from \"../../store/organizationDocument\";\nimport { createMapStateToProps } from \"../../store/common\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {\n  requestEnrichOrganizationDocument: organizationDocumentActions.requestEnrichOrganizationDocument,\n  requestCreateOrganizationDocument: organizationDocumentActions.requestCreateOrganizationDocument\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GenericOrganizationDocument)\n);\n","import React from \"react\";\nimport { DocumentType } from \"../../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport GenericDocument from \"../../../SmartComponents/GenericDocument\";\nimport DocumentsPageTabs from \"../../../PresentationalComponents/DocumentsPageTabs\";\nimport StandardDocumentForm from \"../../../PresentationalComponents/StandardDocumentForm\";\nimport { StandardDocumentFormData } from \"../../../PresentationalComponents/StandardDocumentForm/StandardDocumentForm\";\nimport GenericOrganizationDocument from \"../../../SmartComponents/GenericOrganizationDocument\";\nimport { isAppInSignerMode } from \"../../../Utilities/EnvUtils\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  form: StandardDocumentFormData | null;\n  documentType: DocumentType;\n}\n\nclass StandardDocumentPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      form: null,\n      documentType: \"invoice\"\n    };\n  }\n\n  processFormAndGetInputDocument = (form: StandardDocumentFormData) => {\n    const result: any = {\n      serie: form.serie,\n      numero: form.numero,\n      fechaEmision: form.fechaEmision ? form.fechaEmision.getTime() : undefined,\n      totalDescuentos: form.totalDescuentos,\n      totalOtrosCargos: form.totalOtrosCargos,\n      proveedor: {\n        ruc: form.proveedorRuc,\n        razonSocial: form.proveedorNombreComercial,\n        codigoPostal: form.proveedorCodigoPostal\n      },\n      cliente: {\n        tipoDocumentoIdentidad: form.clienteTipoDocumento,\n        numeroDocumentoIdentidad: form.clienteNumeroDocumento,\n        nombre: form.clienteNombre\n      },\n      firmante:\n        form.firmanteRuc && form.firmanteRazonSocial\n          ? {\n              ruc: form.firmanteRuc,\n              razonSocial: form.firmanteRazonSocial\n            }\n          : undefined,\n      detalle: form.detalle.map((item: any) => ({\n        descripcion: item.descripcion,\n        precioUnitario: item.precioUnitario,\n        cantidad: item.cantidad,\n        unidadMedida: item.unidadMedida ? item.unidadMedida : undefined,\n        tipoIGV: item.tipoIgv,\n        icb: item.icb\n      }))\n    };\n\n    if (form.comprobanteAfectado) {\n      result.serieNumeroInvoiceReference = form.comprobanteAfectado;\n    }\n    if (form.comprobanteAfectadoSustento) {\n      result.descripcionSustentoInvoiceReference =\n        form.comprobanteAfectadoSustento;\n    }\n    if (form.tipoNota) {\n      result.tipoNota = form.tipoNota;\n    }\n\n    return result;\n  };\n\n  onSubmit = (form: any) => {\n    this.setState({\n      form,\n      documentType: form.tipoComprobante\n    });\n  };\n\n  render() {\n    const { documentType, form } = this.state;\n\n    let inputDocument = null;\n    if (form) {\n      inputDocument = this.processFormAndGetInputDocument(form);\n    }\n\n    const documentForm = <StandardDocumentForm onSubmit={this.onSubmit} />;\n\n    return (\n      <React.Fragment>\n        <DocumentsPageTabs activeKey={0}>\n          {isAppInSignerMode() ? (\n            <GenericOrganizationDocument\n              documentType={documentType}\n              inputDocument={inputDocument}\n            >\n              {documentForm}\n            </GenericOrganizationDocument>\n          ) : (\n            <GenericDocument\n              documentType={documentType}\n              inputDocument={inputDocument}\n            >\n              {documentForm}\n            </GenericDocument>\n          )}\n        </DocumentsPageTabs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StandardDocumentPage;\n","import { connect } from \"react-redux\";\nimport StandardDocumentPage from \"./StandardDocumentPage\";\nimport { createMapStateToProps } from \"../../../store/common\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StandardDocumentPage);\n","import BajaDocumentForm from \"./BajaDocumentForm\";\n\nexport default BajaDocumentForm;\n","import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  GridItem,\n  Button,\n  TextInput,\n  InputGroup,\n  InputGroupText\n} from \"@patternfly/react-core\";\nimport TipoComprobanteSelect from \"../TipoComprobanteSelect\";\nimport { CalendarAltIcon } from \"@patternfly/react-icons\";\n\nexport type BajaDocumentFormData = {\n  numero: number;\n  fechaEmision: Date;\n  proveedorRuc: string;\n  proveedorNombreComercial: string;\n  proveedorCodigoPostal: string;\n  firmanteRuc: string;\n  firmanteRazonSocial: string;\n\n  tipoDocumentReference: string;\n  fechaEmisionDocumentReference: Date;\n  serieNumeroDocumentReference: string;\n  motivoBajaDocumentReference: string;\n};\n\ninterface Props {\n  onSubmit: (value: BajaDocumentFormData) => void;\n}\n\nconst BajaDocumentForm: React.FC<Props> = ({ onSubmit }) => {\n  const validationSchema = yup.object().shape({\n    numero: yup\n      .number()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Valor minimo es 1\"),\n    fechaEmision: yup\n      .date()\n      .nullable()\n      .transform((v: any) => (isNaN(v) ? undefined : v)),\n    tipoDocumentReference: yup\n      .string()\n      .trim()\n      .required(),\n    serieNumeroDocumentReference: yup\n      .string()\n      .trim()\n      .required(),\n    fechaEmisionDocumentReference: yup\n      .date()\n      .required()\n      .transform((v: any) => (isNaN(v) ? undefined : v)),\n    motivoBajaDocumentReference: yup\n      .string()\n      .trim()\n      .required(),\n    proveedorRuc: yup\n      .string()\n      .trim(\"Dato inválido\")\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    proveedorNombreComercial: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    proveedorCodigoPostal: yup\n      .string()\n      .trim()\n      .required(\"Este dato es requerido.\")\n      .min(1, \"Este campo debe de contener al menos 1 caracteres.\"),\n    firmanteRuc: yup\n      .string()\n      .nullable()\n      .trim(),\n    firmanteRazonSocial: yup\n      .string()\n      .nullable()\n      .trim()\n  });\n\n  let today = new Date().toISOString();\n  today = today.substring(0, today.indexOf(\"T\"));\n\n  const defaultValues = {\n    numero: 1,\n    fechaEmision: undefined,\n    proveedorRuc: \"12345678912\",\n    proveedorNombreComercial: \"Project OpenUBL\",\n    proveedorCodigoPostal: \"050101\",\n    tipoDocumentReference: \"FACTURA\",\n    serieNumeroDocumentReference: \"F001-1\",\n    fechaEmisionDocumentReference: today,\n    motivoBajaDocumentReference: \"El motivo de baja del comprobante\"\n  };\n\n  const { register, errors, control, handleSubmit } = useForm<\n    BajaDocumentFormData\n  >({\n    mode: \"onSubmit\",\n    validationSchema,\n    defaultValues\n  });\n\n  const onFormSubmit = (data: BajaDocumentFormData) => {\n    onSubmit(data);\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSubmit(onFormSubmit)}>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Número\"\n              fieldId=\"numero\"\n              isValid={!errors.numero}\n              helperTextInvalid={errors.numero && errors.numero.message}\n            >\n              <TextInput\n                isRequired\n                type=\"number\"\n                id=\"numero\"\n                name=\"numero\"\n                aria-describedby=\"numero\"\n                ref={register}\n                isValid={!errors.numero}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={false}\n              label=\"Fecha Emisión\"\n              fieldId=\"fechaEmision\"\n              isValid={!errors.fechaEmision}\n              helperTextInvalid={\n                errors.fechaEmision && errors.fechaEmision.message\n              }\n            >\n              <InputGroup>\n                <InputGroupText component=\"label\" htmlFor=\"fechaEmision\">\n                  <CalendarAltIcon />\n                </InputGroupText>\n                <TextInput\n                  isRequired={false}\n                  type=\"date\"\n                  id=\"fechaEmision\"\n                  name=\"fechaEmision\"\n                  aria-describedby=\"fechaEmision\"\n                  ref={register}\n                  isValid={!errors.fechaEmision}\n                />\n              </InputGroup>\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Proveedor RUC\"\n              fieldId=\"proveedorRuc\"\n              isValid={!errors.proveedorRuc}\n              helperTextInvalid={\n                errors.proveedorRuc && errors.proveedorRuc.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorRuc\"\n                name=\"proveedorRuc\"\n                aria-describedby=\"proveedorRuc\"\n                ref={register}\n                isValid={!errors.proveedorRuc}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Nombre comercial\"\n              fieldId=\"proveedorNombreComercial\"\n              isValid={!errors.proveedorNombreComercial}\n              helperTextInvalid={\n                errors.proveedorNombreComercial &&\n                errors.proveedorNombreComercial.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorNombreComercial\"\n                name=\"proveedorNombreComercial\"\n                aria-describedby=\"proveedorNombreComercial\"\n                ref={register}\n                isValid={!errors.proveedorNombreComercial}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Código postal\"\n              fieldId=\"proveedorCodigoPostal\"\n              isValid={!errors.proveedorCodigoPostal}\n              helperTextInvalid={\n                errors.proveedorCodigoPostal &&\n                errors.proveedorCodigoPostal.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"proveedorCodigoPostal\"\n                name=\"proveedorCodigoPostal\"\n                aria-describedby=\"proveedorCodigoPostal\"\n                ref={register}\n                isValid={!errors.proveedorCodigoPostal}\n              />\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={false}\n              label=\"Firmante RUC\"\n              fieldId=\"firmanteRuc\"\n              isValid={!errors.firmanteRuc}\n              helperTextInvalid={\n                errors.firmanteRuc && errors.firmanteRuc.message\n              }\n            >\n              <TextInput\n                isRequired={false}\n                type=\"text\"\n                id=\"firmanteRuc\"\n                name=\"firmanteRuc\"\n                aria-describedby=\"firmanteRuc\"\n                ref={register}\n                isValid={!errors.firmanteRuc}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem span={6}>\n            <FormGroup\n              isRequired={false}\n              label=\"Firmante Razón Social\"\n              fieldId=\"firmanteRazonSocial\"\n              isValid={!errors.firmanteRazonSocial}\n              helperTextInvalid={\n                errors.firmanteRazonSocial && errors.firmanteRazonSocial.message\n              }\n            >\n              <TextInput\n                isRequired={false}\n                type=\"text\"\n                id=\"firmanteRazonSocial\"\n                name=\"firmanteRazonSocial\"\n                aria-describedby=\"firmanteRazonSocial\"\n                ref={register}\n                isValid={!errors.firmanteRazonSocial}\n              />\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid md={6} lg={3} gutter=\"sm\">\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Tipo documento baja \"\n              fieldId=\"tipoDocumentReference\"\n              isValid={!errors.tipoDocumentReference}\n              helperTextInvalid={\n                errors.tipoDocumentReference &&\n                errors.tipoDocumentReference.message\n              }\n            >\n              <Controller\n                as={\n                  <TipoComprobanteSelect error={errors.tipoDocumentReference} />\n                }\n                name=\"tipoDocumentReference\"\n                control={control}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Serie y número documento baja\"\n              fieldId=\"serieNumeroDocumentReference\"\n              isValid={!errors.serieNumeroDocumentReference}\n              helperTextInvalid={\n                errors.serieNumeroDocumentReference &&\n                errors.serieNumeroDocumentReference.message\n              }\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                id=\"serieNumeroDocumentReference\"\n                name=\"serieNumeroDocumentReference\"\n                aria-describedby=\"serieNumeroDocumentReference\"\n                ref={register}\n                isValid={!errors.serieNumeroDocumentReference}\n              />\n            </FormGroup>\n          </GridItem>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Fecha emisión documento baja\"\n              fieldId=\"fechaEmisionDocumentReference\"\n              isValid={!errors.fechaEmisionDocumentReference}\n              helperTextInvalid={\n                errors.fechaEmisionDocumentReference &&\n                errors.fechaEmisionDocumentReference.message\n              }\n            >\n              <InputGroup>\n                <InputGroupText\n                  component=\"label\"\n                  htmlFor=\"fechaEmisionDocumentReference\"\n                >\n                  <CalendarAltIcon />\n                </InputGroupText>\n                <TextInput\n                  isRequired={false}\n                  type=\"date\"\n                  id=\"fechaEmisionDocumentReference\"\n                  name=\"fechaEmisionDocumentReference\"\n                  aria-describedby=\"fechaEmisionDocumentReference\"\n                  ref={register}\n                  isValid={!errors.fechaEmisionDocumentReference}\n                />\n              </InputGroup>\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Grid lg={12}>\n          <GridItem>\n            <FormGroup\n              isRequired={true}\n              label=\"Sustento de la baja del documento\"\n              fieldId=\"motivoBajaDocumentReference\"\n              isValid={!errors.motivoBajaDocumentReference}\n              helperTextInvalid={\n                errors.motivoBajaDocumentReference &&\n                errors.motivoBajaDocumentReference.message\n              }\n            >\n              <textarea\n                className=\"pf-c-form-control\"\n                id=\"motivoBajaDocumentReference\"\n                name=\"motivoBajaDocumentReference\"\n                placeholder=\"Sustento.\"\n                ref={register}\n              ></textarea>\n            </FormGroup>\n          </GridItem>\n        </Grid>\n        <Button type=\"submit\">Guardar</Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default BajaDocumentForm;\n","import React from \"react\";\nimport DocumentsPageTabs from \"../../../PresentationalComponents/DocumentsPageTabs\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport GenericDocument from \"../../../SmartComponents/GenericDocument\";\nimport BajaDocumentForm from \"../../../PresentationalComponents/BajaDocumentForm\";\nimport { BajaDocumentFormData } from \"../../../PresentationalComponents/BajaDocumentForm/BajaDocumentForm\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {\n  form: BajaDocumentFormData | null;\n}\n\nclass BajaDocumentPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      form: null\n    };\n  }\n\n  processFormAndGetInputDocument = (form: BajaDocumentFormData) => {\n    const result = {\n      numero: form.numero,\n      fechaEmision: form.fechaEmision ? form.fechaEmision.getTime() : undefined,\n      proveedor: {\n        ruc: form.proveedorRuc,\n        razonSocial: form.proveedorNombreComercial,\n        codigoPostal: form.proveedorCodigoPostal\n      },\n      firmante:\n        form.firmanteRuc && form.firmanteRazonSocial\n          ? {\n              ruc: form.firmanteRuc,\n              razonSocial: form.firmanteRazonSocial\n            }\n          : undefined,\n      tipoDocumentReference: form.tipoDocumentReference,\n      fechaEmisionDocumentReference: form.fechaEmisionDocumentReference\n        ? form.fechaEmisionDocumentReference.getTime()\n        : undefined,\n      serieNumeroDocumentReference: form.serieNumeroDocumentReference,\n      motivoBajaDocumentReference: form.motivoBajaDocumentReference\n    };\n\n    return result;\n  };\n\n  onSubmit = (form: BajaDocumentFormData) => {\n    this.setState({\n      form\n    });\n  };\n\n  render() {\n    const { form } = this.state;\n\n    let inputDocument = null;\n    if (form) {\n      inputDocument = this.processFormAndGetInputDocument(form);\n    }\n\n    return (\n      <React.Fragment>\n        <DocumentsPageTabs activeKey={1}>\n          <GenericDocument\n            documentType=\"voided-document\"\n            inputDocument={inputDocument}\n          >\n            <BajaDocumentForm onSubmit={this.onSubmit} />\n          </GenericDocument>\n        </DocumentsPageTabs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BajaDocumentPage;\n","import { connect } from \"react-redux\";\nimport BajaDocumentPage from \"./BajaDocumentPage\";\nimport { createMapStateToProps } from \"../../../store/common\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BajaDocumentPage);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { organizationContextActions } from \"../../store/organizationContext\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport StandardDocumentPage from \"./StandardDocumentPage\";\nimport BajaDocumentPage from \"./BajaDocumentPage\";\n\ninterface StateToProps {\n  contextOrganizations: OrganizationRepresentation[];\n}\n\ninterface DispatchToProps {\n  selectOrganizationContext: typeof organizationContextActions.selectOrganizationContext;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\nconst DocumentsPage: React.FC<Props> = ({\n  match,\n  contextOrganizations,\n  selectOrganizationContext\n}) => {\n  // Select organization context\n  const organizationId = match.params.organizationId;\n  if (match.params.organizationId) {\n    const organization = contextOrganizations.find(\n      p => p.id === organizationId\n    );\n    if (organization) {\n      selectOrganizationContext(organization);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route\n          path={`${match.path}`}\n          component={StandardDocumentPage}\n          exact={true}\n        />\n        <Route\n          path={`${match.path}/baja`}\n          component={BajaDocumentPage}\n          exact={true}\n        />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default DocumentsPage;\n","import DocumentsPage from \"./DocumentsPage\";\n\nimport { connect } from \"react-redux\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationContextActions,\n  organizationContextSelectors\n} from \"../../store/organizationContext\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  contextOrganizations: organizationContextSelectors.organizations(state) || []\n}));\n\nconst mapDispatchToProps = {\n  selectOrganizationContext: organizationContextActions.selectOrganizationContext\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DocumentsPage);\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFound403 from \"./Pages/Layout/Forbidden403\";\nimport NotFound404 from \"./Pages/Layout/NotFound404\";\nimport ServiceUnavailable503 from \"./Pages/Layout/ServiceUnavailable503\";\nimport HomePage from \"./Pages/HomePage\";\nimport KeysPage from \"./Pages/KeysPage\";\nimport OrganizationListPage from \"./Pages/OrganizationListPage\";\nimport OrganizationPage from \"./Pages/OrganizationPage\";\nimport DocumentsPage from \"./Pages/DocumentsPage\";\nimport { isAppInSignerMode } from \"./Utilities/EnvUtils\";\n\nconst XmlBuilderRoute = (params: any) => {\n  const { component: Component, forSignerMode, ...rest } = params;\n  if (isAppInSignerMode() === forSignerMode) {\n    return <Route {...rest} component={Component} />;\n  }\n  return null;\n};\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Route path=\"/home\" component={HomePage} />\n\n      <XmlBuilderRoute\n        path=\"/documents/create\"\n        component={DocumentsPage}\n        exact\n        forSignerMode={false}\n      />\n\n      <XmlBuilderRoute\n        path=\"/organizations/list\"\n        component={OrganizationListPage}\n        forSignerMode={true}\n      />\n      <XmlBuilderRoute\n        path=\"/organizations/create\"\n        component={OrganizationPage}\n        forSignerMode={true}\n      />\n      <XmlBuilderRoute\n        path=\"/organizations/edit/:organizationId\"\n        component={OrganizationPage}\n        forSignerMode={true}\n      />\n      <XmlBuilderRoute\n        path=\"/organizations/manage/:organizationId/keys\"\n        component={KeysPage}\n        forSignerMode={true}\n      />\n      <XmlBuilderRoute\n        path=\"/organizations/documents/:organizationId/create\"\n        component={DocumentsPage}\n        forSignerMode={true}\n      />\n\n      <Route path=\"/error/403\" component={NotFound403} />\n      <Route path=\"/error/404\" component={NotFound404} />\n      <Route path=\"/error/503\" component={ServiceUnavailable503} />\n\n      <Route path=\"/\" render={() => <Redirect to={\"/home\"} />} />\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Page,\n  PageSidebar,\n  Nav,\n  NavItem,\n  PageHeader,\n  Brand,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  SkipToContent,\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  NavGroup\n} from \"@patternfly/react-core\";\nimport { css } from \"@patternfly/react-styles\";\nimport accessibleStyles from \"@patternfly/react-styles/css/utilities/Accessibility/accessibility\";\nimport { HelpIcon, HomeIcon } from \"@patternfly/react-icons\";\nimport imgBrandNavBar from \"../../../logo-navbar.svg\";\nimport { OrganizationRepresentation } from \"../../../models/xml-builder\";\nimport brandImg from \"../../../logo.png\";\nimport { isAppInSignerMode } from \"../../../Utilities/EnvUtils\";\n\ninterface Props {\n  contextOrganizations: OrganizationRepresentation[];\n  selectedContextOrganization: OrganizationRepresentation | null;\n}\n\ninterface State {\n  isAboutModalOpen: boolean;\n}\n\nclass BasicLayout extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isAboutModalOpen: false\n    };\n  }\n\n  handleModalToggle = () => {\n    this.setState(({ isAboutModalOpen }) => ({\n      isAboutModalOpen: !isAboutModalOpen\n    }));\n  };\n\n  renderHeader = () => {\n    const { isAboutModalOpen } = this.state;\n\n    const aboutModal = (\n      <AboutModal\n        isOpen={isAboutModalOpen}\n        onClose={this.handleModalToggle}\n        trademark=\"COPYRIGHT © 2020. PROJECT OPENUBL\"\n        brandImageSrc={brandImg}\n        brandImageAlt=\"Patternfly Logo\"\n        productName=\"Project OpenUBL - XML Builder\"\n      >\n        <TextContent>\n          <TextList component=\"dl\">\n            <TextListItem component=\"dt\">Version</TextListItem>\n            <TextListItem component=\"dd\">1.0.0.Final</TextListItem>\n            <TextListItem component=\"dt\">Source code</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://github.com/project-openubl/xml-builder\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n            </TextListItem>\n            <TextListItem component=\"dt\">Report issues</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://github.com/project-openubl/xml-builder/issues\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github issues\n              </a>\n            </TextListItem>\n            <TextListItem component=\"dt\">Documentation</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://project-openubl.gitbook.io/xml-builder/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Gitbook\n              </a>\n            </TextListItem>\n            <TextListItem component=\"dt\">Videos</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://www.youtube.com/channel/UChq3xxjyDgjcU346rp0bbtA/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Youtube\n              </a>\n            </TextListItem>\n            <TextListItem component=\"dt\">Rest API documentation</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://app.swaggerhub.com/organizations/project-openubl\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Swaggerhub\n              </a>\n            </TextListItem>\n            <TextListItem component=\"dt\">Licence</TextListItem>\n            <TextListItem component=\"dd\">\n              <a\n                href=\"https://github.com/project-openubl/xml-builder/blob/master/LICENSE\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Eclipse Public License - v 2.0\n              </a>\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n\n    const PageToolbar = (\n      <React.Fragment>\n        <Toolbar>\n          <ToolbarGroup\n            className={css(\n              accessibleStyles.screenReader,\n              accessibleStyles.visibleOnLg\n            )}\n          >\n            <ToolbarItem>\n              <Button\n                id=\"simple-example-uid-01\"\n                aria-label=\"Notifications actions\"\n                variant={ButtonVariant.plain}\n                onClick={this.handleModalToggle}\n              >\n                <HelpIcon />\n              </Button>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {aboutModal}\n      </React.Fragment>\n    );\n\n    return (\n      <PageHeader\n        logo={\n          <React.Fragment>\n            <Brand src={imgBrandNavBar} alt=\"Project OpenUBL\" />\n          </React.Fragment>\n        }\n        toolbar={PageToolbar}\n        showNavToggle\n      />\n    );\n  };\n\n  renderSidebar = () => {\n    const { contextOrganizations, selectedContextOrganization } = this.props;\n    const isSignerMode = isAppInSignerMode();\n\n    let ctxOrganization;\n    if (isSignerMode) {\n      if (selectedContextOrganization) {\n        ctxOrganization = selectedContextOrganization;\n      } else if (contextOrganizations.length > 0) {\n        ctxOrganization = contextOrganizations[0];\n      } else {\n        throw new Error(\"No context organization found\");\n      }\n    }\n\n    const PageNav = (\n      <Nav id=\"nav-primary-simple\" aria-label=\"Nav\" theme=\"dark\">\n        <NavGroup title=\"\">\n          <NavItem>\n            <NavLink to=\"/home\" activeClassName=\"pf-m-current\">\n              <HomeIcon />\n              &nbsp;Home\n            </NavLink>\n          </NavItem>\n        </NavGroup>\n        <NavGroup title=\"Consola administración\">\n          {isSignerMode && (\n            <NavItem key=\"organizations\">\n              <NavLink to=\"/organizations/list\" activeClassName=\"pf-m-current\">\n                Organizaciones\n              </NavLink>\n            </NavItem>\n          )}\n          {isSignerMode && ctxOrganization && (\n            <NavItem key=\"keys\">\n              <NavLink\n                to={`/organizations/manage/${ctxOrganization.id}/keys`}\n                activeClassName=\"pf-m-current\"\n              >\n                Certificados digitales\n              </NavLink>\n            </NavItem>\n          )}\n          {isSignerMode && ctxOrganization && (\n            <NavItem key=\"documents\">\n              <NavLink\n                to={`/organizations/documents/${ctxOrganization.id}/create`}\n                activeClassName=\"pf-m-current\"\n              >\n                Comprobantes electrónicos\n              </NavLink>\n            </NavItem>\n          )}\n\n          {!isSignerMode && (\n            <NavItem key=\"documents\">\n              <NavLink to={`/documents/create`} activeClassName=\"pf-m-current\">\n                Comprobantes electrónicos\n              </NavLink>\n            </NavItem>\n          )}\n        </NavGroup>\n      </Nav>\n    );\n\n    return <PageSidebar nav={PageNav} theme=\"dark\" />;\n  };\n\n  renderPageSkipToContent = () => {\n    return (\n      <SkipToContent href=\"#primary-app-container\">\n        Skip to Content\n      </SkipToContent>\n    );\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={this.renderHeader()}\n          sidebar={this.renderSidebar()}\n          isManagedSidebar\n          skipToContent={this.renderPageSkipToContent()}\n        >\n          {children}\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BasicLayout;\n","import BasicLayout from \"./BasicLayout\";\nimport { connect } from \"react-redux\";\nimport { createMapStateToProps } from \"../../../store/common\";\nimport { organizationContextSelectors } from \"../../../store/organizationContext\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  contextOrganizations: organizationContextSelectors.organizations(state) || [],\n  selectedContextOrganization: organizationContextSelectors.selectedOrganization(state) || null\n}));\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicLayout);\n","import { Button, Modal, ButtonVariant } from \"@patternfly/react-core\";\nimport React from \"react\";\nimport \"./DeleteDialog.scss\";\nimport { deleteDialogActions } from \"../../store/deleteDialog\";\n\ninterface Props {\n  onDelete: () => void;\n  onCancel: typeof deleteDialogActions.closeModal;\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n}\n\ninterface State {}\n\nclass DeleteDialogBase extends React.Component<Props, State> {\n  public render() {\n    const {\n      type,\n      name,\n      onDelete,\n      onCancel,\n      isOpen,\n      isProcessing,\n      isError\n    } = this.props;\n\n    return (\n      <Modal\n        isSmall={true}\n        title={`Delete ${name}?`}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={isOpen}\n        actions={[\n          <Button\n            key=\"confirm\"\n            isDisabled={isProcessing}\n            variant={ButtonVariant.danger}\n            onClick={onDelete}\n          >\n            Delete {`${type}`}\n          </Button>,\n          <Button\n            key=\"cancel\"\n            isDisabled={isProcessing}\n            variant={ButtonVariant.link}\n            onClick={() => {\n              onCancel();\n            }}\n          >\n            Cancel\n          </Button>\n        ]}\n      >\n        {isError\n          ? `Ops! There was a problem while deleting the ${type}.`\n          : `¿Estas seguro de querer eliminar este ${type}? Esta acción eliminará todos los datos asociados a esta ${type} permanentemente.`}\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteDialogBase;\n","import { connect } from \"react-redux\";\nimport DeleteDialogBase from \"./DeleteDialog\";\nimport {\n  deleteDialogSelectors,\n  deleteDialogActions\n} from \"../../store/deleteDialog\";\nimport { createMapStateToProps } from \"../../store/common\";\n\nexport default connect(\n  createMapStateToProps(state => ({\n    onDelete: deleteDialogSelectors.onDelete(state),\n    isOpen: deleteDialogSelectors.isOpen(state),\n    isProcessing: deleteDialogSelectors.isProcessing(state),\n    isError: deleteDialogSelectors.isError(state),\n    name: deleteDialogSelectors.name(state),\n    type: deleteDialogSelectors.type(state)\n  })),\n  {\n    onCancel: deleteDialogActions.closeModal\n  }\n)(DeleteDialogBase);\n","import XmlBuilderComponent from \"./XmlBuilderComponent\";\n\nexport default XmlBuilderComponent;\n","import React from \"react\";\nimport { isAppInSignerMode } from \"../../Utilities/EnvUtils\";\n\ninterface Props {\n  whenSignerComponent: any;\n  elseComponent?: any;\n}\n\ninterface State {}\n\nclass XmlBuilderComponent extends React.Component<Props, State> {\n  render() {\n    const {\n      children,\n      whenSignerComponent: SignerComponent,\n      elseComponent: NoSignerComponent,\n      ...rest\n    } = this.props;\n\n    if (isAppInSignerMode()) {\n      return <SignerComponent {...rest}>{children}</SignerComponent>;\n    } else {\n      if (NoSignerComponent) {\n        return <NoSignerComponent>{children}</NoSignerComponent>;\n      } else {\n        return <React.Fragment>{children}</React.Fragment>;\n      }\n    }\n  }\n}\n\nexport default XmlBuilderComponent;\n","import React from \"react\";\nimport { OrganizationRepresentation } from \"../../models/xml-builder\";\nimport { FetchStatus } from \"../../store/common\";\nimport { AxiosError } from \"axios\";\nimport { Bullseye } from \"@patternfly/react-core\";\n\ninterface StateToProps {\n  organizations: OrganizationRepresentation[];\n  error: AxiosError<any> | null;\n  status: FetchStatus | null;\n}\n\ninterface DispatchToProps {\n  fetchOrganizations: () => any;\n}\n\ninterface Props extends StateToProps, DispatchToProps {}\n\ninterface State {}\n\nclass OrganizationContextLoader extends React.Component<Props, State> {\n  componentDidMount() {\n    const { fetchOrganizations } = this.props;\n    fetchOrganizations();\n  }\n\n  render() {\n    const { status, children } = this.props;\n\n    switch (status) {\n      case \"complete\":\n        return <React.Fragment>{children}</React.Fragment>;\n      default:\n        return (\n          <React.Fragment>\n            <Bullseye>Loading...</Bullseye>\n          </React.Fragment>\n        );\n    }\n  }\n}\n\nexport default OrganizationContextLoader;\n","import { connect } from \"react-redux\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport {\n  organizationContextSelectors,\n  organizationContextActions\n} from \"../../store/organizationContext\";\nimport OrganizationContextLoader from \"./OrganizationContextLoader\";\n\nconst mapStateToProps = createMapStateToProps(state => ({\n  organizations: organizationContextSelectors.organizations(state) || [],\n  error: organizationContextSelectors.error(state),\n  status: organizationContextSelectors.status(state)\n}));\n\nconst mapDispatchToProps = {\n  fetchOrganizations: organizationContextActions.fetchOrganizations\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationContextLoader);\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { AppRoutes } from \"./Routes\";\n\nimport \"./App.css\";\nimport \"./App.scss\";\nimport BasicLayout from \"./Pages/Layout/BasicLayout\";\nimport DeleteMessageDialog from \"./SmartComponents/DeleteDialog\";\nimport XmlBuilderComponent from \"./PresentationalComponents/XmlBuilderComponent\";\nimport OrganizationContextLoader from \"./SmartComponents/OrganizationContextLoader\";\n\nimport \"@redhat-cloud-services/frontend-components-notifications/index.css\";\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\n\nconst App: React.FC = () => {\n  const NotificationsPortal =\n    frontendComponentsNotifications.NotificationsPortal;\n\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <XmlBuilderComponent whenSignerComponent={OrganizationContextLoader}>\n          <BasicLayout>\n            <AppRoutes />\n            <DeleteMessageDialog />\n            <NotificationsPortal />\n          </BasicLayout>\n        </XmlBuilderComponent>\n      </HashRouter>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { StateType } from \"typesafe-actions\";\n\nimport { deleteDialogStateKey, deleteDialogReducer } from \"./deleteDialog\";\nimport {\n  organizationListStateKey,\n  organizationListReducer\n} from \"./organizationList\";\nimport {\n  organizationContextReducer,\n  organizationContextStateKey\n} from \"./organizationContext\";\nimport { organizationStateKey, organizationReducer } from \"./organization\";\nimport {\n  organizationKeysStateKey,\n  organizationKeysReducer\n} from \"./organizationKeys\";\nimport {\n  organizationComponentsStateKey,\n  organizationComponentsReducer\n} from \"./organizationComponents\";\nimport { componentStateKey, componentReducer } from \"./organizationComponent\";\nimport { serverInfoStateKey, serverInfoReducer } from \"./serverInfo\";\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\n\nexport type RootState = StateType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  notifications: frontendComponentsNotifications.notifications,\n  [deleteDialogStateKey]: deleteDialogReducer,\n  [organizationListStateKey]: organizationListReducer,\n  [organizationContextStateKey]: organizationContextReducer,\n  [organizationStateKey]: organizationReducer,\n  [organizationKeysStateKey]: organizationKeysReducer,\n  [organizationComponentsStateKey]: organizationComponentsReducer,\n  [componentStateKey]: componentReducer,\n  [serverInfoStateKey]: serverInfoReducer\n});\n","import axios from \"axios\";\n\nexport const API_BASE_URL = \"/api\";\n\nexport const initApi = () => {\n  axios.defaults.baseURL = `${API_BASE_URL}`;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport { initApi } from \"./api/apiInit\";\n\ninitApi();\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./rootReducer\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(logger, thunk))\n  );\n}\n"],"sourceRoot":""}